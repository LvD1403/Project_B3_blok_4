
bin\Debug\project_b3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000100  00800200  00000c54  00000d08  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000c54  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800300  00800300  00000e08  2**0
                  ALLOC
  3 .fuse         00000003  00820000  00820000  00000e08  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .debug_aranges 00000140  00000000  00000000  00000e0b  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000229  00000000  00000000  00000f4b  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000134f  00000000  00000000  00001174  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b2a  00000000  00000000  000024c3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000c65  00000000  00000000  00002fed  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001d0  00000000  00000000  00003c54  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000375  00000000  00000000  00003e24  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000003f2  00000000  00000000  00004199  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__ctors_end>
   4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
   8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
   c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  10:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  14:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  18:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  1c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  20:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  24:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  28:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  2c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  30:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  34:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  38:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  3c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  40:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  44:	0c 94 24 02 	jmp	0x448	; 0x448 <__vector_17>
  48:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  4c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  50:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  54:	0c 94 9f 02 	jmp	0x53e	; 0x53e <__vector_21>
  58:	0c 94 c6 02 	jmp	0x58c	; 0x58c <__vector_22>
  5c:	0c 94 4f 02 	jmp	0x49e	; 0x49e <__vector_23>
  60:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  64:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  68:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  6c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  70:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  74:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  78:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  7c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  80:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  84:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  88:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  8c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  90:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  94:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  98:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  9c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  a0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  a4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  a8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  ac:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  b0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  b4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  b8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  bc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  c0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  c4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  c8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  cc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  d0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  d4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  d8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  dc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  e0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	13 e0       	ldi	r17, 0x03	; 3
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	e4 e5       	ldi	r30, 0x54	; 84
  fc:	fc e0       	ldi	r31, 0x0C	; 12
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a0 30       	cpi	r26, 0x00	; 0
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	13 e0       	ldi	r17, 0x03	; 3
 110:	a0 e0       	ldi	r26, 0x00	; 0
 112:	b3 e0       	ldi	r27, 0x03	; 3
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	a2 30       	cpi	r26, 0x02	; 2
 11a:	b1 07       	cpc	r27, r17
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	0e 94 95 00 	call	0x12a	; 0x12a <main>
 122:	0c 94 28 06 	jmp	0xc50	; 0xc50 <_exit>

00000126 <__bad_interrupt>:
 126:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000012a <main>:
#include "Header.h"



int main(void)
{
 12a:	df 93       	push	r29
 12c:	cf 93       	push	r28
 12e:	cd b7       	in	r28, 0x3d	; 61
 130:	de b7       	in	r29, 0x3e	; 62
    init();
 132:	0e 94 a6 00 	call	0x14c	; 0x14c <init>
    init_motor();
 136:	0e 94 ed 02 	call	0x5da	; 0x5da <init_motor>
    while(1)
    {
            rechte_lijn();
 13a:	0e 94 e5 00 	call	0x1ca	; 0x1ca <rechte_lijn>
            bocht_links();
 13e:	0e 94 43 01 	call	0x286	; 0x286 <bocht_links>
            rechte_lijn();
 142:	0e 94 e5 00 	call	0x1ca	; 0x1ca <rechte_lijn>
            bocht_rechts();
 146:	0e 94 ae 01 	call	0x35c	; 0x35c <bocht_rechts>
 14a:	f7 cf       	rjmp	.-18     	; 0x13a <main+0x10>

0000014c <init>:
#include <avr/io.h>
#include <avr/interrupt.h>
#include "Header.h"

void init (void)
{
 14c:	df 93       	push	r29
 14e:	cf 93       	push	r28
 150:	cd b7       	in	r28, 0x3d	; 61
 152:	de b7       	in	r29, 0x3e	; 62
    DDRE |= (1 << PE3);     //pwm links
 154:	ad e2       	ldi	r26, 0x2D	; 45
 156:	b0 e0       	ldi	r27, 0x00	; 0
 158:	ed e2       	ldi	r30, 0x2D	; 45
 15a:	f0 e0       	ldi	r31, 0x00	; 0
 15c:	80 81       	ld	r24, Z
 15e:	88 60       	ori	r24, 0x08	; 8
 160:	8c 93       	st	X, r24
    DDRE |= (1 << PE4);     //pwm rechts
 162:	ad e2       	ldi	r26, 0x2D	; 45
 164:	b0 e0       	ldi	r27, 0x00	; 0
 166:	ed e2       	ldi	r30, 0x2D	; 45
 168:	f0 e0       	ldi	r31, 0x00	; 0
 16a:	80 81       	ld	r24, Z
 16c:	80 61       	ori	r24, 0x10	; 16
 16e:	8c 93       	st	X, r24
    DDRH |= (1 << PH4);     //lampje
 170:	a1 e0       	ldi	r26, 0x01	; 1
 172:	b1 e0       	ldi	r27, 0x01	; 1
 174:	e1 e0       	ldi	r30, 0x01	; 1
 176:	f1 e0       	ldi	r31, 0x01	; 1
 178:	80 81       	ld	r24, Z
 17a:	80 61       	ori	r24, 0x10	; 16
 17c:	8c 93       	st	X, r24
    DDRE |= (1 << PJ1);     //motorrichting links
 17e:	ad e2       	ldi	r26, 0x2D	; 45
 180:	b0 e0       	ldi	r27, 0x00	; 0
 182:	ed e2       	ldi	r30, 0x2D	; 45
 184:	f0 e0       	ldi	r31, 0x00	; 0
 186:	80 81       	ld	r24, Z
 188:	82 60       	ori	r24, 0x02	; 2
 18a:	8c 93       	st	X, r24
    DDRE |= (1 << PJ0);     //motorrichting rechts
 18c:	ad e2       	ldi	r26, 0x2D	; 45
 18e:	b0 e0       	ldi	r27, 0x00	; 0
 190:	ed e2       	ldi	r30, 0x2D	; 45
 192:	f0 e0       	ldi	r31, 0x00	; 0
 194:	80 81       	ld	r24, Z
 196:	81 60       	ori	r24, 0x01	; 1
 198:	8c 93       	st	X, r24
    DDRA &= ~(1 << PA0);    //Nadering links
 19a:	a1 e2       	ldi	r26, 0x21	; 33
 19c:	b0 e0       	ldi	r27, 0x00	; 0
 19e:	e1 e2       	ldi	r30, 0x21	; 33
 1a0:	f0 e0       	ldi	r31, 0x00	; 0
 1a2:	80 81       	ld	r24, Z
 1a4:	8e 7f       	andi	r24, 0xFE	; 254
 1a6:	8c 93       	st	X, r24
    DDRA &= ~(1 << PA1);    //Nadering rechts
 1a8:	a1 e2       	ldi	r26, 0x21	; 33
 1aa:	b0 e0       	ldi	r27, 0x00	; 0
 1ac:	e1 e2       	ldi	r30, 0x21	; 33
 1ae:	f0 e0       	ldi	r31, 0x00	; 0
 1b0:	80 81       	ld	r24, Z
 1b2:	8d 7f       	andi	r24, 0xFD	; 253
 1b4:	8c 93       	st	X, r24
    DDRF |= (1 << PF0);     //testlampje
 1b6:	a0 e3       	ldi	r26, 0x30	; 48
 1b8:	b0 e0       	ldi	r27, 0x00	; 0
 1ba:	e0 e3       	ldi	r30, 0x30	; 48
 1bc:	f0 e0       	ldi	r31, 0x00	; 0
 1be:	80 81       	ld	r24, Z
 1c0:	81 60       	ori	r24, 0x01	; 1
 1c2:	8c 93       	st	X, r24
}
 1c4:	cf 91       	pop	r28
 1c6:	df 91       	pop	r29
 1c8:	08 95       	ret

000001ca <rechte_lijn>:

void rechte_lijn(void)
{
 1ca:	df 93       	push	r29
 1cc:	cf 93       	push	r28
 1ce:	0f 92       	push	r0
 1d0:	0f 92       	push	r0
 1d2:	cd b7       	in	r28, 0x3d	; 61
 1d4:	de b7       	in	r29, 0x3e	; 62
    //PORTF &= ~(1 << PF0);
    int vlag;
    TCNT1 = 0;
 1d6:	e4 e8       	ldi	r30, 0x84	; 132
 1d8:	f0 e0       	ldi	r31, 0x00	; 0
 1da:	11 82       	std	Z+1, r1	; 0x01
 1dc:	10 82       	st	Z, r1
    Grote_klok = 0;
 1de:	10 92 01 03 	sts	0x0301, r1
 1e2:	10 92 00 03 	sts	0x0300, r1
 1e6:	45 c0       	rjmp	.+138    	; 0x272 <rechte_lijn+0xa8>
    while (vlag)
    {
        if ((!(PINA & (1 << PA0))) && (!(PINA & (1 << PA1))))
 1e8:	e0 e2       	ldi	r30, 0x20	; 32
 1ea:	f0 e0       	ldi	r31, 0x00	; 0
 1ec:	80 81       	ld	r24, Z
 1ee:	88 2f       	mov	r24, r24
 1f0:	90 e0       	ldi	r25, 0x00	; 0
 1f2:	81 70       	andi	r24, 0x01	; 1
 1f4:	90 70       	andi	r25, 0x00	; 0
 1f6:	00 97       	sbiw	r24, 0x00	; 0
 1f8:	79 f4       	brne	.+30     	; 0x218 <rechte_lijn+0x4e>
 1fa:	e0 e2       	ldi	r30, 0x20	; 32
 1fc:	f0 e0       	ldi	r31, 0x00	; 0
 1fe:	80 81       	ld	r24, Z
 200:	88 2f       	mov	r24, r24
 202:	90 e0       	ldi	r25, 0x00	; 0
 204:	82 70       	andi	r24, 0x02	; 2
 206:	90 70       	andi	r25, 0x00	; 0
 208:	00 97       	sbiw	r24, 0x00	; 0
 20a:	31 f4       	brne	.+12     	; 0x218 <rechte_lijn+0x4e>
        {
            motor(170,170);
 20c:	8a ea       	ldi	r24, 0xAA	; 170
 20e:	90 e0       	ldi	r25, 0x00	; 0
 210:	6a ea       	ldi	r22, 0xAA	; 170
 212:	70 e0       	ldi	r23, 0x00	; 0
 214:	0e 94 25 03 	call	0x64a	; 0x64a <motor>
        }
        if (PINA &(1 << PA0))
 218:	e0 e2       	ldi	r30, 0x20	; 32
 21a:	f0 e0       	ldi	r31, 0x00	; 0
 21c:	80 81       	ld	r24, Z
 21e:	88 2f       	mov	r24, r24
 220:	90 e0       	ldi	r25, 0x00	; 0
 222:	81 70       	andi	r24, 0x01	; 1
 224:	90 70       	andi	r25, 0x00	; 0
 226:	88 23       	and	r24, r24
 228:	31 f0       	breq	.+12     	; 0x236 <rechte_lijn+0x6c>
        {
            motor (0,170);
 22a:	80 e0       	ldi	r24, 0x00	; 0
 22c:	90 e0       	ldi	r25, 0x00	; 0
 22e:	6a ea       	ldi	r22, 0xAA	; 170
 230:	70 e0       	ldi	r23, 0x00	; 0
 232:	0e 94 25 03 	call	0x64a	; 0x64a <motor>
        }
        if (PINA &(1 << PA1))
 236:	e0 e2       	ldi	r30, 0x20	; 32
 238:	f0 e0       	ldi	r31, 0x00	; 0
 23a:	80 81       	ld	r24, Z
 23c:	88 2f       	mov	r24, r24
 23e:	90 e0       	ldi	r25, 0x00	; 0
 240:	82 70       	andi	r24, 0x02	; 2
 242:	90 70       	andi	r25, 0x00	; 0
 244:	00 97       	sbiw	r24, 0x00	; 0
 246:	31 f0       	breq	.+12     	; 0x254 <rechte_lijn+0x8a>
        {
            motor (170,0);
 248:	8a ea       	ldi	r24, 0xAA	; 170
 24a:	90 e0       	ldi	r25, 0x00	; 0
 24c:	60 e0       	ldi	r22, 0x00	; 0
 24e:	70 e0       	ldi	r23, 0x00	; 0
 250:	0e 94 25 03 	call	0x64a	; 0x64a <motor>
        }

        if (Grote_klok >= 180)//stel de boog begint te laat dan kun je de waarde veranderen nu 18.0 seconden
 254:	80 91 00 03 	lds	r24, 0x0300
 258:	90 91 01 03 	lds	r25, 0x0301
 25c:	84 3b       	cpi	r24, 0xB4	; 180
 25e:	91 05       	cpc	r25, r1
 260:	44 f0       	brlt	.+16     	; 0x272 <rechte_lijn+0xa8>
        {
            vlag = 1;
 262:	81 e0       	ldi	r24, 0x01	; 1
 264:	90 e0       	ldi	r25, 0x00	; 0
 266:	9a 83       	std	Y+2, r25	; 0x02
 268:	89 83       	std	Y+1, r24	; 0x01
            PORTF = (1<<PF0);
 26a:	e1 e3       	ldi	r30, 0x31	; 49
 26c:	f0 e0       	ldi	r31, 0x00	; 0
 26e:	81 e0       	ldi	r24, 0x01	; 1
 270:	80 83       	st	Z, r24
{
    //PORTF &= ~(1 << PF0);
    int vlag;
    TCNT1 = 0;
    Grote_klok = 0;
    while (vlag)
 272:	89 81       	ldd	r24, Y+1	; 0x01
 274:	9a 81       	ldd	r25, Y+2	; 0x02
 276:	00 97       	sbiw	r24, 0x00	; 0
 278:	09 f0       	breq	.+2      	; 0x27c <rechte_lijn+0xb2>
 27a:	b6 cf       	rjmp	.-148    	; 0x1e8 <rechte_lijn+0x1e>
            vlag = 1;
            PORTF = (1<<PF0);
        }
    }

}
 27c:	0f 90       	pop	r0
 27e:	0f 90       	pop	r0
 280:	cf 91       	pop	r28
 282:	df 91       	pop	r29
 284:	08 95       	ret

00000286 <bocht_links>:


void bocht_links (void)
{
 286:	df 93       	push	r29
 288:	cf 93       	push	r28
 28a:	0f 92       	push	r0
 28c:	0f 92       	push	r0
 28e:	cd b7       	in	r28, 0x3d	; 61
 290:	de b7       	in	r29, 0x3e	; 62
    int vlag;
    TCNT1 = 0;
 292:	e4 e8       	ldi	r30, 0x84	; 132
 294:	f0 e0       	ldi	r31, 0x00	; 0
 296:	11 82       	std	Z+1, r1	; 0x01
 298:	10 82       	st	Z, r1
    Grote_klok = 0;
 29a:	10 92 01 03 	sts	0x0301, r1
 29e:	10 92 00 03 	sts	0x0300, r1
 2a2:	45 c0       	rjmp	.+138    	; 0x32e <bocht_links+0xa8>
    while ((PINA &(1 << PA0)) && (vlag == 1))
    {
        motor(35,170); //bocht naar rechts maken
 2a4:	83 e2       	ldi	r24, 0x23	; 35
 2a6:	90 e0       	ldi	r25, 0x00	; 0
 2a8:	6a ea       	ldi	r22, 0xAA	; 170
 2aa:	70 e0       	ldi	r23, 0x00	; 0
 2ac:	0e 94 25 03 	call	0x64a	; 0x64a <motor>
        if ((PINA &(1 << PA0)) && (Grote_klok <= 11.3)) //waarde
 2b0:	e0 e2       	ldi	r30, 0x20	; 32
 2b2:	f0 e0       	ldi	r31, 0x00	; 0
 2b4:	80 81       	ld	r24, Z
 2b6:	88 2f       	mov	r24, r24
 2b8:	90 e0       	ldi	r25, 0x00	; 0
 2ba:	81 70       	andi	r24, 0x01	; 1
 2bc:	90 70       	andi	r25, 0x00	; 0
 2be:	88 23       	and	r24, r24
 2c0:	d1 f0       	breq	.+52     	; 0x2f6 <bocht_links+0x70>
 2c2:	80 91 00 03 	lds	r24, 0x0300
 2c6:	90 91 01 03 	lds	r25, 0x0301
 2ca:	aa 27       	eor	r26, r26
 2cc:	97 fd       	sbrc	r25, 7
 2ce:	a0 95       	com	r26
 2d0:	ba 2f       	mov	r27, r26
 2d2:	bc 01       	movw	r22, r24
 2d4:	cd 01       	movw	r24, r26
 2d6:	0e 94 9e 03 	call	0x73c	; 0x73c <__floatsisf>
 2da:	dc 01       	movw	r26, r24
 2dc:	cb 01       	movw	r24, r22
 2de:	bc 01       	movw	r22, r24
 2e0:	cd 01       	movw	r24, r26
 2e2:	2d ec       	ldi	r18, 0xCD	; 205
 2e4:	3c ec       	ldi	r19, 0xCC	; 204
 2e6:	44 e3       	ldi	r20, 0x34	; 52
 2e8:	51 e4       	ldi	r21, 0x41	; 65
 2ea:	0e 94 6e 03 	call	0x6dc	; 0x6dc <__lesf2>
 2ee:	18 16       	cp	r1, r24
 2f0:	14 f0       	brlt	.+4      	; 0x2f6 <bocht_links+0x70>
        {
            error();
 2f2:	0e 94 19 02 	call	0x432	; 0x432 <error>
        }
        if (Grote_klok >= 11.3)
 2f6:	80 91 00 03 	lds	r24, 0x0300
 2fa:	90 91 01 03 	lds	r25, 0x0301
 2fe:	aa 27       	eor	r26, r26
 300:	97 fd       	sbrc	r25, 7
 302:	a0 95       	com	r26
 304:	ba 2f       	mov	r27, r26
 306:	bc 01       	movw	r22, r24
 308:	cd 01       	movw	r24, r26
 30a:	0e 94 9e 03 	call	0x73c	; 0x73c <__floatsisf>
 30e:	dc 01       	movw	r26, r24
 310:	cb 01       	movw	r24, r22
 312:	bc 01       	movw	r22, r24
 314:	cd 01       	movw	r24, r26
 316:	2d ec       	ldi	r18, 0xCD	; 205
 318:	3c ec       	ldi	r19, 0xCC	; 204
 31a:	44 e3       	ldi	r20, 0x34	; 52
 31c:	51 e4       	ldi	r21, 0x41	; 65
 31e:	0e 94 3e 03 	call	0x67c	; 0x67c <__gesf2>
 322:	88 23       	and	r24, r24
 324:	24 f0       	brlt	.+8      	; 0x32e <bocht_links+0xa8>
        {
            vlag = 1;
 326:	81 e0       	ldi	r24, 0x01	; 1
 328:	90 e0       	ldi	r25, 0x00	; 0
 32a:	9a 83       	std	Y+2, r25	; 0x02
 32c:	89 83       	std	Y+1, r24	; 0x01
void bocht_links (void)
{
    int vlag;
    TCNT1 = 0;
    Grote_klok = 0;
    while ((PINA &(1 << PA0)) && (vlag == 1))
 32e:	e0 e2       	ldi	r30, 0x20	; 32
 330:	f0 e0       	ldi	r31, 0x00	; 0
 332:	80 81       	ld	r24, Z
 334:	88 2f       	mov	r24, r24
 336:	90 e0       	ldi	r25, 0x00	; 0
 338:	81 70       	andi	r24, 0x01	; 1
 33a:	90 70       	andi	r25, 0x00	; 0
 33c:	98 2f       	mov	r25, r24
 33e:	81 e0       	ldi	r24, 0x01	; 1
 340:	89 27       	eor	r24, r25
 342:	88 23       	and	r24, r24
 344:	31 f4       	brne	.+12     	; 0x352 <bocht_links+0xcc>
 346:	89 81       	ldd	r24, Y+1	; 0x01
 348:	9a 81       	ldd	r25, Y+2	; 0x02
 34a:	81 30       	cpi	r24, 0x01	; 1
 34c:	91 05       	cpc	r25, r1
 34e:	09 f4       	brne	.+2      	; 0x352 <bocht_links+0xcc>
 350:	a9 cf       	rjmp	.-174    	; 0x2a4 <bocht_links+0x1e>
            vlag = 1;
        }

    }

}
 352:	0f 90       	pop	r0
 354:	0f 90       	pop	r0
 356:	cf 91       	pop	r28
 358:	df 91       	pop	r29
 35a:	08 95       	ret

0000035c <bocht_rechts>:

void bocht_rechts (void)
{
 35c:	df 93       	push	r29
 35e:	cf 93       	push	r28
 360:	0f 92       	push	r0
 362:	0f 92       	push	r0
 364:	cd b7       	in	r28, 0x3d	; 61
 366:	de b7       	in	r29, 0x3e	; 62
    int vlag;
    TCNT1 = 0;
 368:	e4 e8       	ldi	r30, 0x84	; 132
 36a:	f0 e0       	ldi	r31, 0x00	; 0
 36c:	11 82       	std	Z+1, r1	; 0x01
 36e:	10 82       	st	Z, r1
    Grote_klok = 0;
 370:	10 92 01 03 	sts	0x0301, r1
 374:	10 92 00 03 	sts	0x0300, r1
 378:	45 c0       	rjmp	.+138    	; 0x404 <bocht_rechts+0xa8>
    while ((PINA &(1 << PA0)) && (vlag == 1))
    {
        motor(170,35); //bocht naar rechts maken
 37a:	8a ea       	ldi	r24, 0xAA	; 170
 37c:	90 e0       	ldi	r25, 0x00	; 0
 37e:	63 e2       	ldi	r22, 0x23	; 35
 380:	70 e0       	ldi	r23, 0x00	; 0
 382:	0e 94 25 03 	call	0x64a	; 0x64a <motor>
        if ((PINA &(1 << PA0)) && (Grote_klok <= 11.3)) //waarde
 386:	e0 e2       	ldi	r30, 0x20	; 32
 388:	f0 e0       	ldi	r31, 0x00	; 0
 38a:	80 81       	ld	r24, Z
 38c:	88 2f       	mov	r24, r24
 38e:	90 e0       	ldi	r25, 0x00	; 0
 390:	81 70       	andi	r24, 0x01	; 1
 392:	90 70       	andi	r25, 0x00	; 0
 394:	88 23       	and	r24, r24
 396:	d1 f0       	breq	.+52     	; 0x3cc <bocht_rechts+0x70>
 398:	80 91 00 03 	lds	r24, 0x0300
 39c:	90 91 01 03 	lds	r25, 0x0301
 3a0:	aa 27       	eor	r26, r26
 3a2:	97 fd       	sbrc	r25, 7
 3a4:	a0 95       	com	r26
 3a6:	ba 2f       	mov	r27, r26
 3a8:	bc 01       	movw	r22, r24
 3aa:	cd 01       	movw	r24, r26
 3ac:	0e 94 9e 03 	call	0x73c	; 0x73c <__floatsisf>
 3b0:	dc 01       	movw	r26, r24
 3b2:	cb 01       	movw	r24, r22
 3b4:	bc 01       	movw	r22, r24
 3b6:	cd 01       	movw	r24, r26
 3b8:	2d ec       	ldi	r18, 0xCD	; 205
 3ba:	3c ec       	ldi	r19, 0xCC	; 204
 3bc:	44 e3       	ldi	r20, 0x34	; 52
 3be:	51 e4       	ldi	r21, 0x41	; 65
 3c0:	0e 94 6e 03 	call	0x6dc	; 0x6dc <__lesf2>
 3c4:	18 16       	cp	r1, r24
 3c6:	14 f0       	brlt	.+4      	; 0x3cc <bocht_rechts+0x70>
        {
            error();
 3c8:	0e 94 19 02 	call	0x432	; 0x432 <error>
        }
        if (Grote_klok >= 11.3)
 3cc:	80 91 00 03 	lds	r24, 0x0300
 3d0:	90 91 01 03 	lds	r25, 0x0301
 3d4:	aa 27       	eor	r26, r26
 3d6:	97 fd       	sbrc	r25, 7
 3d8:	a0 95       	com	r26
 3da:	ba 2f       	mov	r27, r26
 3dc:	bc 01       	movw	r22, r24
 3de:	cd 01       	movw	r24, r26
 3e0:	0e 94 9e 03 	call	0x73c	; 0x73c <__floatsisf>
 3e4:	dc 01       	movw	r26, r24
 3e6:	cb 01       	movw	r24, r22
 3e8:	bc 01       	movw	r22, r24
 3ea:	cd 01       	movw	r24, r26
 3ec:	2d ec       	ldi	r18, 0xCD	; 205
 3ee:	3c ec       	ldi	r19, 0xCC	; 204
 3f0:	44 e3       	ldi	r20, 0x34	; 52
 3f2:	51 e4       	ldi	r21, 0x41	; 65
 3f4:	0e 94 3e 03 	call	0x67c	; 0x67c <__gesf2>
 3f8:	88 23       	and	r24, r24
 3fa:	24 f0       	brlt	.+8      	; 0x404 <bocht_rechts+0xa8>
        {
            vlag = 1;
 3fc:	81 e0       	ldi	r24, 0x01	; 1
 3fe:	90 e0       	ldi	r25, 0x00	; 0
 400:	9a 83       	std	Y+2, r25	; 0x02
 402:	89 83       	std	Y+1, r24	; 0x01
void bocht_rechts (void)
{
    int vlag;
    TCNT1 = 0;
    Grote_klok = 0;
    while ((PINA &(1 << PA0)) && (vlag == 1))
 404:	e0 e2       	ldi	r30, 0x20	; 32
 406:	f0 e0       	ldi	r31, 0x00	; 0
 408:	80 81       	ld	r24, Z
 40a:	88 2f       	mov	r24, r24
 40c:	90 e0       	ldi	r25, 0x00	; 0
 40e:	81 70       	andi	r24, 0x01	; 1
 410:	90 70       	andi	r25, 0x00	; 0
 412:	98 2f       	mov	r25, r24
 414:	81 e0       	ldi	r24, 0x01	; 1
 416:	89 27       	eor	r24, r25
 418:	88 23       	and	r24, r24
 41a:	31 f4       	brne	.+12     	; 0x428 <bocht_rechts+0xcc>
 41c:	89 81       	ldd	r24, Y+1	; 0x01
 41e:	9a 81       	ldd	r25, Y+2	; 0x02
 420:	81 30       	cpi	r24, 0x01	; 1
 422:	91 05       	cpc	r25, r1
 424:	09 f4       	brne	.+2      	; 0x428 <bocht_rechts+0xcc>
 426:	a9 cf       	rjmp	.-174    	; 0x37a <bocht_rechts+0x1e>
            vlag = 1;
        }

    }

}
 428:	0f 90       	pop	r0
 42a:	0f 90       	pop	r0
 42c:	cf 91       	pop	r28
 42e:	df 91       	pop	r29
 430:	08 95       	ret

00000432 <error>:

void error (void) //om een probleem optelossen todat we een betere oplossing hebben of niet
{
 432:	df 93       	push	r29
 434:	cf 93       	push	r28
 436:	cd b7       	in	r28, 0x3d	; 61
 438:	de b7       	in	r29, 0x3e	; 62
    while (1)
    {
        motor(0,0);
 43a:	80 e0       	ldi	r24, 0x00	; 0
 43c:	90 e0       	ldi	r25, 0x00	; 0
 43e:	60 e0       	ldi	r22, 0x00	; 0
 440:	70 e0       	ldi	r23, 0x00	; 0
 442:	0e 94 25 03 	call	0x64a	; 0x64a <motor>
 446:	f9 cf       	rjmp	.-14     	; 0x43a <error+0x8>

00000448 <__vector_17>:
#include <avr/io.h>
#include <avr/interrupt.h>
#include "Header.h"

ISR(TIMER1_COMPA_vect)
{
 448:	1f 92       	push	r1
 44a:	0f 92       	push	r0
 44c:	0f b6       	in	r0, 0x3f	; 63
 44e:	0f 92       	push	r0
 450:	00 90 5b 00 	lds	r0, 0x005B
 454:	0f 92       	push	r0
 456:	11 24       	eor	r1, r1
 458:	8f 93       	push	r24
 45a:	9f 93       	push	r25
 45c:	ef 93       	push	r30
 45e:	ff 93       	push	r31
 460:	df 93       	push	r29
 462:	cf 93       	push	r28
 464:	cd b7       	in	r28, 0x3d	; 61
 466:	de b7       	in	r29, 0x3e	; 62
    TCNT1 = 0;
 468:	e4 e8       	ldi	r30, 0x84	; 132
 46a:	f0 e0       	ldi	r31, 0x00	; 0
 46c:	11 82       	std	Z+1, r1	; 0x01
 46e:	10 82       	st	Z, r1
    Grote_klok++;
 470:	80 91 00 03 	lds	r24, 0x0300
 474:	90 91 01 03 	lds	r25, 0x0301
 478:	01 96       	adiw	r24, 0x01	; 1
 47a:	90 93 01 03 	sts	0x0301, r25
 47e:	80 93 00 03 	sts	0x0300, r24
}
 482:	cf 91       	pop	r28
 484:	df 91       	pop	r29
 486:	ff 91       	pop	r31
 488:	ef 91       	pop	r30
 48a:	9f 91       	pop	r25
 48c:	8f 91       	pop	r24
 48e:	0f 90       	pop	r0
 490:	00 92 5b 00 	sts	0x005B, r0
 494:	0f 90       	pop	r0
 496:	0f be       	out	0x3f, r0	; 63
 498:	0f 90       	pop	r0
 49a:	1f 90       	pop	r1
 49c:	18 95       	reti

0000049e <__vector_23>:

ISR(TIMER0_OVF_vect)
{
 49e:	1f 92       	push	r1
 4a0:	0f 92       	push	r0
 4a2:	0f b6       	in	r0, 0x3f	; 63
 4a4:	0f 92       	push	r0
 4a6:	00 90 5b 00 	lds	r0, 0x005B
 4aa:	0f 92       	push	r0
 4ac:	11 24       	eor	r1, r1
 4ae:	8f 93       	push	r24
 4b0:	af 93       	push	r26
 4b2:	bf 93       	push	r27
 4b4:	ef 93       	push	r30
 4b6:	ff 93       	push	r31
 4b8:	df 93       	push	r29
 4ba:	cf 93       	push	r28
 4bc:	0f 92       	push	r0
 4be:	cd b7       	in	r28, 0x3d	; 61
 4c0:	de b7       	in	r29, 0x3e	; 62
    if (OCR0A == 0 && OCR0B == 0);
 4c2:	e7 e4       	ldi	r30, 0x47	; 71
 4c4:	f0 e0       	ldi	r31, 0x00	; 0
 4c6:	80 81       	ld	r24, Z
 4c8:	88 23       	and	r24, r24
 4ca:	19 f4       	brne	.+6      	; 0x4d2 <__vector_23+0x34>
 4cc:	e8 e4       	ldi	r30, 0x48	; 72
 4ce:	f0 e0       	ldi	r31, 0x00	; 0
 4d0:	80 81       	ld	r24, Z
    {
        PORTE &= ~(1<<PE4);
 4d2:	ae e2       	ldi	r26, 0x2E	; 46
 4d4:	b0 e0       	ldi	r27, 0x00	; 0
 4d6:	ee e2       	ldi	r30, 0x2E	; 46
 4d8:	f0 e0       	ldi	r31, 0x00	; 0
 4da:	80 81       	ld	r24, Z
 4dc:	8f 7e       	andi	r24, 0xEF	; 239
 4de:	8c 93       	st	X, r24
        PORTE &= ~(1<<PE3);
 4e0:	ae e2       	ldi	r26, 0x2E	; 46
 4e2:	b0 e0       	ldi	r27, 0x00	; 0
 4e4:	ee e2       	ldi	r30, 0x2E	; 46
 4e6:	f0 e0       	ldi	r31, 0x00	; 0
 4e8:	80 81       	ld	r24, Z
 4ea:	87 7f       	andi	r24, 0xF7	; 247
 4ec:	8c 93       	st	X, r24
    }
    if (OCR0A != 0)
 4ee:	e7 e4       	ldi	r30, 0x47	; 71
 4f0:	f0 e0       	ldi	r31, 0x00	; 0
 4f2:	80 81       	ld	r24, Z
 4f4:	88 23       	and	r24, r24
 4f6:	39 f0       	breq	.+14     	; 0x506 <__vector_23+0x68>
    {
        PORTE |= (1<<PE4);
 4f8:	ae e2       	ldi	r26, 0x2E	; 46
 4fa:	b0 e0       	ldi	r27, 0x00	; 0
 4fc:	ee e2       	ldi	r30, 0x2E	; 46
 4fe:	f0 e0       	ldi	r31, 0x00	; 0
 500:	80 81       	ld	r24, Z
 502:	80 61       	ori	r24, 0x10	; 16
 504:	8c 93       	st	X, r24
    }
    if (OCR0B != 0)
 506:	e8 e4       	ldi	r30, 0x48	; 72
 508:	f0 e0       	ldi	r31, 0x00	; 0
 50a:	80 81       	ld	r24, Z
 50c:	88 23       	and	r24, r24
 50e:	39 f0       	breq	.+14     	; 0x51e <__vector_23+0x80>
    {
        PORTE |= (1<<PE3);
 510:	ae e2       	ldi	r26, 0x2E	; 46
 512:	b0 e0       	ldi	r27, 0x00	; 0
 514:	ee e2       	ldi	r30, 0x2E	; 46
 516:	f0 e0       	ldi	r31, 0x00	; 0
 518:	80 81       	ld	r24, Z
 51a:	88 60       	ori	r24, 0x08	; 8
 51c:	8c 93       	st	X, r24
    }
}
 51e:	0f 90       	pop	r0
 520:	cf 91       	pop	r28
 522:	df 91       	pop	r29
 524:	ff 91       	pop	r31
 526:	ef 91       	pop	r30
 528:	bf 91       	pop	r27
 52a:	af 91       	pop	r26
 52c:	8f 91       	pop	r24
 52e:	0f 90       	pop	r0
 530:	00 92 5b 00 	sts	0x005B, r0
 534:	0f 90       	pop	r0
 536:	0f be       	out	0x3f, r0	; 63
 538:	0f 90       	pop	r0
 53a:	1f 90       	pop	r1
 53c:	18 95       	reti

0000053e <__vector_21>:

ISR(TIMER0_COMPA_vect)
{
 53e:	1f 92       	push	r1
 540:	0f 92       	push	r0
 542:	0f b6       	in	r0, 0x3f	; 63
 544:	0f 92       	push	r0
 546:	00 90 5b 00 	lds	r0, 0x005B
 54a:	0f 92       	push	r0
 54c:	11 24       	eor	r1, r1
 54e:	8f 93       	push	r24
 550:	af 93       	push	r26
 552:	bf 93       	push	r27
 554:	ef 93       	push	r30
 556:	ff 93       	push	r31
 558:	df 93       	push	r29
 55a:	cf 93       	push	r28
 55c:	cd b7       	in	r28, 0x3d	; 61
 55e:	de b7       	in	r29, 0x3e	; 62
    PORTE &= ~(1<<PE4);
 560:	ae e2       	ldi	r26, 0x2E	; 46
 562:	b0 e0       	ldi	r27, 0x00	; 0
 564:	ee e2       	ldi	r30, 0x2E	; 46
 566:	f0 e0       	ldi	r31, 0x00	; 0
 568:	80 81       	ld	r24, Z
 56a:	8f 7e       	andi	r24, 0xEF	; 239
 56c:	8c 93       	st	X, r24
}
 56e:	cf 91       	pop	r28
 570:	df 91       	pop	r29
 572:	ff 91       	pop	r31
 574:	ef 91       	pop	r30
 576:	bf 91       	pop	r27
 578:	af 91       	pop	r26
 57a:	8f 91       	pop	r24
 57c:	0f 90       	pop	r0
 57e:	00 92 5b 00 	sts	0x005B, r0
 582:	0f 90       	pop	r0
 584:	0f be       	out	0x3f, r0	; 63
 586:	0f 90       	pop	r0
 588:	1f 90       	pop	r1
 58a:	18 95       	reti

0000058c <__vector_22>:

ISR(TIMER0_COMPB_vect)
{
 58c:	1f 92       	push	r1
 58e:	0f 92       	push	r0
 590:	0f b6       	in	r0, 0x3f	; 63
 592:	0f 92       	push	r0
 594:	00 90 5b 00 	lds	r0, 0x005B
 598:	0f 92       	push	r0
 59a:	11 24       	eor	r1, r1
 59c:	8f 93       	push	r24
 59e:	af 93       	push	r26
 5a0:	bf 93       	push	r27
 5a2:	ef 93       	push	r30
 5a4:	ff 93       	push	r31
 5a6:	df 93       	push	r29
 5a8:	cf 93       	push	r28
 5aa:	cd b7       	in	r28, 0x3d	; 61
 5ac:	de b7       	in	r29, 0x3e	; 62
    PORTE &= ~(1<<PE3);
 5ae:	ae e2       	ldi	r26, 0x2E	; 46
 5b0:	b0 e0       	ldi	r27, 0x00	; 0
 5b2:	ee e2       	ldi	r30, 0x2E	; 46
 5b4:	f0 e0       	ldi	r31, 0x00	; 0
 5b6:	80 81       	ld	r24, Z
 5b8:	87 7f       	andi	r24, 0xF7	; 247
 5ba:	8c 93       	st	X, r24
}
 5bc:	cf 91       	pop	r28
 5be:	df 91       	pop	r29
 5c0:	ff 91       	pop	r31
 5c2:	ef 91       	pop	r30
 5c4:	bf 91       	pop	r27
 5c6:	af 91       	pop	r26
 5c8:	8f 91       	pop	r24
 5ca:	0f 90       	pop	r0
 5cc:	00 92 5b 00 	sts	0x005B, r0
 5d0:	0f 90       	pop	r0
 5d2:	0f be       	out	0x3f, r0	; 63
 5d4:	0f 90       	pop	r0
 5d6:	1f 90       	pop	r1
 5d8:	18 95       	reti

000005da <init_motor>:

void init_motor (void)
{
 5da:	df 93       	push	r29
 5dc:	cf 93       	push	r28
 5de:	cd b7       	in	r28, 0x3d	; 61
 5e0:	de b7       	in	r29, 0x3e	; 62
    // Output low
    PORTE &= ~(1<<PE4);
 5e2:	ae e2       	ldi	r26, 0x2E	; 46
 5e4:	b0 e0       	ldi	r27, 0x00	; 0
 5e6:	ee e2       	ldi	r30, 0x2E	; 46
 5e8:	f0 e0       	ldi	r31, 0x00	; 0
 5ea:	80 81       	ld	r24, Z
 5ec:	8f 7e       	andi	r24, 0xEF	; 239
 5ee:	8c 93       	st	X, r24
    PORTE &= ~(1<<PE3);
 5f0:	ae e2       	ldi	r26, 0x2E	; 46
 5f2:	b0 e0       	ldi	r27, 0x00	; 0
 5f4:	ee e2       	ldi	r30, 0x2E	; 46
 5f6:	f0 e0       	ldi	r31, 0x00	; 0
 5f8:	80 81       	ld	r24, Z
 5fa:	87 7f       	andi	r24, 0xF7	; 247
 5fc:	8c 93       	st	X, r24

    // Use mode 0, clkdiv = 64 klok 0 Pwm signalen
    TCCR0A = 0;
 5fe:	e4 e4       	ldi	r30, 0x44	; 68
 600:	f0 e0       	ldi	r31, 0x00	; 0
 602:	10 82       	st	Z, r1
    TCCR0B = (0<<CS02) | (1<<CS01) | (1<<CS00);
 604:	e5 e4       	ldi	r30, 0x45	; 69
 606:	f0 e0       	ldi	r31, 0x00	; 0
 608:	83 e0       	ldi	r24, 0x03	; 3
 60a:	80 83       	st	Z, r24
    TIMSK0 = (1<<OCIE0B) | (1<<OCIE0A) | (1<<TOIE0);
 60c:	ee e6       	ldi	r30, 0x6E	; 110
 60e:	f0 e0       	ldi	r31, 0x00	; 0
 610:	87 e0       	ldi	r24, 0x07	; 7
 612:	80 83       	st	Z, r24
    OCR0A = 0;
 614:	e7 e4       	ldi	r30, 0x47	; 71
 616:	f0 e0       	ldi	r31, 0x00	; 0
 618:	10 82       	st	Z, r1
    OCR0B = 0;
 61a:	e8 e4       	ldi	r30, 0x48	; 72
 61c:	f0 e0       	ldi	r31, 0x00	; 0
 61e:	10 82       	st	Z, r1

    // Use mode 0, clkdiv = 256 klok 1 globale klok
    TCCR1A = 0;
 620:	e0 e8       	ldi	r30, 0x80	; 128
 622:	f0 e0       	ldi	r31, 0x00	; 0
 624:	10 82       	st	Z, r1
    TCCR1B = (1<<CS02) | (0<<CS01) | (0<<CS00);
 626:	e1 e8       	ldi	r30, 0x81	; 129
 628:	f0 e0       	ldi	r31, 0x00	; 0
 62a:	84 e0       	ldi	r24, 0x04	; 4
 62c:	80 83       	st	Z, r24
    TIMSK1 = (1<<OCIE1A);
 62e:	ef e6       	ldi	r30, 0x6F	; 111
 630:	f0 e0       	ldi	r31, 0x00	; 0
 632:	82 e0       	ldi	r24, 0x02	; 2
 634:	80 83       	st	Z, r24
    OCR1A = 6250; //0.1 van een seconde dus kan gebruikt worden om een grote klok te maken voor 25.5 seconden
 636:	e8 e8       	ldi	r30, 0x88	; 136
 638:	f0 e0       	ldi	r31, 0x00	; 0
 63a:	8a e6       	ldi	r24, 0x6A	; 106
 63c:	98 e1       	ldi	r25, 0x18	; 24
 63e:	91 83       	std	Z+1, r25	; 0x01
 640:	80 83       	st	Z, r24

    // Interupts geactiveerd
    sei();
 642:	78 94       	sei
}
 644:	cf 91       	pop	r28
 646:	df 91       	pop	r29
 648:	08 95       	ret

0000064a <motor>:

void motor (signed int Af, signed int Bf)
{
 64a:	df 93       	push	r29
 64c:	cf 93       	push	r28
 64e:	00 d0       	rcall	.+0      	; 0x650 <motor+0x6>
 650:	0f 92       	push	r0
 652:	cd b7       	in	r28, 0x3d	; 61
 654:	de b7       	in	r29, 0x3e	; 62
 656:	9a 83       	std	Y+2, r25	; 0x02
 658:	89 83       	std	Y+1, r24	; 0x01
 65a:	7c 83       	std	Y+4, r23	; 0x04
 65c:	6b 83       	std	Y+3, r22	; 0x03
        OCR0A = Af;
 65e:	e7 e4       	ldi	r30, 0x47	; 71
 660:	f0 e0       	ldi	r31, 0x00	; 0
 662:	89 81       	ldd	r24, Y+1	; 0x01
 664:	80 83       	st	Z, r24
        OCR0B = Bf;
 666:	e8 e4       	ldi	r30, 0x48	; 72
 668:	f0 e0       	ldi	r31, 0x00	; 0
 66a:	8b 81       	ldd	r24, Y+3	; 0x03
 66c:	80 83       	st	Z, r24
}
 66e:	0f 90       	pop	r0
 670:	0f 90       	pop	r0
 672:	0f 90       	pop	r0
 674:	0f 90       	pop	r0
 676:	cf 91       	pop	r28
 678:	df 91       	pop	r29
 67a:	08 95       	ret

0000067c <__gesf2>:
 67c:	a8 e1       	ldi	r26, 0x18	; 24
 67e:	b0 e0       	ldi	r27, 0x00	; 0
 680:	e4 e4       	ldi	r30, 0x44	; 68
 682:	f3 e0       	ldi	r31, 0x03	; 3
 684:	0c 94 fd 05 	jmp	0xbfa	; 0xbfa <__prologue_saves__+0x18>
 688:	69 83       	std	Y+1, r22	; 0x01
 68a:	7a 83       	std	Y+2, r23	; 0x02
 68c:	8b 83       	std	Y+3, r24	; 0x03
 68e:	9c 83       	std	Y+4, r25	; 0x04
 690:	2d 83       	std	Y+5, r18	; 0x05
 692:	3e 83       	std	Y+6, r19	; 0x06
 694:	4f 83       	std	Y+7, r20	; 0x07
 696:	58 87       	std	Y+8, r21	; 0x08
 698:	89 e0       	ldi	r24, 0x09	; 9
 69a:	e8 2e       	mov	r14, r24
 69c:	f1 2c       	mov	r15, r1
 69e:	ec 0e       	add	r14, r28
 6a0:	fd 1e       	adc	r15, r29
 6a2:	ce 01       	movw	r24, r28
 6a4:	01 96       	adiw	r24, 0x01	; 1
 6a6:	b7 01       	movw	r22, r14
 6a8:	0e 94 20 05 	call	0xa40	; 0xa40 <__unpack_f>
 6ac:	8e 01       	movw	r16, r28
 6ae:	0f 5e       	subi	r16, 0xEF	; 239
 6b0:	1f 4f       	sbci	r17, 0xFF	; 255
 6b2:	ce 01       	movw	r24, r28
 6b4:	05 96       	adiw	r24, 0x05	; 5
 6b6:	b8 01       	movw	r22, r16
 6b8:	0e 94 20 05 	call	0xa40	; 0xa40 <__unpack_f>
 6bc:	89 85       	ldd	r24, Y+9	; 0x09
 6be:	82 30       	cpi	r24, 0x02	; 2
 6c0:	40 f0       	brcs	.+16     	; 0x6d2 <__gesf2+0x56>
 6c2:	89 89       	ldd	r24, Y+17	; 0x11
 6c4:	82 30       	cpi	r24, 0x02	; 2
 6c6:	28 f0       	brcs	.+10     	; 0x6d2 <__gesf2+0x56>
 6c8:	c7 01       	movw	r24, r14
 6ca:	b8 01       	movw	r22, r16
 6cc:	0e 94 98 05 	call	0xb30	; 0xb30 <__fpcmp_parts_f>
 6d0:	01 c0       	rjmp	.+2      	; 0x6d4 <__gesf2+0x58>
 6d2:	8f ef       	ldi	r24, 0xFF	; 255
 6d4:	68 96       	adiw	r28, 0x18	; 24
 6d6:	e6 e0       	ldi	r30, 0x06	; 6
 6d8:	0c 94 19 06 	jmp	0xc32	; 0xc32 <__epilogue_restores__+0x18>

000006dc <__lesf2>:
 6dc:	a8 e1       	ldi	r26, 0x18	; 24
 6de:	b0 e0       	ldi	r27, 0x00	; 0
 6e0:	e4 e7       	ldi	r30, 0x74	; 116
 6e2:	f3 e0       	ldi	r31, 0x03	; 3
 6e4:	0c 94 fd 05 	jmp	0xbfa	; 0xbfa <__prologue_saves__+0x18>
 6e8:	69 83       	std	Y+1, r22	; 0x01
 6ea:	7a 83       	std	Y+2, r23	; 0x02
 6ec:	8b 83       	std	Y+3, r24	; 0x03
 6ee:	9c 83       	std	Y+4, r25	; 0x04
 6f0:	2d 83       	std	Y+5, r18	; 0x05
 6f2:	3e 83       	std	Y+6, r19	; 0x06
 6f4:	4f 83       	std	Y+7, r20	; 0x07
 6f6:	58 87       	std	Y+8, r21	; 0x08
 6f8:	89 e0       	ldi	r24, 0x09	; 9
 6fa:	e8 2e       	mov	r14, r24
 6fc:	f1 2c       	mov	r15, r1
 6fe:	ec 0e       	add	r14, r28
 700:	fd 1e       	adc	r15, r29
 702:	ce 01       	movw	r24, r28
 704:	01 96       	adiw	r24, 0x01	; 1
 706:	b7 01       	movw	r22, r14
 708:	0e 94 20 05 	call	0xa40	; 0xa40 <__unpack_f>
 70c:	8e 01       	movw	r16, r28
 70e:	0f 5e       	subi	r16, 0xEF	; 239
 710:	1f 4f       	sbci	r17, 0xFF	; 255
 712:	ce 01       	movw	r24, r28
 714:	05 96       	adiw	r24, 0x05	; 5
 716:	b8 01       	movw	r22, r16
 718:	0e 94 20 05 	call	0xa40	; 0xa40 <__unpack_f>
 71c:	89 85       	ldd	r24, Y+9	; 0x09
 71e:	82 30       	cpi	r24, 0x02	; 2
 720:	40 f0       	brcs	.+16     	; 0x732 <__lesf2+0x56>
 722:	89 89       	ldd	r24, Y+17	; 0x11
 724:	82 30       	cpi	r24, 0x02	; 2
 726:	28 f0       	brcs	.+10     	; 0x732 <__lesf2+0x56>
 728:	c7 01       	movw	r24, r14
 72a:	b8 01       	movw	r22, r16
 72c:	0e 94 98 05 	call	0xb30	; 0xb30 <__fpcmp_parts_f>
 730:	01 c0       	rjmp	.+2      	; 0x734 <__lesf2+0x58>
 732:	81 e0       	ldi	r24, 0x01	; 1
 734:	68 96       	adiw	r28, 0x18	; 24
 736:	e6 e0       	ldi	r30, 0x06	; 6
 738:	0c 94 19 06 	jmp	0xc32	; 0xc32 <__epilogue_restores__+0x18>

0000073c <__floatsisf>:
 73c:	a8 e0       	ldi	r26, 0x08	; 8
 73e:	b0 e0       	ldi	r27, 0x00	; 0
 740:	e4 ea       	ldi	r30, 0xA4	; 164
 742:	f3 e0       	ldi	r31, 0x03	; 3
 744:	0c 94 fa 05 	jmp	0xbf4	; 0xbf4 <__prologue_saves__+0x12>
 748:	9b 01       	movw	r18, r22
 74a:	ac 01       	movw	r20, r24
 74c:	83 e0       	ldi	r24, 0x03	; 3
 74e:	89 83       	std	Y+1, r24	; 0x01
 750:	da 01       	movw	r26, r20
 752:	c9 01       	movw	r24, r18
 754:	88 27       	eor	r24, r24
 756:	b7 fd       	sbrc	r27, 7
 758:	83 95       	inc	r24
 75a:	99 27       	eor	r25, r25
 75c:	aa 27       	eor	r26, r26
 75e:	bb 27       	eor	r27, r27
 760:	b8 2e       	mov	r11, r24
 762:	21 15       	cp	r18, r1
 764:	31 05       	cpc	r19, r1
 766:	41 05       	cpc	r20, r1
 768:	51 05       	cpc	r21, r1
 76a:	19 f4       	brne	.+6      	; 0x772 <__floatsisf+0x36>
 76c:	82 e0       	ldi	r24, 0x02	; 2
 76e:	89 83       	std	Y+1, r24	; 0x01
 770:	3a c0       	rjmp	.+116    	; 0x7e6 <__floatsisf+0xaa>
 772:	88 23       	and	r24, r24
 774:	a9 f0       	breq	.+42     	; 0x7a0 <__floatsisf+0x64>
 776:	20 30       	cpi	r18, 0x00	; 0
 778:	80 e0       	ldi	r24, 0x00	; 0
 77a:	38 07       	cpc	r19, r24
 77c:	80 e0       	ldi	r24, 0x00	; 0
 77e:	48 07       	cpc	r20, r24
 780:	80 e8       	ldi	r24, 0x80	; 128
 782:	58 07       	cpc	r21, r24
 784:	29 f4       	brne	.+10     	; 0x790 <__floatsisf+0x54>
 786:	60 e0       	ldi	r22, 0x00	; 0
 788:	70 e0       	ldi	r23, 0x00	; 0
 78a:	80 e0       	ldi	r24, 0x00	; 0
 78c:	9f ec       	ldi	r25, 0xCF	; 207
 78e:	30 c0       	rjmp	.+96     	; 0x7f0 <__floatsisf+0xb4>
 790:	ee 24       	eor	r14, r14
 792:	ff 24       	eor	r15, r15
 794:	87 01       	movw	r16, r14
 796:	e2 1a       	sub	r14, r18
 798:	f3 0a       	sbc	r15, r19
 79a:	04 0b       	sbc	r16, r20
 79c:	15 0b       	sbc	r17, r21
 79e:	02 c0       	rjmp	.+4      	; 0x7a4 <__floatsisf+0x68>
 7a0:	79 01       	movw	r14, r18
 7a2:	8a 01       	movw	r16, r20
 7a4:	8e e1       	ldi	r24, 0x1E	; 30
 7a6:	c8 2e       	mov	r12, r24
 7a8:	d1 2c       	mov	r13, r1
 7aa:	dc 82       	std	Y+4, r13	; 0x04
 7ac:	cb 82       	std	Y+3, r12	; 0x03
 7ae:	ed 82       	std	Y+5, r14	; 0x05
 7b0:	fe 82       	std	Y+6, r15	; 0x06
 7b2:	0f 83       	std	Y+7, r16	; 0x07
 7b4:	18 87       	std	Y+8, r17	; 0x08
 7b6:	c8 01       	movw	r24, r16
 7b8:	b7 01       	movw	r22, r14
 7ba:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <__clzsi2>
 7be:	01 97       	sbiw	r24, 0x01	; 1
 7c0:	18 16       	cp	r1, r24
 7c2:	19 06       	cpc	r1, r25
 7c4:	84 f4       	brge	.+32     	; 0x7e6 <__floatsisf+0xaa>
 7c6:	08 2e       	mov	r0, r24
 7c8:	04 c0       	rjmp	.+8      	; 0x7d2 <__floatsisf+0x96>
 7ca:	ee 0c       	add	r14, r14
 7cc:	ff 1c       	adc	r15, r15
 7ce:	00 1f       	adc	r16, r16
 7d0:	11 1f       	adc	r17, r17
 7d2:	0a 94       	dec	r0
 7d4:	d2 f7       	brpl	.-12     	; 0x7ca <__floatsisf+0x8e>
 7d6:	ed 82       	std	Y+5, r14	; 0x05
 7d8:	fe 82       	std	Y+6, r15	; 0x06
 7da:	0f 83       	std	Y+7, r16	; 0x07
 7dc:	18 87       	std	Y+8, r17	; 0x08
 7de:	c8 1a       	sub	r12, r24
 7e0:	d9 0a       	sbc	r13, r25
 7e2:	dc 82       	std	Y+4, r13	; 0x04
 7e4:	cb 82       	std	Y+3, r12	; 0x03
 7e6:	ba 82       	std	Y+2, r11	; 0x02
 7e8:	ce 01       	movw	r24, r28
 7ea:	01 96       	adiw	r24, 0x01	; 1
 7ec:	0e 94 4b 04 	call	0x896	; 0x896 <__pack_f>
 7f0:	28 96       	adiw	r28, 0x08	; 8
 7f2:	e9 e0       	ldi	r30, 0x09	; 9
 7f4:	0c 94 16 06 	jmp	0xc2c	; 0xc2c <__epilogue_restores__+0x12>

000007f8 <__clzsi2>:
 7f8:	ef 92       	push	r14
 7fa:	ff 92       	push	r15
 7fc:	0f 93       	push	r16
 7fe:	1f 93       	push	r17
 800:	7b 01       	movw	r14, r22
 802:	8c 01       	movw	r16, r24
 804:	80 e0       	ldi	r24, 0x00	; 0
 806:	e8 16       	cp	r14, r24
 808:	80 e0       	ldi	r24, 0x00	; 0
 80a:	f8 06       	cpc	r15, r24
 80c:	81 e0       	ldi	r24, 0x01	; 1
 80e:	08 07       	cpc	r16, r24
 810:	80 e0       	ldi	r24, 0x00	; 0
 812:	18 07       	cpc	r17, r24
 814:	88 f4       	brcc	.+34     	; 0x838 <__clzsi2+0x40>
 816:	8f ef       	ldi	r24, 0xFF	; 255
 818:	e8 16       	cp	r14, r24
 81a:	f1 04       	cpc	r15, r1
 81c:	01 05       	cpc	r16, r1
 81e:	11 05       	cpc	r17, r1
 820:	31 f0       	breq	.+12     	; 0x82e <__clzsi2+0x36>
 822:	28 f0       	brcs	.+10     	; 0x82e <__clzsi2+0x36>
 824:	88 e0       	ldi	r24, 0x08	; 8
 826:	90 e0       	ldi	r25, 0x00	; 0
 828:	a0 e0       	ldi	r26, 0x00	; 0
 82a:	b0 e0       	ldi	r27, 0x00	; 0
 82c:	17 c0       	rjmp	.+46     	; 0x85c <__clzsi2+0x64>
 82e:	80 e0       	ldi	r24, 0x00	; 0
 830:	90 e0       	ldi	r25, 0x00	; 0
 832:	a0 e0       	ldi	r26, 0x00	; 0
 834:	b0 e0       	ldi	r27, 0x00	; 0
 836:	12 c0       	rjmp	.+36     	; 0x85c <__clzsi2+0x64>
 838:	80 e0       	ldi	r24, 0x00	; 0
 83a:	e8 16       	cp	r14, r24
 83c:	80 e0       	ldi	r24, 0x00	; 0
 83e:	f8 06       	cpc	r15, r24
 840:	80 e0       	ldi	r24, 0x00	; 0
 842:	08 07       	cpc	r16, r24
 844:	81 e0       	ldi	r24, 0x01	; 1
 846:	18 07       	cpc	r17, r24
 848:	28 f0       	brcs	.+10     	; 0x854 <__clzsi2+0x5c>
 84a:	88 e1       	ldi	r24, 0x18	; 24
 84c:	90 e0       	ldi	r25, 0x00	; 0
 84e:	a0 e0       	ldi	r26, 0x00	; 0
 850:	b0 e0       	ldi	r27, 0x00	; 0
 852:	04 c0       	rjmp	.+8      	; 0x85c <__clzsi2+0x64>
 854:	80 e1       	ldi	r24, 0x10	; 16
 856:	90 e0       	ldi	r25, 0x00	; 0
 858:	a0 e0       	ldi	r26, 0x00	; 0
 85a:	b0 e0       	ldi	r27, 0x00	; 0
 85c:	20 e2       	ldi	r18, 0x20	; 32
 85e:	30 e0       	ldi	r19, 0x00	; 0
 860:	40 e0       	ldi	r20, 0x00	; 0
 862:	50 e0       	ldi	r21, 0x00	; 0
 864:	28 1b       	sub	r18, r24
 866:	39 0b       	sbc	r19, r25
 868:	4a 0b       	sbc	r20, r26
 86a:	5b 0b       	sbc	r21, r27
 86c:	04 c0       	rjmp	.+8      	; 0x876 <__clzsi2+0x7e>
 86e:	16 95       	lsr	r17
 870:	07 95       	ror	r16
 872:	f7 94       	ror	r15
 874:	e7 94       	ror	r14
 876:	8a 95       	dec	r24
 878:	d2 f7       	brpl	.-12     	; 0x86e <__clzsi2+0x76>
 87a:	f7 01       	movw	r30, r14
 87c:	e0 50       	subi	r30, 0x00	; 0
 87e:	fe 4f       	sbci	r31, 0xFE	; 254
 880:	80 81       	ld	r24, Z
 882:	28 1b       	sub	r18, r24
 884:	31 09       	sbc	r19, r1
 886:	41 09       	sbc	r20, r1
 888:	51 09       	sbc	r21, r1
 88a:	c9 01       	movw	r24, r18
 88c:	1f 91       	pop	r17
 88e:	0f 91       	pop	r16
 890:	ff 90       	pop	r15
 892:	ef 90       	pop	r14
 894:	08 95       	ret

00000896 <__pack_f>:
 896:	df 92       	push	r13
 898:	ef 92       	push	r14
 89a:	ff 92       	push	r15
 89c:	0f 93       	push	r16
 89e:	1f 93       	push	r17
 8a0:	fc 01       	movw	r30, r24
 8a2:	e4 80       	ldd	r14, Z+4	; 0x04
 8a4:	f5 80       	ldd	r15, Z+5	; 0x05
 8a6:	06 81       	ldd	r16, Z+6	; 0x06
 8a8:	17 81       	ldd	r17, Z+7	; 0x07
 8aa:	d1 80       	ldd	r13, Z+1	; 0x01
 8ac:	80 81       	ld	r24, Z
 8ae:	82 30       	cpi	r24, 0x02	; 2
 8b0:	48 f4       	brcc	.+18     	; 0x8c4 <__pack_f+0x2e>
 8b2:	80 e0       	ldi	r24, 0x00	; 0
 8b4:	90 e0       	ldi	r25, 0x00	; 0
 8b6:	a0 e1       	ldi	r26, 0x10	; 16
 8b8:	b0 e0       	ldi	r27, 0x00	; 0
 8ba:	e8 2a       	or	r14, r24
 8bc:	f9 2a       	or	r15, r25
 8be:	0a 2b       	or	r16, r26
 8c0:	1b 2b       	or	r17, r27
 8c2:	a5 c0       	rjmp	.+330    	; 0xa0e <__pack_f+0x178>
 8c4:	84 30       	cpi	r24, 0x04	; 4
 8c6:	09 f4       	brne	.+2      	; 0x8ca <__pack_f+0x34>
 8c8:	9f c0       	rjmp	.+318    	; 0xa08 <__pack_f+0x172>
 8ca:	82 30       	cpi	r24, 0x02	; 2
 8cc:	21 f4       	brne	.+8      	; 0x8d6 <__pack_f+0x40>
 8ce:	ee 24       	eor	r14, r14
 8d0:	ff 24       	eor	r15, r15
 8d2:	87 01       	movw	r16, r14
 8d4:	05 c0       	rjmp	.+10     	; 0x8e0 <__pack_f+0x4a>
 8d6:	e1 14       	cp	r14, r1
 8d8:	f1 04       	cpc	r15, r1
 8da:	01 05       	cpc	r16, r1
 8dc:	11 05       	cpc	r17, r1
 8de:	19 f4       	brne	.+6      	; 0x8e6 <__pack_f+0x50>
 8e0:	e0 e0       	ldi	r30, 0x00	; 0
 8e2:	f0 e0       	ldi	r31, 0x00	; 0
 8e4:	96 c0       	rjmp	.+300    	; 0xa12 <__pack_f+0x17c>
 8e6:	62 81       	ldd	r22, Z+2	; 0x02
 8e8:	73 81       	ldd	r23, Z+3	; 0x03
 8ea:	9f ef       	ldi	r25, 0xFF	; 255
 8ec:	62 38       	cpi	r22, 0x82	; 130
 8ee:	79 07       	cpc	r23, r25
 8f0:	0c f0       	brlt	.+2      	; 0x8f4 <__pack_f+0x5e>
 8f2:	5b c0       	rjmp	.+182    	; 0x9aa <__pack_f+0x114>
 8f4:	22 e8       	ldi	r18, 0x82	; 130
 8f6:	3f ef       	ldi	r19, 0xFF	; 255
 8f8:	26 1b       	sub	r18, r22
 8fa:	37 0b       	sbc	r19, r23
 8fc:	2a 31       	cpi	r18, 0x1A	; 26
 8fe:	31 05       	cpc	r19, r1
 900:	2c f0       	brlt	.+10     	; 0x90c <__pack_f+0x76>
 902:	20 e0       	ldi	r18, 0x00	; 0
 904:	30 e0       	ldi	r19, 0x00	; 0
 906:	40 e0       	ldi	r20, 0x00	; 0
 908:	50 e0       	ldi	r21, 0x00	; 0
 90a:	2a c0       	rjmp	.+84     	; 0x960 <__pack_f+0xca>
 90c:	b8 01       	movw	r22, r16
 90e:	a7 01       	movw	r20, r14
 910:	02 2e       	mov	r0, r18
 912:	04 c0       	rjmp	.+8      	; 0x91c <__pack_f+0x86>
 914:	76 95       	lsr	r23
 916:	67 95       	ror	r22
 918:	57 95       	ror	r21
 91a:	47 95       	ror	r20
 91c:	0a 94       	dec	r0
 91e:	d2 f7       	brpl	.-12     	; 0x914 <__pack_f+0x7e>
 920:	81 e0       	ldi	r24, 0x01	; 1
 922:	90 e0       	ldi	r25, 0x00	; 0
 924:	a0 e0       	ldi	r26, 0x00	; 0
 926:	b0 e0       	ldi	r27, 0x00	; 0
 928:	04 c0       	rjmp	.+8      	; 0x932 <__pack_f+0x9c>
 92a:	88 0f       	add	r24, r24
 92c:	99 1f       	adc	r25, r25
 92e:	aa 1f       	adc	r26, r26
 930:	bb 1f       	adc	r27, r27
 932:	2a 95       	dec	r18
 934:	d2 f7       	brpl	.-12     	; 0x92a <__pack_f+0x94>
 936:	01 97       	sbiw	r24, 0x01	; 1
 938:	a1 09       	sbc	r26, r1
 93a:	b1 09       	sbc	r27, r1
 93c:	8e 21       	and	r24, r14
 93e:	9f 21       	and	r25, r15
 940:	a0 23       	and	r26, r16
 942:	b1 23       	and	r27, r17
 944:	00 97       	sbiw	r24, 0x00	; 0
 946:	a1 05       	cpc	r26, r1
 948:	b1 05       	cpc	r27, r1
 94a:	21 f0       	breq	.+8      	; 0x954 <__pack_f+0xbe>
 94c:	81 e0       	ldi	r24, 0x01	; 1
 94e:	90 e0       	ldi	r25, 0x00	; 0
 950:	a0 e0       	ldi	r26, 0x00	; 0
 952:	b0 e0       	ldi	r27, 0x00	; 0
 954:	9a 01       	movw	r18, r20
 956:	ab 01       	movw	r20, r22
 958:	28 2b       	or	r18, r24
 95a:	39 2b       	or	r19, r25
 95c:	4a 2b       	or	r20, r26
 95e:	5b 2b       	or	r21, r27
 960:	da 01       	movw	r26, r20
 962:	c9 01       	movw	r24, r18
 964:	8f 77       	andi	r24, 0x7F	; 127
 966:	90 70       	andi	r25, 0x00	; 0
 968:	a0 70       	andi	r26, 0x00	; 0
 96a:	b0 70       	andi	r27, 0x00	; 0
 96c:	80 34       	cpi	r24, 0x40	; 64
 96e:	91 05       	cpc	r25, r1
 970:	a1 05       	cpc	r26, r1
 972:	b1 05       	cpc	r27, r1
 974:	39 f4       	brne	.+14     	; 0x984 <__pack_f+0xee>
 976:	27 ff       	sbrs	r18, 7
 978:	09 c0       	rjmp	.+18     	; 0x98c <__pack_f+0xf6>
 97a:	20 5c       	subi	r18, 0xC0	; 192
 97c:	3f 4f       	sbci	r19, 0xFF	; 255
 97e:	4f 4f       	sbci	r20, 0xFF	; 255
 980:	5f 4f       	sbci	r21, 0xFF	; 255
 982:	04 c0       	rjmp	.+8      	; 0x98c <__pack_f+0xf6>
 984:	21 5c       	subi	r18, 0xC1	; 193
 986:	3f 4f       	sbci	r19, 0xFF	; 255
 988:	4f 4f       	sbci	r20, 0xFF	; 255
 98a:	5f 4f       	sbci	r21, 0xFF	; 255
 98c:	e0 e0       	ldi	r30, 0x00	; 0
 98e:	f0 e0       	ldi	r31, 0x00	; 0
 990:	20 30       	cpi	r18, 0x00	; 0
 992:	a0 e0       	ldi	r26, 0x00	; 0
 994:	3a 07       	cpc	r19, r26
 996:	a0 e0       	ldi	r26, 0x00	; 0
 998:	4a 07       	cpc	r20, r26
 99a:	a0 e4       	ldi	r26, 0x40	; 64
 99c:	5a 07       	cpc	r21, r26
 99e:	10 f0       	brcs	.+4      	; 0x9a4 <__pack_f+0x10e>
 9a0:	e1 e0       	ldi	r30, 0x01	; 1
 9a2:	f0 e0       	ldi	r31, 0x00	; 0
 9a4:	79 01       	movw	r14, r18
 9a6:	8a 01       	movw	r16, r20
 9a8:	27 c0       	rjmp	.+78     	; 0x9f8 <__pack_f+0x162>
 9aa:	60 38       	cpi	r22, 0x80	; 128
 9ac:	71 05       	cpc	r23, r1
 9ae:	64 f5       	brge	.+88     	; 0xa08 <__pack_f+0x172>
 9b0:	fb 01       	movw	r30, r22
 9b2:	e1 58       	subi	r30, 0x81	; 129
 9b4:	ff 4f       	sbci	r31, 0xFF	; 255
 9b6:	d8 01       	movw	r26, r16
 9b8:	c7 01       	movw	r24, r14
 9ba:	8f 77       	andi	r24, 0x7F	; 127
 9bc:	90 70       	andi	r25, 0x00	; 0
 9be:	a0 70       	andi	r26, 0x00	; 0
 9c0:	b0 70       	andi	r27, 0x00	; 0
 9c2:	80 34       	cpi	r24, 0x40	; 64
 9c4:	91 05       	cpc	r25, r1
 9c6:	a1 05       	cpc	r26, r1
 9c8:	b1 05       	cpc	r27, r1
 9ca:	39 f4       	brne	.+14     	; 0x9da <__pack_f+0x144>
 9cc:	e7 fe       	sbrs	r14, 7
 9ce:	0d c0       	rjmp	.+26     	; 0x9ea <__pack_f+0x154>
 9d0:	80 e4       	ldi	r24, 0x40	; 64
 9d2:	90 e0       	ldi	r25, 0x00	; 0
 9d4:	a0 e0       	ldi	r26, 0x00	; 0
 9d6:	b0 e0       	ldi	r27, 0x00	; 0
 9d8:	04 c0       	rjmp	.+8      	; 0x9e2 <__pack_f+0x14c>
 9da:	8f e3       	ldi	r24, 0x3F	; 63
 9dc:	90 e0       	ldi	r25, 0x00	; 0
 9de:	a0 e0       	ldi	r26, 0x00	; 0
 9e0:	b0 e0       	ldi	r27, 0x00	; 0
 9e2:	e8 0e       	add	r14, r24
 9e4:	f9 1e       	adc	r15, r25
 9e6:	0a 1f       	adc	r16, r26
 9e8:	1b 1f       	adc	r17, r27
 9ea:	17 ff       	sbrs	r17, 7
 9ec:	05 c0       	rjmp	.+10     	; 0x9f8 <__pack_f+0x162>
 9ee:	16 95       	lsr	r17
 9f0:	07 95       	ror	r16
 9f2:	f7 94       	ror	r15
 9f4:	e7 94       	ror	r14
 9f6:	31 96       	adiw	r30, 0x01	; 1
 9f8:	87 e0       	ldi	r24, 0x07	; 7
 9fa:	16 95       	lsr	r17
 9fc:	07 95       	ror	r16
 9fe:	f7 94       	ror	r15
 a00:	e7 94       	ror	r14
 a02:	8a 95       	dec	r24
 a04:	d1 f7       	brne	.-12     	; 0x9fa <__pack_f+0x164>
 a06:	05 c0       	rjmp	.+10     	; 0xa12 <__pack_f+0x17c>
 a08:	ee 24       	eor	r14, r14
 a0a:	ff 24       	eor	r15, r15
 a0c:	87 01       	movw	r16, r14
 a0e:	ef ef       	ldi	r30, 0xFF	; 255
 a10:	f0 e0       	ldi	r31, 0x00	; 0
 a12:	6e 2f       	mov	r22, r30
 a14:	67 95       	ror	r22
 a16:	66 27       	eor	r22, r22
 a18:	67 95       	ror	r22
 a1a:	90 2f       	mov	r25, r16
 a1c:	9f 77       	andi	r25, 0x7F	; 127
 a1e:	d7 94       	ror	r13
 a20:	dd 24       	eor	r13, r13
 a22:	d7 94       	ror	r13
 a24:	8e 2f       	mov	r24, r30
 a26:	86 95       	lsr	r24
 a28:	49 2f       	mov	r20, r25
 a2a:	46 2b       	or	r20, r22
 a2c:	58 2f       	mov	r21, r24
 a2e:	5d 29       	or	r21, r13
 a30:	b7 01       	movw	r22, r14
 a32:	ca 01       	movw	r24, r20
 a34:	1f 91       	pop	r17
 a36:	0f 91       	pop	r16
 a38:	ff 90       	pop	r15
 a3a:	ef 90       	pop	r14
 a3c:	df 90       	pop	r13
 a3e:	08 95       	ret

00000a40 <__unpack_f>:
 a40:	fc 01       	movw	r30, r24
 a42:	db 01       	movw	r26, r22
 a44:	40 81       	ld	r20, Z
 a46:	51 81       	ldd	r21, Z+1	; 0x01
 a48:	22 81       	ldd	r18, Z+2	; 0x02
 a4a:	62 2f       	mov	r22, r18
 a4c:	6f 77       	andi	r22, 0x7F	; 127
 a4e:	70 e0       	ldi	r23, 0x00	; 0
 a50:	22 1f       	adc	r18, r18
 a52:	22 27       	eor	r18, r18
 a54:	22 1f       	adc	r18, r18
 a56:	93 81       	ldd	r25, Z+3	; 0x03
 a58:	89 2f       	mov	r24, r25
 a5a:	88 0f       	add	r24, r24
 a5c:	82 2b       	or	r24, r18
 a5e:	28 2f       	mov	r18, r24
 a60:	30 e0       	ldi	r19, 0x00	; 0
 a62:	99 1f       	adc	r25, r25
 a64:	99 27       	eor	r25, r25
 a66:	99 1f       	adc	r25, r25
 a68:	11 96       	adiw	r26, 0x01	; 1
 a6a:	9c 93       	st	X, r25
 a6c:	11 97       	sbiw	r26, 0x01	; 1
 a6e:	21 15       	cp	r18, r1
 a70:	31 05       	cpc	r19, r1
 a72:	a9 f5       	brne	.+106    	; 0xade <__unpack_f+0x9e>
 a74:	41 15       	cp	r20, r1
 a76:	51 05       	cpc	r21, r1
 a78:	61 05       	cpc	r22, r1
 a7a:	71 05       	cpc	r23, r1
 a7c:	11 f4       	brne	.+4      	; 0xa82 <__unpack_f+0x42>
 a7e:	82 e0       	ldi	r24, 0x02	; 2
 a80:	37 c0       	rjmp	.+110    	; 0xaf0 <__unpack_f+0xb0>
 a82:	82 e8       	ldi	r24, 0x82	; 130
 a84:	9f ef       	ldi	r25, 0xFF	; 255
 a86:	13 96       	adiw	r26, 0x03	; 3
 a88:	9c 93       	st	X, r25
 a8a:	8e 93       	st	-X, r24
 a8c:	12 97       	sbiw	r26, 0x02	; 2
 a8e:	9a 01       	movw	r18, r20
 a90:	ab 01       	movw	r20, r22
 a92:	67 e0       	ldi	r22, 0x07	; 7
 a94:	22 0f       	add	r18, r18
 a96:	33 1f       	adc	r19, r19
 a98:	44 1f       	adc	r20, r20
 a9a:	55 1f       	adc	r21, r21
 a9c:	6a 95       	dec	r22
 a9e:	d1 f7       	brne	.-12     	; 0xa94 <__unpack_f+0x54>
 aa0:	83 e0       	ldi	r24, 0x03	; 3
 aa2:	8c 93       	st	X, r24
 aa4:	0d c0       	rjmp	.+26     	; 0xac0 <__unpack_f+0x80>
 aa6:	22 0f       	add	r18, r18
 aa8:	33 1f       	adc	r19, r19
 aaa:	44 1f       	adc	r20, r20
 aac:	55 1f       	adc	r21, r21
 aae:	12 96       	adiw	r26, 0x02	; 2
 ab0:	8d 91       	ld	r24, X+
 ab2:	9c 91       	ld	r25, X
 ab4:	13 97       	sbiw	r26, 0x03	; 3
 ab6:	01 97       	sbiw	r24, 0x01	; 1
 ab8:	13 96       	adiw	r26, 0x03	; 3
 aba:	9c 93       	st	X, r25
 abc:	8e 93       	st	-X, r24
 abe:	12 97       	sbiw	r26, 0x02	; 2
 ac0:	20 30       	cpi	r18, 0x00	; 0
 ac2:	80 e0       	ldi	r24, 0x00	; 0
 ac4:	38 07       	cpc	r19, r24
 ac6:	80 e0       	ldi	r24, 0x00	; 0
 ac8:	48 07       	cpc	r20, r24
 aca:	80 e4       	ldi	r24, 0x40	; 64
 acc:	58 07       	cpc	r21, r24
 ace:	58 f3       	brcs	.-42     	; 0xaa6 <__unpack_f+0x66>
 ad0:	14 96       	adiw	r26, 0x04	; 4
 ad2:	2d 93       	st	X+, r18
 ad4:	3d 93       	st	X+, r19
 ad6:	4d 93       	st	X+, r20
 ad8:	5c 93       	st	X, r21
 ada:	17 97       	sbiw	r26, 0x07	; 7
 adc:	08 95       	ret
 ade:	2f 3f       	cpi	r18, 0xFF	; 255
 ae0:	31 05       	cpc	r19, r1
 ae2:	79 f4       	brne	.+30     	; 0xb02 <__unpack_f+0xc2>
 ae4:	41 15       	cp	r20, r1
 ae6:	51 05       	cpc	r21, r1
 ae8:	61 05       	cpc	r22, r1
 aea:	71 05       	cpc	r23, r1
 aec:	19 f4       	brne	.+6      	; 0xaf4 <__unpack_f+0xb4>
 aee:	84 e0       	ldi	r24, 0x04	; 4
 af0:	8c 93       	st	X, r24
 af2:	08 95       	ret
 af4:	64 ff       	sbrs	r22, 4
 af6:	03 c0       	rjmp	.+6      	; 0xafe <__unpack_f+0xbe>
 af8:	81 e0       	ldi	r24, 0x01	; 1
 afa:	8c 93       	st	X, r24
 afc:	12 c0       	rjmp	.+36     	; 0xb22 <__unpack_f+0xe2>
 afe:	1c 92       	st	X, r1
 b00:	10 c0       	rjmp	.+32     	; 0xb22 <__unpack_f+0xe2>
 b02:	2f 57       	subi	r18, 0x7F	; 127
 b04:	30 40       	sbci	r19, 0x00	; 0
 b06:	13 96       	adiw	r26, 0x03	; 3
 b08:	3c 93       	st	X, r19
 b0a:	2e 93       	st	-X, r18
 b0c:	12 97       	sbiw	r26, 0x02	; 2
 b0e:	83 e0       	ldi	r24, 0x03	; 3
 b10:	8c 93       	st	X, r24
 b12:	87 e0       	ldi	r24, 0x07	; 7
 b14:	44 0f       	add	r20, r20
 b16:	55 1f       	adc	r21, r21
 b18:	66 1f       	adc	r22, r22
 b1a:	77 1f       	adc	r23, r23
 b1c:	8a 95       	dec	r24
 b1e:	d1 f7       	brne	.-12     	; 0xb14 <__unpack_f+0xd4>
 b20:	70 64       	ori	r23, 0x40	; 64
 b22:	14 96       	adiw	r26, 0x04	; 4
 b24:	4d 93       	st	X+, r20
 b26:	5d 93       	st	X+, r21
 b28:	6d 93       	st	X+, r22
 b2a:	7c 93       	st	X, r23
 b2c:	17 97       	sbiw	r26, 0x07	; 7
 b2e:	08 95       	ret

00000b30 <__fpcmp_parts_f>:
 b30:	1f 93       	push	r17
 b32:	dc 01       	movw	r26, r24
 b34:	fb 01       	movw	r30, r22
 b36:	9c 91       	ld	r25, X
 b38:	92 30       	cpi	r25, 0x02	; 2
 b3a:	08 f4       	brcc	.+2      	; 0xb3e <__fpcmp_parts_f+0xe>
 b3c:	47 c0       	rjmp	.+142    	; 0xbcc <__fpcmp_parts_f+0x9c>
 b3e:	80 81       	ld	r24, Z
 b40:	82 30       	cpi	r24, 0x02	; 2
 b42:	08 f4       	brcc	.+2      	; 0xb46 <__fpcmp_parts_f+0x16>
 b44:	43 c0       	rjmp	.+134    	; 0xbcc <__fpcmp_parts_f+0x9c>
 b46:	94 30       	cpi	r25, 0x04	; 4
 b48:	51 f4       	brne	.+20     	; 0xb5e <__fpcmp_parts_f+0x2e>
 b4a:	11 96       	adiw	r26, 0x01	; 1
 b4c:	1c 91       	ld	r17, X
 b4e:	84 30       	cpi	r24, 0x04	; 4
 b50:	99 f5       	brne	.+102    	; 0xbb8 <__fpcmp_parts_f+0x88>
 b52:	81 81       	ldd	r24, Z+1	; 0x01
 b54:	68 2f       	mov	r22, r24
 b56:	70 e0       	ldi	r23, 0x00	; 0
 b58:	61 1b       	sub	r22, r17
 b5a:	71 09       	sbc	r23, r1
 b5c:	3f c0       	rjmp	.+126    	; 0xbdc <__fpcmp_parts_f+0xac>
 b5e:	84 30       	cpi	r24, 0x04	; 4
 b60:	21 f0       	breq	.+8      	; 0xb6a <__fpcmp_parts_f+0x3a>
 b62:	92 30       	cpi	r25, 0x02	; 2
 b64:	31 f4       	brne	.+12     	; 0xb72 <__fpcmp_parts_f+0x42>
 b66:	82 30       	cpi	r24, 0x02	; 2
 b68:	b9 f1       	breq	.+110    	; 0xbd8 <__fpcmp_parts_f+0xa8>
 b6a:	81 81       	ldd	r24, Z+1	; 0x01
 b6c:	88 23       	and	r24, r24
 b6e:	89 f1       	breq	.+98     	; 0xbd2 <__fpcmp_parts_f+0xa2>
 b70:	2d c0       	rjmp	.+90     	; 0xbcc <__fpcmp_parts_f+0x9c>
 b72:	11 96       	adiw	r26, 0x01	; 1
 b74:	1c 91       	ld	r17, X
 b76:	11 97       	sbiw	r26, 0x01	; 1
 b78:	82 30       	cpi	r24, 0x02	; 2
 b7a:	f1 f0       	breq	.+60     	; 0xbb8 <__fpcmp_parts_f+0x88>
 b7c:	81 81       	ldd	r24, Z+1	; 0x01
 b7e:	18 17       	cp	r17, r24
 b80:	d9 f4       	brne	.+54     	; 0xbb8 <__fpcmp_parts_f+0x88>
 b82:	12 96       	adiw	r26, 0x02	; 2
 b84:	2d 91       	ld	r18, X+
 b86:	3c 91       	ld	r19, X
 b88:	13 97       	sbiw	r26, 0x03	; 3
 b8a:	82 81       	ldd	r24, Z+2	; 0x02
 b8c:	93 81       	ldd	r25, Z+3	; 0x03
 b8e:	82 17       	cp	r24, r18
 b90:	93 07       	cpc	r25, r19
 b92:	94 f0       	brlt	.+36     	; 0xbb8 <__fpcmp_parts_f+0x88>
 b94:	28 17       	cp	r18, r24
 b96:	39 07       	cpc	r19, r25
 b98:	bc f0       	brlt	.+46     	; 0xbc8 <__fpcmp_parts_f+0x98>
 b9a:	14 96       	adiw	r26, 0x04	; 4
 b9c:	8d 91       	ld	r24, X+
 b9e:	9d 91       	ld	r25, X+
 ba0:	0d 90       	ld	r0, X+
 ba2:	bc 91       	ld	r27, X
 ba4:	a0 2d       	mov	r26, r0
 ba6:	24 81       	ldd	r18, Z+4	; 0x04
 ba8:	35 81       	ldd	r19, Z+5	; 0x05
 baa:	46 81       	ldd	r20, Z+6	; 0x06
 bac:	57 81       	ldd	r21, Z+7	; 0x07
 bae:	28 17       	cp	r18, r24
 bb0:	39 07       	cpc	r19, r25
 bb2:	4a 07       	cpc	r20, r26
 bb4:	5b 07       	cpc	r21, r27
 bb6:	18 f4       	brcc	.+6      	; 0xbbe <__fpcmp_parts_f+0x8e>
 bb8:	11 23       	and	r17, r17
 bba:	41 f0       	breq	.+16     	; 0xbcc <__fpcmp_parts_f+0x9c>
 bbc:	0a c0       	rjmp	.+20     	; 0xbd2 <__fpcmp_parts_f+0xa2>
 bbe:	82 17       	cp	r24, r18
 bc0:	93 07       	cpc	r25, r19
 bc2:	a4 07       	cpc	r26, r20
 bc4:	b5 07       	cpc	r27, r21
 bc6:	40 f4       	brcc	.+16     	; 0xbd8 <__fpcmp_parts_f+0xa8>
 bc8:	11 23       	and	r17, r17
 bca:	19 f0       	breq	.+6      	; 0xbd2 <__fpcmp_parts_f+0xa2>
 bcc:	61 e0       	ldi	r22, 0x01	; 1
 bce:	70 e0       	ldi	r23, 0x00	; 0
 bd0:	05 c0       	rjmp	.+10     	; 0xbdc <__fpcmp_parts_f+0xac>
 bd2:	6f ef       	ldi	r22, 0xFF	; 255
 bd4:	7f ef       	ldi	r23, 0xFF	; 255
 bd6:	02 c0       	rjmp	.+4      	; 0xbdc <__fpcmp_parts_f+0xac>
 bd8:	60 e0       	ldi	r22, 0x00	; 0
 bda:	70 e0       	ldi	r23, 0x00	; 0
 bdc:	cb 01       	movw	r24, r22
 bde:	1f 91       	pop	r17
 be0:	08 95       	ret

00000be2 <__prologue_saves__>:
 be2:	2f 92       	push	r2
 be4:	3f 92       	push	r3
 be6:	4f 92       	push	r4
 be8:	5f 92       	push	r5
 bea:	6f 92       	push	r6
 bec:	7f 92       	push	r7
 bee:	8f 92       	push	r8
 bf0:	9f 92       	push	r9
 bf2:	af 92       	push	r10
 bf4:	bf 92       	push	r11
 bf6:	cf 92       	push	r12
 bf8:	df 92       	push	r13
 bfa:	ef 92       	push	r14
 bfc:	ff 92       	push	r15
 bfe:	0f 93       	push	r16
 c00:	1f 93       	push	r17
 c02:	cf 93       	push	r28
 c04:	df 93       	push	r29
 c06:	cd b7       	in	r28, 0x3d	; 61
 c08:	de b7       	in	r29, 0x3e	; 62
 c0a:	ca 1b       	sub	r28, r26
 c0c:	db 0b       	sbc	r29, r27
 c0e:	0f b6       	in	r0, 0x3f	; 63
 c10:	f8 94       	cli
 c12:	de bf       	out	0x3e, r29	; 62
 c14:	0f be       	out	0x3f, r0	; 63
 c16:	cd bf       	out	0x3d, r28	; 61
 c18:	19 94       	eijmp

00000c1a <__epilogue_restores__>:
 c1a:	2a 88       	ldd	r2, Y+18	; 0x12
 c1c:	39 88       	ldd	r3, Y+17	; 0x11
 c1e:	48 88       	ldd	r4, Y+16	; 0x10
 c20:	5f 84       	ldd	r5, Y+15	; 0x0f
 c22:	6e 84       	ldd	r6, Y+14	; 0x0e
 c24:	7d 84       	ldd	r7, Y+13	; 0x0d
 c26:	8c 84       	ldd	r8, Y+12	; 0x0c
 c28:	9b 84       	ldd	r9, Y+11	; 0x0b
 c2a:	aa 84       	ldd	r10, Y+10	; 0x0a
 c2c:	b9 84       	ldd	r11, Y+9	; 0x09
 c2e:	c8 84       	ldd	r12, Y+8	; 0x08
 c30:	df 80       	ldd	r13, Y+7	; 0x07
 c32:	ee 80       	ldd	r14, Y+6	; 0x06
 c34:	fd 80       	ldd	r15, Y+5	; 0x05
 c36:	0c 81       	ldd	r16, Y+4	; 0x04
 c38:	1b 81       	ldd	r17, Y+3	; 0x03
 c3a:	aa 81       	ldd	r26, Y+2	; 0x02
 c3c:	b9 81       	ldd	r27, Y+1	; 0x01
 c3e:	ce 0f       	add	r28, r30
 c40:	d1 1d       	adc	r29, r1
 c42:	0f b6       	in	r0, 0x3f	; 63
 c44:	f8 94       	cli
 c46:	de bf       	out	0x3e, r29	; 62
 c48:	0f be       	out	0x3f, r0	; 63
 c4a:	cd bf       	out	0x3d, r28	; 61
 c4c:	ed 01       	movw	r28, r26
 c4e:	08 95       	ret

00000c50 <_exit>:
 c50:	f8 94       	cli

00000c52 <__stop_program>:
 c52:	ff cf       	rjmp	.-2      	; 0xc52 <__stop_program>
