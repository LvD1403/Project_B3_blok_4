
bin\Debug\project_b3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000108  00800200  00001406  000014ba  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001406  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000018  00800308  00800308  000015c2  2**0
                  ALLOC
  3 .fuse         00000003  00820000  00820000  000015c2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .debug_aranges 00000180  00000000  00000000  000015c5  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 000003b6  00000000  00000000  00001745  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c7f  00000000  00000000  00001afb  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000f56  00000000  00000000  0000377a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001267  00000000  00000000  000046d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000260  00000000  00000000  00005938  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000403  00000000  00000000  00005b98  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000542  00000000  00000000  00005f9b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  000064dd  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__ctors_end>
       4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
       8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
       c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      10:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      14:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      18:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      1c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      20:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      24:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      28:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      2c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      30:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      34:	0c 94 eb 03 	jmp	0x7d6	; 0x7d6 <__vector_13>
      38:	0c 94 28 04 	jmp	0x850	; 0x850 <__vector_14>
      3c:	0c 94 ae 03 	jmp	0x75c	; 0x75c <__vector_15>
      40:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      44:	0c 94 5c 02 	jmp	0x4b8	; 0x4b8 <__vector_17>
      48:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      4c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      50:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      54:	0c 94 b5 04 	jmp	0x96a	; 0x96a <__vector_21>
      58:	0c 94 dc 04 	jmp	0x9b8	; 0x9b8 <__vector_22>
      5c:	0c 94 65 04 	jmp	0x8ca	; 0x8ca <__vector_23>
      60:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      64:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      68:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      6c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      70:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      74:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      78:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      7c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      80:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      84:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      88:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      8c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      90:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      94:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      98:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      9c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      a0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      a4:	0c 94 87 02 	jmp	0x50e	; 0x50e <__vector_41>
      a8:	0c 94 80 03 	jmp	0x700	; 0x700 <__vector_42>
      ac:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      b0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      b4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      b8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      bc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      c0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      c4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      c8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      cc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      d0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      d4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      d8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      dc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      e0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	13 e0       	ldi	r17, 0x03	; 3
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b2 e0       	ldi	r27, 0x02	; 2
      fa:	e6 e0       	ldi	r30, 0x06	; 6
      fc:	f4 e1       	ldi	r31, 0x14	; 20
      fe:	00 e0       	ldi	r16, 0x00	; 0
     100:	0b bf       	out	0x3b, r16	; 59
     102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
     104:	07 90       	elpm	r0, Z+
     106:	0d 92       	st	X+, r0
     108:	a8 30       	cpi	r26, 0x08	; 8
     10a:	b1 07       	cpc	r27, r17
     10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
     10e:	13 e0       	ldi	r17, 0x03	; 3
     110:	a8 e0       	ldi	r26, 0x08	; 8
     112:	b3 e0       	ldi	r27, 0x03	; 3
     114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
     116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
     118:	a0 32       	cpi	r26, 0x20	; 32
     11a:	b1 07       	cpc	r27, r17
     11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
     11e:	0e 94 95 00 	call	0x12a	; 0x12a <main>
     122:	0c 94 01 0a 	jmp	0x1402	; 0x1402 <_exit>

00000126 <__bad_interrupt>:
     126:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000012a <main>:
#include "Header.h"



int main(void)
{
     12a:	df 93       	push	r29
     12c:	cf 93       	push	r28
     12e:	cd b7       	in	r28, 0x3d	; 61
     130:	de b7       	in	r29, 0x3e	; 62
    init();
     132:	0e 94 d7 00 	call	0x1ae	; 0x1ae <init>
    init_motor();
     136:	0e 94 03 05 	call	0xa06	; 0xa06 <init_motor>
     13a:	06 c0       	rjmp	.+12     	; 0x148 <main+0x1e>
    while(1)
    {
        while ((!(PINA & (1 << PA0))) && (!(PINA & (1 << PA1))))
        {
            motor(170,170);
     13c:	8a ea       	ldi	r24, 0xAA	; 170
     13e:	90 e0       	ldi	r25, 0x00	; 0
     140:	6a ea       	ldi	r22, 0xAA	; 170
     142:	70 e0       	ldi	r23, 0x00	; 0
     144:	0e 94 55 05 	call	0xaaa	; 0xaaa <motor>
{
    init();
    init_motor();
    while(1)
    {
        while ((!(PINA & (1 << PA0))) && (!(PINA & (1 << PA1))))
     148:	e0 e2       	ldi	r30, 0x20	; 32
     14a:	f0 e0       	ldi	r31, 0x00	; 0
     14c:	80 81       	ld	r24, Z
     14e:	88 2f       	mov	r24, r24
     150:	90 e0       	ldi	r25, 0x00	; 0
     152:	81 70       	andi	r24, 0x01	; 1
     154:	90 70       	andi	r25, 0x00	; 0
     156:	00 97       	sbiw	r24, 0x00	; 0
     158:	81 f4       	brne	.+32     	; 0x17a <main+0x50>
     15a:	e0 e2       	ldi	r30, 0x20	; 32
     15c:	f0 e0       	ldi	r31, 0x00	; 0
     15e:	80 81       	ld	r24, Z
     160:	88 2f       	mov	r24, r24
     162:	90 e0       	ldi	r25, 0x00	; 0
     164:	82 70       	andi	r24, 0x02	; 2
     166:	90 70       	andi	r25, 0x00	; 0
     168:	00 97       	sbiw	r24, 0x00	; 0
     16a:	41 f3       	breq	.-48     	; 0x13c <main+0x12>
     16c:	06 c0       	rjmp	.+12     	; 0x17a <main+0x50>
        {
            motor(170,170);
        }
            while (PINA &(1 << PA0))
            {
                motor (170,0);
     16e:	8a ea       	ldi	r24, 0xAA	; 170
     170:	90 e0       	ldi	r25, 0x00	; 0
     172:	60 e0       	ldi	r22, 0x00	; 0
     174:	70 e0       	ldi	r23, 0x00	; 0
     176:	0e 94 55 05 	call	0xaaa	; 0xaaa <motor>
    {
        while ((!(PINA & (1 << PA0))) && (!(PINA & (1 << PA1))))
        {
            motor(170,170);
        }
            while (PINA &(1 << PA0))
     17a:	e0 e2       	ldi	r30, 0x20	; 32
     17c:	f0 e0       	ldi	r31, 0x00	; 0
     17e:	80 81       	ld	r24, Z
     180:	88 2f       	mov	r24, r24
     182:	90 e0       	ldi	r25, 0x00	; 0
     184:	81 70       	andi	r24, 0x01	; 1
     186:	90 70       	andi	r25, 0x00	; 0
     188:	88 23       	and	r24, r24
     18a:	89 f7       	brne	.-30     	; 0x16e <main+0x44>
     18c:	06 c0       	rjmp	.+12     	; 0x19a <main+0x70>
                motor (170,0);
                // _delay_ms(40);
            }
            while (PINA &(1 << PA1))
            {
                motor (0,170);
     18e:	80 e0       	ldi	r24, 0x00	; 0
     190:	90 e0       	ldi	r25, 0x00	; 0
     192:	6a ea       	ldi	r22, 0xAA	; 170
     194:	70 e0       	ldi	r23, 0x00	; 0
     196:	0e 94 55 05 	call	0xaaa	; 0xaaa <motor>
            while (PINA &(1 << PA0))
            {
                motor (170,0);
                // _delay_ms(40);
            }
            while (PINA &(1 << PA1))
     19a:	e0 e2       	ldi	r30, 0x20	; 32
     19c:	f0 e0       	ldi	r31, 0x00	; 0
     19e:	80 81       	ld	r24, Z
     1a0:	88 2f       	mov	r24, r24
     1a2:	90 e0       	ldi	r25, 0x00	; 0
     1a4:	82 70       	andi	r24, 0x02	; 2
     1a6:	90 70       	andi	r25, 0x00	; 0
     1a8:	00 97       	sbiw	r24, 0x00	; 0
     1aa:	89 f7       	brne	.-30     	; 0x18e <main+0x64>
     1ac:	cd cf       	rjmp	.-102    	; 0x148 <main+0x1e>

000001ae <init>:
#include <avr/io.h>
#include <avr/interrupt.h>
#include "Header.h"

void init (void)
{
     1ae:	df 93       	push	r29
     1b0:	cf 93       	push	r28
     1b2:	cd b7       	in	r28, 0x3d	; 61
     1b4:	de b7       	in	r29, 0x3e	; 62
    DDRE |= (1 << PE3);     //pwm links
     1b6:	ad e2       	ldi	r26, 0x2D	; 45
     1b8:	b0 e0       	ldi	r27, 0x00	; 0
     1ba:	ed e2       	ldi	r30, 0x2D	; 45
     1bc:	f0 e0       	ldi	r31, 0x00	; 0
     1be:	80 81       	ld	r24, Z
     1c0:	88 60       	ori	r24, 0x08	; 8
     1c2:	8c 93       	st	X, r24
    DDRE |= (1 << PE4);     //pwm rechts
     1c4:	ad e2       	ldi	r26, 0x2D	; 45
     1c6:	b0 e0       	ldi	r27, 0x00	; 0
     1c8:	ed e2       	ldi	r30, 0x2D	; 45
     1ca:	f0 e0       	ldi	r31, 0x00	; 0
     1cc:	80 81       	ld	r24, Z
     1ce:	80 61       	ori	r24, 0x10	; 16
     1d0:	8c 93       	st	X, r24
	DDRH |= (1 << PH4);     //lampje
     1d2:	a1 e0       	ldi	r26, 0x01	; 1
     1d4:	b1 e0       	ldi	r27, 0x01	; 1
     1d6:	e1 e0       	ldi	r30, 0x01	; 1
     1d8:	f1 e0       	ldi	r31, 0x01	; 1
     1da:	80 81       	ld	r24, Z
     1dc:	80 61       	ori	r24, 0x10	; 16
     1de:	8c 93       	st	X, r24
	DDRE |= (1 << PJ1);     //motorrichting links
     1e0:	ad e2       	ldi	r26, 0x2D	; 45
     1e2:	b0 e0       	ldi	r27, 0x00	; 0
     1e4:	ed e2       	ldi	r30, 0x2D	; 45
     1e6:	f0 e0       	ldi	r31, 0x00	; 0
     1e8:	80 81       	ld	r24, Z
     1ea:	82 60       	ori	r24, 0x02	; 2
     1ec:	8c 93       	st	X, r24
	DDRE |= (1 << PJ0);     //motorrichting rechts
     1ee:	ad e2       	ldi	r26, 0x2D	; 45
     1f0:	b0 e0       	ldi	r27, 0x00	; 0
     1f2:	ed e2       	ldi	r30, 0x2D	; 45
     1f4:	f0 e0       	ldi	r31, 0x00	; 0
     1f6:	80 81       	ld	r24, Z
     1f8:	81 60       	ori	r24, 0x01	; 1
     1fa:	8c 93       	st	X, r24
    DDRA &= ~(1 << PA0);    //Nadering links
     1fc:	a1 e2       	ldi	r26, 0x21	; 33
     1fe:	b0 e0       	ldi	r27, 0x00	; 0
     200:	e1 e2       	ldi	r30, 0x21	; 33
     202:	f0 e0       	ldi	r31, 0x00	; 0
     204:	80 81       	ld	r24, Z
     206:	8e 7f       	andi	r24, 0xFE	; 254
     208:	8c 93       	st	X, r24
    DDRA &= ~(1 << PA1);    //Nadering rechts
     20a:	a1 e2       	ldi	r26, 0x21	; 33
     20c:	b0 e0       	ldi	r27, 0x00	; 0
     20e:	e1 e2       	ldi	r30, 0x21	; 33
     210:	f0 e0       	ldi	r31, 0x00	; 0
     212:	80 81       	ld	r24, Z
     214:	8d 7f       	andi	r24, 0xFD	; 253
     216:	8c 93       	st	X, r24
	DDRL &= ~(1 << PL0);    //Ultrasoon echopin
     218:	aa e0       	ldi	r26, 0x0A	; 10
     21a:	b1 e0       	ldi	r27, 0x01	; 1
     21c:	ea e0       	ldi	r30, 0x0A	; 10
     21e:	f1 e0       	ldi	r31, 0x01	; 1
     220:	80 81       	ld	r24, Z
     222:	8e 7f       	andi	r24, 0xFE	; 254
     224:	8c 93       	st	X, r24
	DDRA |= (1 << PA3);     //Ultrasoon trigger
     226:	a1 e2       	ldi	r26, 0x21	; 33
     228:	b0 e0       	ldi	r27, 0x00	; 0
     22a:	e1 e2       	ldi	r30, 0x21	; 33
     22c:	f0 e0       	ldi	r31, 0x00	; 0
     22e:	80 81       	ld	r24, Z
     230:	88 60       	ori	r24, 0x08	; 8
     232:	8c 93       	st	X, r24
	DDRC |= (1<<PC7);       //Ultrasoon rechts 30
     234:	a7 e2       	ldi	r26, 0x27	; 39
     236:	b0 e0       	ldi	r27, 0x00	; 0
     238:	e7 e2       	ldi	r30, 0x27	; 39
     23a:	f0 e0       	ldi	r31, 0x00	; 0
     23c:	80 81       	ld	r24, Z
     23e:	80 68       	ori	r24, 0x80	; 128
     240:	8c 93       	st	X, r24
	DDRC |= (1<<PC6);       //Ultrasoon links 31
     242:	a7 e2       	ldi	r26, 0x27	; 39
     244:	b0 e0       	ldi	r27, 0x00	; 0
     246:	e7 e2       	ldi	r30, 0x27	; 39
     248:	f0 e0       	ldi	r31, 0x00	; 0
     24a:	80 81       	ld	r24, Z
     24c:	80 64       	ori	r24, 0x40	; 64
     24e:	8c 93       	st	X, r24
	DDRC |= (1<<PC5);       //Ultrasoon voor 32
     250:	a7 e2       	ldi	r26, 0x27	; 39
     252:	b0 e0       	ldi	r27, 0x00	; 0
     254:	e7 e2       	ldi	r30, 0x27	; 39
     256:	f0 e0       	ldi	r31, 0x00	; 0
     258:	80 81       	ld	r24, Z
     25a:	80 62       	ori	r24, 0x20	; 32
     25c:	8c 93       	st	X, r24
}
     25e:	cf 91       	pop	r28
     260:	df 91       	pop	r29
     262:	08 95       	ret

00000264 <rechte_lijn>:

void rechte_lijn(void)
{
     264:	df 93       	push	r29
     266:	cf 93       	push	r28
     268:	0f 92       	push	r0
     26a:	0f 92       	push	r0
     26c:	cd b7       	in	r28, 0x3d	; 61
     26e:	de b7       	in	r29, 0x3e	; 62
	int vlag;
	TCNT1 = 0;
     270:	e4 e8       	ldi	r30, 0x84	; 132
     272:	f0 e0       	ldi	r31, 0x00	; 0
     274:	11 82       	std	Z+1, r1	; 0x01
     276:	10 82       	st	Z, r1
	Grote_klok = 0;
     278:	10 92 15 03 	sts	0x0315, r1
     27c:	10 92 14 03 	sts	0x0314, r1
   // while ((ultrasoon <= 37) && (vlag == 1))
   // {
	//	if (((ultrasoon_rechts > 10) && (ultrasoon_rechts < 37)) || ((ultrasoon_links > 10) && (ultrasoon_links < 37)))
		//{
        if ((!(PINA & (1 << PA0))) && (!(PINA & (1 << PA1))))
     280:	e0 e2       	ldi	r30, 0x20	; 32
     282:	f0 e0       	ldi	r31, 0x00	; 0
     284:	80 81       	ld	r24, Z
     286:	88 2f       	mov	r24, r24
     288:	90 e0       	ldi	r25, 0x00	; 0
     28a:	81 70       	andi	r24, 0x01	; 1
     28c:	90 70       	andi	r25, 0x00	; 0
     28e:	00 97       	sbiw	r24, 0x00	; 0
     290:	79 f4       	brne	.+30     	; 0x2b0 <rechte_lijn+0x4c>
     292:	e0 e2       	ldi	r30, 0x20	; 32
     294:	f0 e0       	ldi	r31, 0x00	; 0
     296:	80 81       	ld	r24, Z
     298:	88 2f       	mov	r24, r24
     29a:	90 e0       	ldi	r25, 0x00	; 0
     29c:	82 70       	andi	r24, 0x02	; 2
     29e:	90 70       	andi	r25, 0x00	; 0
     2a0:	00 97       	sbiw	r24, 0x00	; 0
     2a2:	31 f4       	brne	.+12     	; 0x2b0 <rechte_lijn+0x4c>
        {
                motor(170,170);
     2a4:	8a ea       	ldi	r24, 0xAA	; 170
     2a6:	90 e0       	ldi	r25, 0x00	; 0
     2a8:	6a ea       	ldi	r22, 0xAA	; 170
     2aa:	70 e0       	ldi	r23, 0x00	; 0
     2ac:	0e 94 55 05 	call	0xaaa	; 0xaaa <motor>
        }
        if (PINA &(1 << PA0))
     2b0:	e0 e2       	ldi	r30, 0x20	; 32
     2b2:	f0 e0       	ldi	r31, 0x00	; 0
     2b4:	80 81       	ld	r24, Z
     2b6:	88 2f       	mov	r24, r24
     2b8:	90 e0       	ldi	r25, 0x00	; 0
     2ba:	81 70       	andi	r24, 0x01	; 1
     2bc:	90 70       	andi	r25, 0x00	; 0
     2be:	88 23       	and	r24, r24
     2c0:	31 f0       	breq	.+12     	; 0x2ce <rechte_lijn+0x6a>
        {
                motor (170,0);
     2c2:	8a ea       	ldi	r24, 0xAA	; 170
     2c4:	90 e0       	ldi	r25, 0x00	; 0
     2c6:	60 e0       	ldi	r22, 0x00	; 0
     2c8:	70 e0       	ldi	r23, 0x00	; 0
     2ca:	0e 94 55 05 	call	0xaaa	; 0xaaa <motor>
               // _delay_ms(40);
        }
        if (PINA &(1 << PA1))
     2ce:	e0 e2       	ldi	r30, 0x20	; 32
     2d0:	f0 e0       	ldi	r31, 0x00	; 0
     2d2:	80 81       	ld	r24, Z
     2d4:	88 2f       	mov	r24, r24
     2d6:	90 e0       	ldi	r25, 0x00	; 0
     2d8:	82 70       	andi	r24, 0x02	; 2
     2da:	90 70       	andi	r25, 0x00	; 0
     2dc:	00 97       	sbiw	r24, 0x00	; 0
     2de:	31 f0       	breq	.+12     	; 0x2ec <rechte_lijn+0x88>
        {
                motor (170,0);
     2e0:	8a ea       	ldi	r24, 0xAA	; 170
     2e2:	90 e0       	ldi	r25, 0x00	; 0
     2e4:	60 e0       	ldi	r22, 0x00	; 0
     2e6:	70 e0       	ldi	r23, 0x00	; 0
     2e8:	0e 94 55 05 	call	0xaaa	; 0xaaa <motor>
			//_delay_ms(500);
			//PORTH &= ~(1 << PH4);
//		}

    //}
}
     2ec:	0f 90       	pop	r0
     2ee:	0f 90       	pop	r0
     2f0:	cf 91       	pop	r28
     2f2:	df 91       	pop	r29
     2f4:	08 95       	ret

000002f6 <bocht_links>:

void bocht_links (void)
{
     2f6:	df 93       	push	r29
     2f8:	cf 93       	push	r28
     2fa:	0f 92       	push	r0
     2fc:	0f 92       	push	r0
     2fe:	cd b7       	in	r28, 0x3d	; 61
     300:	de b7       	in	r29, 0x3e	; 62
	int vlag;
	TCNT1 = 0;
     302:	e4 e8       	ldi	r30, 0x84	; 132
     304:	f0 e0       	ldi	r31, 0x00	; 0
     306:	11 82       	std	Z+1, r1	; 0x01
     308:	10 82       	st	Z, r1
	Grote_klok = 0;
     30a:	10 92 15 03 	sts	0x0315, r1
     30e:	10 92 14 03 	sts	0x0314, r1
     312:	45 c0       	rjmp	.+138    	; 0x39e <bocht_links+0xa8>
	while ((PINA &(1 << PA0)) && (vlag == 1))
	{
		motor(35,170); //bocht naar rechts maken
     314:	83 e2       	ldi	r24, 0x23	; 35
     316:	90 e0       	ldi	r25, 0x00	; 0
     318:	6a ea       	ldi	r22, 0xAA	; 170
     31a:	70 e0       	ldi	r23, 0x00	; 0
     31c:	0e 94 55 05 	call	0xaaa	; 0xaaa <motor>
		if ((PINA &(1 << PA0)) && (Grote_klok <= 11.3)) //waarde
     320:	e0 e2       	ldi	r30, 0x20	; 32
     322:	f0 e0       	ldi	r31, 0x00	; 0
     324:	80 81       	ld	r24, Z
     326:	88 2f       	mov	r24, r24
     328:	90 e0       	ldi	r25, 0x00	; 0
     32a:	81 70       	andi	r24, 0x01	; 1
     32c:	90 70       	andi	r25, 0x00	; 0
     32e:	88 23       	and	r24, r24
     330:	d1 f0       	breq	.+52     	; 0x366 <bocht_links+0x70>
     332:	80 91 14 03 	lds	r24, 0x0314
     336:	90 91 15 03 	lds	r25, 0x0315
     33a:	aa 27       	eor	r26, r26
     33c:	97 fd       	sbrc	r25, 7
     33e:	a0 95       	com	r26
     340:	ba 2f       	mov	r27, r26
     342:	bc 01       	movw	r22, r24
     344:	cd 01       	movw	r24, r26
     346:	0e 94 fe 06 	call	0xdfc	; 0xdfc <__floatsisf>
     34a:	dc 01       	movw	r26, r24
     34c:	cb 01       	movw	r24, r22
     34e:	bc 01       	movw	r22, r24
     350:	cd 01       	movw	r24, r26
     352:	2d ec       	ldi	r18, 0xCD	; 205
     354:	3c ec       	ldi	r19, 0xCC	; 204
     356:	44 e3       	ldi	r20, 0x34	; 52
     358:	51 e4       	ldi	r21, 0x41	; 65
     35a:	0e 94 ce 06 	call	0xd9c	; 0xd9c <__lesf2>
     35e:	18 16       	cp	r1, r24
     360:	14 f0       	brlt	.+4      	; 0x366 <bocht_links+0x70>
		{
			error();
     362:	0e 94 51 02 	call	0x4a2	; 0x4a2 <error>
		}
		if (Grote_klok >= 11.3)
     366:	80 91 14 03 	lds	r24, 0x0314
     36a:	90 91 15 03 	lds	r25, 0x0315
     36e:	aa 27       	eor	r26, r26
     370:	97 fd       	sbrc	r25, 7
     372:	a0 95       	com	r26
     374:	ba 2f       	mov	r27, r26
     376:	bc 01       	movw	r22, r24
     378:	cd 01       	movw	r24, r26
     37a:	0e 94 fe 06 	call	0xdfc	; 0xdfc <__floatsisf>
     37e:	dc 01       	movw	r26, r24
     380:	cb 01       	movw	r24, r22
     382:	bc 01       	movw	r22, r24
     384:	cd 01       	movw	r24, r26
     386:	2d ec       	ldi	r18, 0xCD	; 205
     388:	3c ec       	ldi	r19, 0xCC	; 204
     38a:	44 e3       	ldi	r20, 0x34	; 52
     38c:	51 e4       	ldi	r21, 0x41	; 65
     38e:	0e 94 9e 06 	call	0xd3c	; 0xd3c <__gesf2>
     392:	88 23       	and	r24, r24
     394:	24 f0       	brlt	.+8      	; 0x39e <bocht_links+0xa8>
		{
			vlag = 1;
     396:	81 e0       	ldi	r24, 0x01	; 1
     398:	90 e0       	ldi	r25, 0x00	; 0
     39a:	9a 83       	std	Y+2, r25	; 0x02
     39c:	89 83       	std	Y+1, r24	; 0x01
void bocht_links (void)
{
	int vlag;
	TCNT1 = 0;
	Grote_klok = 0;
	while ((PINA &(1 << PA0)) && (vlag == 1))
     39e:	e0 e2       	ldi	r30, 0x20	; 32
     3a0:	f0 e0       	ldi	r31, 0x00	; 0
     3a2:	80 81       	ld	r24, Z
     3a4:	88 2f       	mov	r24, r24
     3a6:	90 e0       	ldi	r25, 0x00	; 0
     3a8:	81 70       	andi	r24, 0x01	; 1
     3aa:	90 70       	andi	r25, 0x00	; 0
     3ac:	98 2f       	mov	r25, r24
     3ae:	81 e0       	ldi	r24, 0x01	; 1
     3b0:	89 27       	eor	r24, r25
     3b2:	88 23       	and	r24, r24
     3b4:	31 f4       	brne	.+12     	; 0x3c2 <bocht_links+0xcc>
     3b6:	89 81       	ldd	r24, Y+1	; 0x01
     3b8:	9a 81       	ldd	r25, Y+2	; 0x02
     3ba:	81 30       	cpi	r24, 0x01	; 1
     3bc:	91 05       	cpc	r25, r1
     3be:	09 f4       	brne	.+2      	; 0x3c2 <bocht_links+0xcc>
     3c0:	a9 cf       	rjmp	.-174    	; 0x314 <bocht_links+0x1e>
			vlag = 1;
		}

	}

}
     3c2:	0f 90       	pop	r0
     3c4:	0f 90       	pop	r0
     3c6:	cf 91       	pop	r28
     3c8:	df 91       	pop	r29
     3ca:	08 95       	ret

000003cc <bocht_rechts>:

void bocht_rechts (void)
{
     3cc:	df 93       	push	r29
     3ce:	cf 93       	push	r28
     3d0:	0f 92       	push	r0
     3d2:	0f 92       	push	r0
     3d4:	cd b7       	in	r28, 0x3d	; 61
     3d6:	de b7       	in	r29, 0x3e	; 62
	int vlag;
	TCNT1 = 0;
     3d8:	e4 e8       	ldi	r30, 0x84	; 132
     3da:	f0 e0       	ldi	r31, 0x00	; 0
     3dc:	11 82       	std	Z+1, r1	; 0x01
     3de:	10 82       	st	Z, r1
	Grote_klok = 0;
     3e0:	10 92 15 03 	sts	0x0315, r1
     3e4:	10 92 14 03 	sts	0x0314, r1
     3e8:	45 c0       	rjmp	.+138    	; 0x474 <bocht_rechts+0xa8>
	while ((PINA &(1 << PA0)) && (vlag == 1))
	{
		motor(170,35); //bocht naar rechts maken
     3ea:	8a ea       	ldi	r24, 0xAA	; 170
     3ec:	90 e0       	ldi	r25, 0x00	; 0
     3ee:	63 e2       	ldi	r22, 0x23	; 35
     3f0:	70 e0       	ldi	r23, 0x00	; 0
     3f2:	0e 94 55 05 	call	0xaaa	; 0xaaa <motor>
		if ((PINA &(1 << PA0)) && (Grote_klok <= 11.3)) //waarde
     3f6:	e0 e2       	ldi	r30, 0x20	; 32
     3f8:	f0 e0       	ldi	r31, 0x00	; 0
     3fa:	80 81       	ld	r24, Z
     3fc:	88 2f       	mov	r24, r24
     3fe:	90 e0       	ldi	r25, 0x00	; 0
     400:	81 70       	andi	r24, 0x01	; 1
     402:	90 70       	andi	r25, 0x00	; 0
     404:	88 23       	and	r24, r24
     406:	d1 f0       	breq	.+52     	; 0x43c <bocht_rechts+0x70>
     408:	80 91 14 03 	lds	r24, 0x0314
     40c:	90 91 15 03 	lds	r25, 0x0315
     410:	aa 27       	eor	r26, r26
     412:	97 fd       	sbrc	r25, 7
     414:	a0 95       	com	r26
     416:	ba 2f       	mov	r27, r26
     418:	bc 01       	movw	r22, r24
     41a:	cd 01       	movw	r24, r26
     41c:	0e 94 fe 06 	call	0xdfc	; 0xdfc <__floatsisf>
     420:	dc 01       	movw	r26, r24
     422:	cb 01       	movw	r24, r22
     424:	bc 01       	movw	r22, r24
     426:	cd 01       	movw	r24, r26
     428:	2d ec       	ldi	r18, 0xCD	; 205
     42a:	3c ec       	ldi	r19, 0xCC	; 204
     42c:	44 e3       	ldi	r20, 0x34	; 52
     42e:	51 e4       	ldi	r21, 0x41	; 65
     430:	0e 94 ce 06 	call	0xd9c	; 0xd9c <__lesf2>
     434:	18 16       	cp	r1, r24
     436:	14 f0       	brlt	.+4      	; 0x43c <bocht_rechts+0x70>
		{
			error();
     438:	0e 94 51 02 	call	0x4a2	; 0x4a2 <error>
		}
		if (Grote_klok >= 11.3)
     43c:	80 91 14 03 	lds	r24, 0x0314
     440:	90 91 15 03 	lds	r25, 0x0315
     444:	aa 27       	eor	r26, r26
     446:	97 fd       	sbrc	r25, 7
     448:	a0 95       	com	r26
     44a:	ba 2f       	mov	r27, r26
     44c:	bc 01       	movw	r22, r24
     44e:	cd 01       	movw	r24, r26
     450:	0e 94 fe 06 	call	0xdfc	; 0xdfc <__floatsisf>
     454:	dc 01       	movw	r26, r24
     456:	cb 01       	movw	r24, r22
     458:	bc 01       	movw	r22, r24
     45a:	cd 01       	movw	r24, r26
     45c:	2d ec       	ldi	r18, 0xCD	; 205
     45e:	3c ec       	ldi	r19, 0xCC	; 204
     460:	44 e3       	ldi	r20, 0x34	; 52
     462:	51 e4       	ldi	r21, 0x41	; 65
     464:	0e 94 9e 06 	call	0xd3c	; 0xd3c <__gesf2>
     468:	88 23       	and	r24, r24
     46a:	24 f0       	brlt	.+8      	; 0x474 <bocht_rechts+0xa8>
		{
			vlag = 1;
     46c:	81 e0       	ldi	r24, 0x01	; 1
     46e:	90 e0       	ldi	r25, 0x00	; 0
     470:	9a 83       	std	Y+2, r25	; 0x02
     472:	89 83       	std	Y+1, r24	; 0x01
void bocht_rechts (void)
{
	int vlag;
	TCNT1 = 0;
	Grote_klok = 0;
	while ((PINA &(1 << PA0)) && (vlag == 1))
     474:	e0 e2       	ldi	r30, 0x20	; 32
     476:	f0 e0       	ldi	r31, 0x00	; 0
     478:	80 81       	ld	r24, Z
     47a:	88 2f       	mov	r24, r24
     47c:	90 e0       	ldi	r25, 0x00	; 0
     47e:	81 70       	andi	r24, 0x01	; 1
     480:	90 70       	andi	r25, 0x00	; 0
     482:	98 2f       	mov	r25, r24
     484:	81 e0       	ldi	r24, 0x01	; 1
     486:	89 27       	eor	r24, r25
     488:	88 23       	and	r24, r24
     48a:	31 f4       	brne	.+12     	; 0x498 <bocht_rechts+0xcc>
     48c:	89 81       	ldd	r24, Y+1	; 0x01
     48e:	9a 81       	ldd	r25, Y+2	; 0x02
     490:	81 30       	cpi	r24, 0x01	; 1
     492:	91 05       	cpc	r25, r1
     494:	09 f4       	brne	.+2      	; 0x498 <bocht_rechts+0xcc>
     496:	a9 cf       	rjmp	.-174    	; 0x3ea <bocht_rechts+0x1e>
			vlag = 1;
		}

	}

}
     498:	0f 90       	pop	r0
     49a:	0f 90       	pop	r0
     49c:	cf 91       	pop	r28
     49e:	df 91       	pop	r29
     4a0:	08 95       	ret

000004a2 <error>:

void error (void) //om een probleem optelossen todat we een betere oplossing hebben of niet
{
     4a2:	df 93       	push	r29
     4a4:	cf 93       	push	r28
     4a6:	cd b7       	in	r28, 0x3d	; 61
     4a8:	de b7       	in	r29, 0x3e	; 62
	while (1)
	{
	motor(0,0);
     4aa:	80 e0       	ldi	r24, 0x00	; 0
     4ac:	90 e0       	ldi	r25, 0x00	; 0
     4ae:	60 e0       	ldi	r22, 0x00	; 0
     4b0:	70 e0       	ldi	r23, 0x00	; 0
     4b2:	0e 94 55 05 	call	0xaaa	; 0xaaa <motor>
     4b6:	f9 cf       	rjmp	.-14     	; 0x4aa <error+0x8>

000004b8 <__vector_17>:
uint16_t waarde2;
uint32_t counts;
int ultasoon_nr;

ISR(TIMER1_COMPA_vect)
{
     4b8:	1f 92       	push	r1
     4ba:	0f 92       	push	r0
     4bc:	0f b6       	in	r0, 0x3f	; 63
     4be:	0f 92       	push	r0
     4c0:	00 90 5b 00 	lds	r0, 0x005B
     4c4:	0f 92       	push	r0
     4c6:	11 24       	eor	r1, r1
     4c8:	8f 93       	push	r24
     4ca:	9f 93       	push	r25
     4cc:	ef 93       	push	r30
     4ce:	ff 93       	push	r31
     4d0:	df 93       	push	r29
     4d2:	cf 93       	push	r28
     4d4:	cd b7       	in	r28, 0x3d	; 61
     4d6:	de b7       	in	r29, 0x3e	; 62
    TCNT1 = 0;
     4d8:	e4 e8       	ldi	r30, 0x84	; 132
     4da:	f0 e0       	ldi	r31, 0x00	; 0
     4dc:	11 82       	std	Z+1, r1	; 0x01
     4de:	10 82       	st	Z, r1
    Grote_klok++;
     4e0:	80 91 14 03 	lds	r24, 0x0314
     4e4:	90 91 15 03 	lds	r25, 0x0315
     4e8:	01 96       	adiw	r24, 0x01	; 1
     4ea:	90 93 15 03 	sts	0x0315, r25
     4ee:	80 93 14 03 	sts	0x0314, r24
}
     4f2:	cf 91       	pop	r28
     4f4:	df 91       	pop	r29
     4f6:	ff 91       	pop	r31
     4f8:	ef 91       	pop	r30
     4fa:	9f 91       	pop	r25
     4fc:	8f 91       	pop	r24
     4fe:	0f 90       	pop	r0
     500:	00 92 5b 00 	sts	0x005B, r0
     504:	0f 90       	pop	r0
     506:	0f be       	out	0x3f, r0	; 63
     508:	0f 90       	pop	r0
     50a:	1f 90       	pop	r1
     50c:	18 95       	reti

0000050e <__vector_41>:

ISR (TIMER4_CAPT_vect)
{
     50e:	1f 92       	push	r1
     510:	0f 92       	push	r0
     512:	0f b6       	in	r0, 0x3f	; 63
     514:	0f 92       	push	r0
     516:	00 90 5b 00 	lds	r0, 0x005B
     51a:	0f 92       	push	r0
     51c:	11 24       	eor	r1, r1
     51e:	ef 92       	push	r14
     520:	ff 92       	push	r15
     522:	0f 93       	push	r16
     524:	1f 93       	push	r17
     526:	2f 93       	push	r18
     528:	3f 93       	push	r19
     52a:	4f 93       	push	r20
     52c:	5f 93       	push	r21
     52e:	6f 93       	push	r22
     530:	7f 93       	push	r23
     532:	8f 93       	push	r24
     534:	9f 93       	push	r25
     536:	af 93       	push	r26
     538:	bf 93       	push	r27
     53a:	ef 93       	push	r30
     53c:	ff 93       	push	r31
     53e:	df 93       	push	r29
     540:	cf 93       	push	r28
     542:	cd b7       	in	r28, 0x3d	; 61
     544:	de b7       	in	r29, 0x3e	; 62
    if (TCCR4B & (1<<ICES4)) // On rising edge
     546:	e1 ea       	ldi	r30, 0xA1	; 161
     548:	f0 e0       	ldi	r31, 0x00	; 0
     54a:	80 81       	ld	r24, Z
     54c:	88 2f       	mov	r24, r24
     54e:	90 e0       	ldi	r25, 0x00	; 0
     550:	80 74       	andi	r24, 0x40	; 64
     552:	90 70       	andi	r25, 0x00	; 0
     554:	00 97       	sbiw	r24, 0x00	; 0
     556:	81 f0       	breq	.+32     	; 0x578 <__vector_41+0x6a>
    {
        TCCR4B &= ~(1<<ICES4); // Next time detect falling edge
     558:	a1 ea       	ldi	r26, 0xA1	; 161
     55a:	b0 e0       	ldi	r27, 0x00	; 0
     55c:	e1 ea       	ldi	r30, 0xA1	; 161
     55e:	f0 e0       	ldi	r31, 0x00	; 0
     560:	80 81       	ld	r24, Z
     562:	8f 7b       	andi	r24, 0xBF	; 191
     564:	8c 93       	st	X, r24
        waarde1 = TCNT4; // Save current count
     566:	e4 ea       	ldi	r30, 0xA4	; 164
     568:	f0 e0       	ldi	r31, 0x00	; 0
     56a:	80 81       	ld	r24, Z
     56c:	91 81       	ldd	r25, Z+1	; 0x01
     56e:	90 93 1f 03 	sts	0x031F, r25
     572:	80 93 1e 03 	sts	0x031E, r24
     576:	aa c0       	rjmp	.+340    	; 0x6cc <__vector_41+0x1be>
    }
    else // On falling edge
    {
        TCCR4B |= 0; // geen interrupts meer
     578:	a1 ea       	ldi	r26, 0xA1	; 161
     57a:	b0 e0       	ldi	r27, 0x00	; 0
     57c:	e1 ea       	ldi	r30, 0xA1	; 161
     57e:	f0 e0       	ldi	r31, 0x00	; 0
     580:	80 81       	ld	r24, Z
     582:	8c 93       	st	X, r24
        waarde2 = TCNT4; // Save current count
     584:	e4 ea       	ldi	r30, 0xA4	; 164
     586:	f0 e0       	ldi	r31, 0x00	; 0
     588:	80 81       	ld	r24, Z
     58a:	91 81       	ldd	r25, Z+1	; 0x01
     58c:	90 93 19 03 	sts	0x0319, r25
     590:	80 93 18 03 	sts	0x0318, r24
        counts = (uint32_t)waarde1 - (uint32_t)waarde2;
     594:	80 91 1e 03 	lds	r24, 0x031E
     598:	90 91 1f 03 	lds	r25, 0x031F
     59c:	9c 01       	movw	r18, r24
     59e:	40 e0       	ldi	r20, 0x00	; 0
     5a0:	50 e0       	ldi	r21, 0x00	; 0
     5a2:	80 91 18 03 	lds	r24, 0x0318
     5a6:	90 91 19 03 	lds	r25, 0x0319
     5aa:	cc 01       	movw	r24, r24
     5ac:	a0 e0       	ldi	r26, 0x00	; 0
     5ae:	b0 e0       	ldi	r27, 0x00	; 0
     5b0:	79 01       	movw	r14, r18
     5b2:	8a 01       	movw	r16, r20
     5b4:	e8 1a       	sub	r14, r24
     5b6:	f9 0a       	sbc	r15, r25
     5b8:	0a 0b       	sbc	r16, r26
     5ba:	1b 0b       	sbc	r17, r27
     5bc:	d8 01       	movw	r26, r16
     5be:	c7 01       	movw	r24, r14
     5c0:	80 93 1a 03 	sts	0x031A, r24
     5c4:	90 93 1b 03 	sts	0x031B, r25
     5c8:	a0 93 1c 03 	sts	0x031C, r26
     5cc:	b0 93 1d 03 	sts	0x031D, r27
		if ((ultasoon_nr = 3))
     5d0:	83 e0       	ldi	r24, 0x03	; 3
     5d2:	90 e0       	ldi	r25, 0x00	; 0
     5d4:	90 93 17 03 	sts	0x0317, r25
     5d8:	80 93 16 03 	sts	0x0316, r24
		{
        ultrasoon = (counts/2)*0.01715; //snelheid van geluid keer de tijd die de klok vertegenwoordigd (16/8 = 2 1/2E6= 5E-7)
     5dc:	80 91 1a 03 	lds	r24, 0x031A
     5e0:	90 91 1b 03 	lds	r25, 0x031B
     5e4:	a0 91 1c 03 	lds	r26, 0x031C
     5e8:	b0 91 1d 03 	lds	r27, 0x031D
     5ec:	b6 95       	lsr	r27
     5ee:	a7 95       	ror	r26
     5f0:	97 95       	ror	r25
     5f2:	87 95       	ror	r24
     5f4:	bc 01       	movw	r22, r24
     5f6:	cd 01       	movw	r24, r26
     5f8:	0e 94 5c 07 	call	0xeb8	; 0xeb8 <__floatunsisf>
     5fc:	dc 01       	movw	r26, r24
     5fe:	cb 01       	movw	r24, r22
     600:	bc 01       	movw	r22, r24
     602:	cd 01       	movw	r24, r26
     604:	28 e2       	ldi	r18, 0x28	; 40
     606:	3e e7       	ldi	r19, 0x7E	; 126
     608:	4c e8       	ldi	r20, 0x8C	; 140
     60a:	5c e3       	ldi	r21, 0x3C	; 60
     60c:	0e 94 a4 05 	call	0xb48	; 0xb48 <__mulsf3>
     610:	dc 01       	movw	r26, r24
     612:	cb 01       	movw	r24, r22
     614:	80 93 08 03 	sts	0x0308, r24
     618:	90 93 09 03 	sts	0x0309, r25
     61c:	a0 93 0a 03 	sts	0x030A, r26
     620:	b0 93 0b 03 	sts	0x030B, r27
		}
		if ((ultasoon_nr = 2))
     624:	82 e0       	ldi	r24, 0x02	; 2
     626:	90 e0       	ldi	r25, 0x00	; 0
     628:	90 93 17 03 	sts	0x0317, r25
     62c:	80 93 16 03 	sts	0x0316, r24
		{
        ultrasoon_links = (counts/2)*0.01715; //snelheid van geluid keer de tijd die de klok vertegenwoordigd (16/8 = 2 1/2E6= 5E-7)
     630:	80 91 1a 03 	lds	r24, 0x031A
     634:	90 91 1b 03 	lds	r25, 0x031B
     638:	a0 91 1c 03 	lds	r26, 0x031C
     63c:	b0 91 1d 03 	lds	r27, 0x031D
     640:	b6 95       	lsr	r27
     642:	a7 95       	ror	r26
     644:	97 95       	ror	r25
     646:	87 95       	ror	r24
     648:	bc 01       	movw	r22, r24
     64a:	cd 01       	movw	r24, r26
     64c:	0e 94 5c 07 	call	0xeb8	; 0xeb8 <__floatunsisf>
     650:	dc 01       	movw	r26, r24
     652:	cb 01       	movw	r24, r22
     654:	bc 01       	movw	r22, r24
     656:	cd 01       	movw	r24, r26
     658:	28 e2       	ldi	r18, 0x28	; 40
     65a:	3e e7       	ldi	r19, 0x7E	; 126
     65c:	4c e8       	ldi	r20, 0x8C	; 140
     65e:	5c e3       	ldi	r21, 0x3C	; 60
     660:	0e 94 a4 05 	call	0xb48	; 0xb48 <__mulsf3>
     664:	dc 01       	movw	r26, r24
     666:	cb 01       	movw	r24, r22
     668:	80 93 0c 03 	sts	0x030C, r24
     66c:	90 93 0d 03 	sts	0x030D, r25
     670:	a0 93 0e 03 	sts	0x030E, r26
     674:	b0 93 0f 03 	sts	0x030F, r27
		}
		if ((ultasoon_nr = 1))
     678:	81 e0       	ldi	r24, 0x01	; 1
     67a:	90 e0       	ldi	r25, 0x00	; 0
     67c:	90 93 17 03 	sts	0x0317, r25
     680:	80 93 16 03 	sts	0x0316, r24
		{
        ultrasoon_rechts = (counts/2)*0.01715; //snelheid van geluid keer de tijd die de klok vertegenwoordigd (16/8 = 2 1/2E6= 5E-7)
     684:	80 91 1a 03 	lds	r24, 0x031A
     688:	90 91 1b 03 	lds	r25, 0x031B
     68c:	a0 91 1c 03 	lds	r26, 0x031C
     690:	b0 91 1d 03 	lds	r27, 0x031D
     694:	b6 95       	lsr	r27
     696:	a7 95       	ror	r26
     698:	97 95       	ror	r25
     69a:	87 95       	ror	r24
     69c:	bc 01       	movw	r22, r24
     69e:	cd 01       	movw	r24, r26
     6a0:	0e 94 5c 07 	call	0xeb8	; 0xeb8 <__floatunsisf>
     6a4:	dc 01       	movw	r26, r24
     6a6:	cb 01       	movw	r24, r22
     6a8:	bc 01       	movw	r22, r24
     6aa:	cd 01       	movw	r24, r26
     6ac:	28 e2       	ldi	r18, 0x28	; 40
     6ae:	3e e7       	ldi	r19, 0x7E	; 126
     6b0:	4c e8       	ldi	r20, 0x8C	; 140
     6b2:	5c e3       	ldi	r21, 0x3C	; 60
     6b4:	0e 94 a4 05 	call	0xb48	; 0xb48 <__mulsf3>
     6b8:	dc 01       	movw	r26, r24
     6ba:	cb 01       	movw	r24, r22
     6bc:	80 93 10 03 	sts	0x0310, r24
     6c0:	90 93 11 03 	sts	0x0311, r25
     6c4:	a0 93 12 03 	sts	0x0312, r26
     6c8:	b0 93 13 03 	sts	0x0313, r27
		}
    }
}
     6cc:	cf 91       	pop	r28
     6ce:	df 91       	pop	r29
     6d0:	ff 91       	pop	r31
     6d2:	ef 91       	pop	r30
     6d4:	bf 91       	pop	r27
     6d6:	af 91       	pop	r26
     6d8:	9f 91       	pop	r25
     6da:	8f 91       	pop	r24
     6dc:	7f 91       	pop	r23
     6de:	6f 91       	pop	r22
     6e0:	5f 91       	pop	r21
     6e2:	4f 91       	pop	r20
     6e4:	3f 91       	pop	r19
     6e6:	2f 91       	pop	r18
     6e8:	1f 91       	pop	r17
     6ea:	0f 91       	pop	r16
     6ec:	ff 90       	pop	r15
     6ee:	ef 90       	pop	r14
     6f0:	0f 90       	pop	r0
     6f2:	00 92 5b 00 	sts	0x005B, r0
     6f6:	0f 90       	pop	r0
     6f8:	0f be       	out	0x3f, r0	; 63
     6fa:	0f 90       	pop	r0
     6fc:	1f 90       	pop	r1
     6fe:	18 95       	reti

00000700 <__vector_42>:

ISR(TIMER4_COMPA_vect)
{
     700:	1f 92       	push	r1
     702:	0f 92       	push	r0
     704:	0f b6       	in	r0, 0x3f	; 63
     706:	0f 92       	push	r0
     708:	00 90 5b 00 	lds	r0, 0x005B
     70c:	0f 92       	push	r0
     70e:	11 24       	eor	r1, r1
     710:	8f 93       	push	r24
     712:	af 93       	push	r26
     714:	bf 93       	push	r27
     716:	ef 93       	push	r30
     718:	ff 93       	push	r31
     71a:	df 93       	push	r29
     71c:	cf 93       	push	r28
     71e:	cd b7       	in	r28, 0x3d	; 61
     720:	de b7       	in	r29, 0x3e	; 62
    PORTC = 0;
     722:	e8 e2       	ldi	r30, 0x28	; 40
     724:	f0 e0       	ldi	r31, 0x00	; 0
     726:	10 82       	st	Z, r1
    TIMSK4 = (1 << ICIE4);
     728:	e2 e7       	ldi	r30, 0x72	; 114
     72a:	f0 e0       	ldi	r31, 0x00	; 0
     72c:	80 e2       	ldi	r24, 0x20	; 32
     72e:	80 83       	st	Z, r24
    TCCR4B |= (1 << ICES4);
     730:	a1 ea       	ldi	r26, 0xA1	; 161
     732:	b0 e0       	ldi	r27, 0x00	; 0
     734:	e1 ea       	ldi	r30, 0xA1	; 161
     736:	f0 e0       	ldi	r31, 0x00	; 0
     738:	80 81       	ld	r24, Z
     73a:	80 64       	ori	r24, 0x40	; 64
     73c:	8c 93       	st	X, r24
}
     73e:	cf 91       	pop	r28
     740:	df 91       	pop	r29
     742:	ff 91       	pop	r31
     744:	ef 91       	pop	r30
     746:	bf 91       	pop	r27
     748:	af 91       	pop	r26
     74a:	8f 91       	pop	r24
     74c:	0f 90       	pop	r0
     74e:	00 92 5b 00 	sts	0x005B, r0
     752:	0f 90       	pop	r0
     754:	0f be       	out	0x3f, r0	; 63
     756:	0f 90       	pop	r0
     758:	1f 90       	pop	r1
     75a:	18 95       	reti

0000075c <__vector_15>:

ISR(TIMER2_OVF_vect)
{
     75c:	1f 92       	push	r1
     75e:	0f 92       	push	r0
     760:	0f b6       	in	r0, 0x3f	; 63
     762:	0f 92       	push	r0
     764:	00 90 5b 00 	lds	r0, 0x005B
     768:	0f 92       	push	r0
     76a:	11 24       	eor	r1, r1
     76c:	8f 93       	push	r24
     76e:	9f 93       	push	r25
     770:	af 93       	push	r26
     772:	bf 93       	push	r27
     774:	ef 93       	push	r30
     776:	ff 93       	push	r31
     778:	df 93       	push	r29
     77a:	cf 93       	push	r28
     77c:	cd b7       	in	r28, 0x3d	; 61
     77e:	de b7       	in	r29, 0x3e	; 62
    TIMSK4 = (1<<OCIE4A);
     780:	e2 e7       	ldi	r30, 0x72	; 114
     782:	f0 e0       	ldi	r31, 0x00	; 0
     784:	82 e0       	ldi	r24, 0x02	; 2
     786:	80 83       	st	Z, r24
    PORTA |= (1<<PC5);
     788:	a2 e2       	ldi	r26, 0x22	; 34
     78a:	b0 e0       	ldi	r27, 0x00	; 0
     78c:	e2 e2       	ldi	r30, 0x22	; 34
     78e:	f0 e0       	ldi	r31, 0x00	; 0
     790:	80 81       	ld	r24, Z
     792:	80 62       	ori	r24, 0x20	; 32
     794:	8c 93       	st	X, r24
    TCNT4 =0;
     796:	e4 ea       	ldi	r30, 0xA4	; 164
     798:	f0 e0       	ldi	r31, 0x00	; 0
     79a:	11 82       	std	Z+1, r1	; 0x01
     79c:	10 82       	st	Z, r1
    OCR4A = 20000;
     79e:	e8 ea       	ldi	r30, 0xA8	; 168
     7a0:	f0 e0       	ldi	r31, 0x00	; 0
     7a2:	80 e2       	ldi	r24, 0x20	; 32
     7a4:	9e e4       	ldi	r25, 0x4E	; 78
     7a6:	91 83       	std	Z+1, r25	; 0x01
     7a8:	80 83       	st	Z, r24
	ultasoon_nr = 3; //VOOR
     7aa:	83 e0       	ldi	r24, 0x03	; 3
     7ac:	90 e0       	ldi	r25, 0x00	; 0
     7ae:	90 93 17 03 	sts	0x0317, r25
     7b2:	80 93 16 03 	sts	0x0316, r24
}
     7b6:	cf 91       	pop	r28
     7b8:	df 91       	pop	r29
     7ba:	ff 91       	pop	r31
     7bc:	ef 91       	pop	r30
     7be:	bf 91       	pop	r27
     7c0:	af 91       	pop	r26
     7c2:	9f 91       	pop	r25
     7c4:	8f 91       	pop	r24
     7c6:	0f 90       	pop	r0
     7c8:	00 92 5b 00 	sts	0x005B, r0
     7cc:	0f 90       	pop	r0
     7ce:	0f be       	out	0x3f, r0	; 63
     7d0:	0f 90       	pop	r0
     7d2:	1f 90       	pop	r1
     7d4:	18 95       	reti

000007d6 <__vector_13>:

ISR(TIMER2_COMPA_vect)
{
     7d6:	1f 92       	push	r1
     7d8:	0f 92       	push	r0
     7da:	0f b6       	in	r0, 0x3f	; 63
     7dc:	0f 92       	push	r0
     7de:	00 90 5b 00 	lds	r0, 0x005B
     7e2:	0f 92       	push	r0
     7e4:	11 24       	eor	r1, r1
     7e6:	8f 93       	push	r24
     7e8:	9f 93       	push	r25
     7ea:	af 93       	push	r26
     7ec:	bf 93       	push	r27
     7ee:	ef 93       	push	r30
     7f0:	ff 93       	push	r31
     7f2:	df 93       	push	r29
     7f4:	cf 93       	push	r28
     7f6:	cd b7       	in	r28, 0x3d	; 61
     7f8:	de b7       	in	r29, 0x3e	; 62
    TIMSK4 = (1<<OCIE4A);
     7fa:	e2 e7       	ldi	r30, 0x72	; 114
     7fc:	f0 e0       	ldi	r31, 0x00	; 0
     7fe:	82 e0       	ldi	r24, 0x02	; 2
     800:	80 83       	st	Z, r24
    PORTA |= (1<<PC6); //LINKS
     802:	a2 e2       	ldi	r26, 0x22	; 34
     804:	b0 e0       	ldi	r27, 0x00	; 0
     806:	e2 e2       	ldi	r30, 0x22	; 34
     808:	f0 e0       	ldi	r31, 0x00	; 0
     80a:	80 81       	ld	r24, Z
     80c:	80 64       	ori	r24, 0x40	; 64
     80e:	8c 93       	st	X, r24
    TCNT4 =0;
     810:	e4 ea       	ldi	r30, 0xA4	; 164
     812:	f0 e0       	ldi	r31, 0x00	; 0
     814:	11 82       	std	Z+1, r1	; 0x01
     816:	10 82       	st	Z, r1
    OCR4A = 20000;
     818:	e8 ea       	ldi	r30, 0xA8	; 168
     81a:	f0 e0       	ldi	r31, 0x00	; 0
     81c:	80 e2       	ldi	r24, 0x20	; 32
     81e:	9e e4       	ldi	r25, 0x4E	; 78
     820:	91 83       	std	Z+1, r25	; 0x01
     822:	80 83       	st	Z, r24
	ultasoon_nr = 2;
     824:	82 e0       	ldi	r24, 0x02	; 2
     826:	90 e0       	ldi	r25, 0x00	; 0
     828:	90 93 17 03 	sts	0x0317, r25
     82c:	80 93 16 03 	sts	0x0316, r24
}
     830:	cf 91       	pop	r28
     832:	df 91       	pop	r29
     834:	ff 91       	pop	r31
     836:	ef 91       	pop	r30
     838:	bf 91       	pop	r27
     83a:	af 91       	pop	r26
     83c:	9f 91       	pop	r25
     83e:	8f 91       	pop	r24
     840:	0f 90       	pop	r0
     842:	00 92 5b 00 	sts	0x005B, r0
     846:	0f 90       	pop	r0
     848:	0f be       	out	0x3f, r0	; 63
     84a:	0f 90       	pop	r0
     84c:	1f 90       	pop	r1
     84e:	18 95       	reti

00000850 <__vector_14>:

ISR(TIMER2_COMPB_vect)
{
     850:	1f 92       	push	r1
     852:	0f 92       	push	r0
     854:	0f b6       	in	r0, 0x3f	; 63
     856:	0f 92       	push	r0
     858:	00 90 5b 00 	lds	r0, 0x005B
     85c:	0f 92       	push	r0
     85e:	11 24       	eor	r1, r1
     860:	8f 93       	push	r24
     862:	9f 93       	push	r25
     864:	af 93       	push	r26
     866:	bf 93       	push	r27
     868:	ef 93       	push	r30
     86a:	ff 93       	push	r31
     86c:	df 93       	push	r29
     86e:	cf 93       	push	r28
     870:	cd b7       	in	r28, 0x3d	; 61
     872:	de b7       	in	r29, 0x3e	; 62
    TIMSK4 = (1<<OCIE4A);
     874:	e2 e7       	ldi	r30, 0x72	; 114
     876:	f0 e0       	ldi	r31, 0x00	; 0
     878:	82 e0       	ldi	r24, 0x02	; 2
     87a:	80 83       	st	Z, r24
    PORTA |= (1<<PC5); //RECHTS
     87c:	a2 e2       	ldi	r26, 0x22	; 34
     87e:	b0 e0       	ldi	r27, 0x00	; 0
     880:	e2 e2       	ldi	r30, 0x22	; 34
     882:	f0 e0       	ldi	r31, 0x00	; 0
     884:	80 81       	ld	r24, Z
     886:	80 62       	ori	r24, 0x20	; 32
     888:	8c 93       	st	X, r24
    TCNT4 =0;
     88a:	e4 ea       	ldi	r30, 0xA4	; 164
     88c:	f0 e0       	ldi	r31, 0x00	; 0
     88e:	11 82       	std	Z+1, r1	; 0x01
     890:	10 82       	st	Z, r1
    OCR4A = 20000;
     892:	e8 ea       	ldi	r30, 0xA8	; 168
     894:	f0 e0       	ldi	r31, 0x00	; 0
     896:	80 e2       	ldi	r24, 0x20	; 32
     898:	9e e4       	ldi	r25, 0x4E	; 78
     89a:	91 83       	std	Z+1, r25	; 0x01
     89c:	80 83       	st	Z, r24
	ultasoon_nr = 1;
     89e:	81 e0       	ldi	r24, 0x01	; 1
     8a0:	90 e0       	ldi	r25, 0x00	; 0
     8a2:	90 93 17 03 	sts	0x0317, r25
     8a6:	80 93 16 03 	sts	0x0316, r24
}
     8aa:	cf 91       	pop	r28
     8ac:	df 91       	pop	r29
     8ae:	ff 91       	pop	r31
     8b0:	ef 91       	pop	r30
     8b2:	bf 91       	pop	r27
     8b4:	af 91       	pop	r26
     8b6:	9f 91       	pop	r25
     8b8:	8f 91       	pop	r24
     8ba:	0f 90       	pop	r0
     8bc:	00 92 5b 00 	sts	0x005B, r0
     8c0:	0f 90       	pop	r0
     8c2:	0f be       	out	0x3f, r0	; 63
     8c4:	0f 90       	pop	r0
     8c6:	1f 90       	pop	r1
     8c8:	18 95       	reti

000008ca <__vector_23>:

ISR(TIMER0_OVF_vect)
{
     8ca:	1f 92       	push	r1
     8cc:	0f 92       	push	r0
     8ce:	0f b6       	in	r0, 0x3f	; 63
     8d0:	0f 92       	push	r0
     8d2:	00 90 5b 00 	lds	r0, 0x005B
     8d6:	0f 92       	push	r0
     8d8:	11 24       	eor	r1, r1
     8da:	8f 93       	push	r24
     8dc:	af 93       	push	r26
     8de:	bf 93       	push	r27
     8e0:	ef 93       	push	r30
     8e2:	ff 93       	push	r31
     8e4:	df 93       	push	r29
     8e6:	cf 93       	push	r28
     8e8:	cd b7       	in	r28, 0x3d	; 61
     8ea:	de b7       	in	r29, 0x3e	; 62
    if (OCR0A == 0 && OCR0B == 0)
     8ec:	e7 e4       	ldi	r30, 0x47	; 71
     8ee:	f0 e0       	ldi	r31, 0x00	; 0
     8f0:	80 81       	ld	r24, Z
     8f2:	88 23       	and	r24, r24
     8f4:	99 f4       	brne	.+38     	; 0x91c <__vector_23+0x52>
     8f6:	e8 e4       	ldi	r30, 0x48	; 72
     8f8:	f0 e0       	ldi	r31, 0x00	; 0
     8fa:	80 81       	ld	r24, Z
     8fc:	88 23       	and	r24, r24
     8fe:	71 f4       	brne	.+28     	; 0x91c <__vector_23+0x52>
    {
        PORTE &= ~(1<<PE4);
     900:	ae e2       	ldi	r26, 0x2E	; 46
     902:	b0 e0       	ldi	r27, 0x00	; 0
     904:	ee e2       	ldi	r30, 0x2E	; 46
     906:	f0 e0       	ldi	r31, 0x00	; 0
     908:	80 81       	ld	r24, Z
     90a:	8f 7e       	andi	r24, 0xEF	; 239
     90c:	8c 93       	st	X, r24
        PORTE &= ~(1<<PE3);
     90e:	ae e2       	ldi	r26, 0x2E	; 46
     910:	b0 e0       	ldi	r27, 0x00	; 0
     912:	ee e2       	ldi	r30, 0x2E	; 46
     914:	f0 e0       	ldi	r31, 0x00	; 0
     916:	80 81       	ld	r24, Z
     918:	87 7f       	andi	r24, 0xF7	; 247
     91a:	8c 93       	st	X, r24
    }
    if (OCR0A != 0)
     91c:	e7 e4       	ldi	r30, 0x47	; 71
     91e:	f0 e0       	ldi	r31, 0x00	; 0
     920:	80 81       	ld	r24, Z
     922:	88 23       	and	r24, r24
     924:	39 f0       	breq	.+14     	; 0x934 <__vector_23+0x6a>
    {
        PORTE |= (1<<PE4);
     926:	ae e2       	ldi	r26, 0x2E	; 46
     928:	b0 e0       	ldi	r27, 0x00	; 0
     92a:	ee e2       	ldi	r30, 0x2E	; 46
     92c:	f0 e0       	ldi	r31, 0x00	; 0
     92e:	80 81       	ld	r24, Z
     930:	80 61       	ori	r24, 0x10	; 16
     932:	8c 93       	st	X, r24
    }
    if (OCR0B != 0)
     934:	e8 e4       	ldi	r30, 0x48	; 72
     936:	f0 e0       	ldi	r31, 0x00	; 0
     938:	80 81       	ld	r24, Z
     93a:	88 23       	and	r24, r24
     93c:	39 f0       	breq	.+14     	; 0x94c <__vector_23+0x82>
    {
        PORTE |= (1<<PE3);
     93e:	ae e2       	ldi	r26, 0x2E	; 46
     940:	b0 e0       	ldi	r27, 0x00	; 0
     942:	ee e2       	ldi	r30, 0x2E	; 46
     944:	f0 e0       	ldi	r31, 0x00	; 0
     946:	80 81       	ld	r24, Z
     948:	88 60       	ori	r24, 0x08	; 8
     94a:	8c 93       	st	X, r24
    }
}
     94c:	cf 91       	pop	r28
     94e:	df 91       	pop	r29
     950:	ff 91       	pop	r31
     952:	ef 91       	pop	r30
     954:	bf 91       	pop	r27
     956:	af 91       	pop	r26
     958:	8f 91       	pop	r24
     95a:	0f 90       	pop	r0
     95c:	00 92 5b 00 	sts	0x005B, r0
     960:	0f 90       	pop	r0
     962:	0f be       	out	0x3f, r0	; 63
     964:	0f 90       	pop	r0
     966:	1f 90       	pop	r1
     968:	18 95       	reti

0000096a <__vector_21>:

ISR(TIMER0_COMPA_vect)
{
     96a:	1f 92       	push	r1
     96c:	0f 92       	push	r0
     96e:	0f b6       	in	r0, 0x3f	; 63
     970:	0f 92       	push	r0
     972:	00 90 5b 00 	lds	r0, 0x005B
     976:	0f 92       	push	r0
     978:	11 24       	eor	r1, r1
     97a:	8f 93       	push	r24
     97c:	af 93       	push	r26
     97e:	bf 93       	push	r27
     980:	ef 93       	push	r30
     982:	ff 93       	push	r31
     984:	df 93       	push	r29
     986:	cf 93       	push	r28
     988:	cd b7       	in	r28, 0x3d	; 61
     98a:	de b7       	in	r29, 0x3e	; 62
    PORTE &= ~(1<<PE4);
     98c:	ae e2       	ldi	r26, 0x2E	; 46
     98e:	b0 e0       	ldi	r27, 0x00	; 0
     990:	ee e2       	ldi	r30, 0x2E	; 46
     992:	f0 e0       	ldi	r31, 0x00	; 0
     994:	80 81       	ld	r24, Z
     996:	8f 7e       	andi	r24, 0xEF	; 239
     998:	8c 93       	st	X, r24
}
     99a:	cf 91       	pop	r28
     99c:	df 91       	pop	r29
     99e:	ff 91       	pop	r31
     9a0:	ef 91       	pop	r30
     9a2:	bf 91       	pop	r27
     9a4:	af 91       	pop	r26
     9a6:	8f 91       	pop	r24
     9a8:	0f 90       	pop	r0
     9aa:	00 92 5b 00 	sts	0x005B, r0
     9ae:	0f 90       	pop	r0
     9b0:	0f be       	out	0x3f, r0	; 63
     9b2:	0f 90       	pop	r0
     9b4:	1f 90       	pop	r1
     9b6:	18 95       	reti

000009b8 <__vector_22>:

ISR(TIMER0_COMPB_vect)
{
     9b8:	1f 92       	push	r1
     9ba:	0f 92       	push	r0
     9bc:	0f b6       	in	r0, 0x3f	; 63
     9be:	0f 92       	push	r0
     9c0:	00 90 5b 00 	lds	r0, 0x005B
     9c4:	0f 92       	push	r0
     9c6:	11 24       	eor	r1, r1
     9c8:	8f 93       	push	r24
     9ca:	af 93       	push	r26
     9cc:	bf 93       	push	r27
     9ce:	ef 93       	push	r30
     9d0:	ff 93       	push	r31
     9d2:	df 93       	push	r29
     9d4:	cf 93       	push	r28
     9d6:	cd b7       	in	r28, 0x3d	; 61
     9d8:	de b7       	in	r29, 0x3e	; 62
    PORTE &= ~(1<<PE3);
     9da:	ae e2       	ldi	r26, 0x2E	; 46
     9dc:	b0 e0       	ldi	r27, 0x00	; 0
     9de:	ee e2       	ldi	r30, 0x2E	; 46
     9e0:	f0 e0       	ldi	r31, 0x00	; 0
     9e2:	80 81       	ld	r24, Z
     9e4:	87 7f       	andi	r24, 0xF7	; 247
     9e6:	8c 93       	st	X, r24
}
     9e8:	cf 91       	pop	r28
     9ea:	df 91       	pop	r29
     9ec:	ff 91       	pop	r31
     9ee:	ef 91       	pop	r30
     9f0:	bf 91       	pop	r27
     9f2:	af 91       	pop	r26
     9f4:	8f 91       	pop	r24
     9f6:	0f 90       	pop	r0
     9f8:	00 92 5b 00 	sts	0x005B, r0
     9fc:	0f 90       	pop	r0
     9fe:	0f be       	out	0x3f, r0	; 63
     a00:	0f 90       	pop	r0
     a02:	1f 90       	pop	r1
     a04:	18 95       	reti

00000a06 <init_motor>:

void init_motor (void)
{
     a06:	df 93       	push	r29
     a08:	cf 93       	push	r28
     a0a:	cd b7       	in	r28, 0x3d	; 61
     a0c:	de b7       	in	r29, 0x3e	; 62
    // Output low
    PORTE &= ~(1<<PE4);
     a0e:	ae e2       	ldi	r26, 0x2E	; 46
     a10:	b0 e0       	ldi	r27, 0x00	; 0
     a12:	ee e2       	ldi	r30, 0x2E	; 46
     a14:	f0 e0       	ldi	r31, 0x00	; 0
     a16:	80 81       	ld	r24, Z
     a18:	8f 7e       	andi	r24, 0xEF	; 239
     a1a:	8c 93       	st	X, r24
    PORTE &= ~(1<<PE3);
     a1c:	ae e2       	ldi	r26, 0x2E	; 46
     a1e:	b0 e0       	ldi	r27, 0x00	; 0
     a20:	ee e2       	ldi	r30, 0x2E	; 46
     a22:	f0 e0       	ldi	r31, 0x00	; 0
     a24:	80 81       	ld	r24, Z
     a26:	87 7f       	andi	r24, 0xF7	; 247
     a28:	8c 93       	st	X, r24

    // Use mode 0, clkdiv = 64 klok 0 Pwm signalen
    TCCR0A = 0;
     a2a:	e4 e4       	ldi	r30, 0x44	; 68
     a2c:	f0 e0       	ldi	r31, 0x00	; 0
     a2e:	10 82       	st	Z, r1
    TCCR0B = (0<<CS02) | (1<<CS01) | (1<<CS00);
     a30:	e5 e4       	ldi	r30, 0x45	; 69
     a32:	f0 e0       	ldi	r31, 0x00	; 0
     a34:	83 e0       	ldi	r24, 0x03	; 3
     a36:	80 83       	st	Z, r24
    TIMSK0 = (1<<OCIE0B) | (1<<OCIE0A) | (1<<TOIE0);
     a38:	ee e6       	ldi	r30, 0x6E	; 110
     a3a:	f0 e0       	ldi	r31, 0x00	; 0
     a3c:	87 e0       	ldi	r24, 0x07	; 7
     a3e:	80 83       	st	Z, r24
    OCR0A = 0;
     a40:	e7 e4       	ldi	r30, 0x47	; 71
     a42:	f0 e0       	ldi	r31, 0x00	; 0
     a44:	10 82       	st	Z, r1
    OCR0B = 0;
     a46:	e8 e4       	ldi	r30, 0x48	; 72
     a48:	f0 e0       	ldi	r31, 0x00	; 0
     a4a:	10 82       	st	Z, r1

    // Use mode 0, clkdiv = 256 klok 1 globale klok
    TCCR1A = 0;
     a4c:	e0 e8       	ldi	r30, 0x80	; 128
     a4e:	f0 e0       	ldi	r31, 0x00	; 0
     a50:	10 82       	st	Z, r1
    TCCR1B = (1<<CS02) | (0<<CS01) | (0<<CS00);
     a52:	e1 e8       	ldi	r30, 0x81	; 129
     a54:	f0 e0       	ldi	r31, 0x00	; 0
     a56:	84 e0       	ldi	r24, 0x04	; 4
     a58:	80 83       	st	Z, r24
    TIMSK1 = (1<<OCIE0A);
     a5a:	ef e6       	ldi	r30, 0x6F	; 111
     a5c:	f0 e0       	ldi	r31, 0x00	; 0
     a5e:	82 e0       	ldi	r24, 0x02	; 2
     a60:	80 83       	st	Z, r24
    OCR1A = 6250; //0.1 van een seconde dus kan gebruikt worden om een grote klok te maken voor 25.5 seconden
     a62:	e8 e8       	ldi	r30, 0x88	; 136
     a64:	f0 e0       	ldi	r31, 0x00	; 0
     a66:	8a e6       	ldi	r24, 0x6A	; 106
     a68:	98 e1       	ldi	r25, 0x18	; 24
     a6a:	91 83       	std	Z+1, r25	; 0x01
     a6c:	80 83       	st	Z, r24

    // Use mode 0, clkdiv = 1024   klok 2 globale trigger
    TCCR2A = 0;
     a6e:	e0 eb       	ldi	r30, 0xB0	; 176
     a70:	f0 e0       	ldi	r31, 0x00	; 0
     a72:	10 82       	st	Z, r1
    TCCR2B = (1<<CS22) | (0<<CS21) | (1<<CS20);
     a74:	e1 eb       	ldi	r30, 0xB1	; 177
     a76:	f0 e0       	ldi	r31, 0x00	; 0
     a78:	85 e0       	ldi	r24, 0x05	; 5
     a7a:	80 83       	st	Z, r24
    OCR2A = 85;
     a7c:	e3 eb       	ldi	r30, 0xB3	; 179
     a7e:	f0 e0       	ldi	r31, 0x00	; 0
     a80:	85 e5       	ldi	r24, 0x55	; 85
     a82:	80 83       	st	Z, r24
    OCR2B = 170;
     a84:	e4 eb       	ldi	r30, 0xB4	; 180
     a86:	f0 e0       	ldi	r31, 0x00	; 0
     a88:	8a ea       	ldi	r24, 0xAA	; 170
     a8a:	80 83       	st	Z, r24
    TIMSK2 = (1<<OCIE2B) | (1<<OCIE2A) | (1<<TOIE2);
     a8c:	e0 e7       	ldi	r30, 0x70	; 112
     a8e:	f0 e0       	ldi	r31, 0x00	; 0
     a90:	87 e0       	ldi	r24, 0x07	; 7
     a92:	80 83       	st	Z, r24

    // Use mode 0, clkdiv = 8 klok 4 ultrasoon
    TCCR4A = 0;
     a94:	e0 ea       	ldi	r30, 0xA0	; 160
     a96:	f0 e0       	ldi	r31, 0x00	; 0
     a98:	10 82       	st	Z, r1
    TCCR4B = (0<<CS42) | (1<<CS41) | (0<<CS40);
     a9a:	e1 ea       	ldi	r30, 0xA1	; 161
     a9c:	f0 e0       	ldi	r31, 0x00	; 0
     a9e:	82 e0       	ldi	r24, 0x02	; 2
     aa0:	80 83       	st	Z, r24


    // Interupts geactiveerd
    sei();
     aa2:	78 94       	sei
}
     aa4:	cf 91       	pop	r28
     aa6:	df 91       	pop	r29
     aa8:	08 95       	ret

00000aaa <motor>:

void motor (signed int Af, signed int Bf)
{
     aaa:	df 93       	push	r29
     aac:	cf 93       	push	r28
     aae:	00 d0       	rcall	.+0      	; 0xab0 <motor+0x6>
     ab0:	0f 92       	push	r0
     ab2:	cd b7       	in	r28, 0x3d	; 61
     ab4:	de b7       	in	r29, 0x3e	; 62
     ab6:	9a 83       	std	Y+2, r25	; 0x02
     ab8:	89 83       	std	Y+1, r24	; 0x01
     aba:	7c 83       	std	Y+4, r23	; 0x04
     abc:	6b 83       	std	Y+3, r22	; 0x03
    if(Af < 0)
     abe:	89 81       	ldd	r24, Y+1	; 0x01
     ac0:	9a 81       	ldd	r25, Y+2	; 0x02
     ac2:	99 23       	and	r25, r25
     ac4:	5c f4       	brge	.+22     	; 0xadc <motor+0x32>
    {
        PORTJ |= (1<<PJ0);
     ac6:	a5 e0       	ldi	r26, 0x05	; 5
     ac8:	b1 e0       	ldi	r27, 0x01	; 1
     aca:	e5 e0       	ldi	r30, 0x05	; 5
     acc:	f1 e0       	ldi	r31, 0x01	; 1
     ace:	80 81       	ld	r24, Z
     ad0:	81 60       	ori	r24, 0x01	; 1
     ad2:	8c 93       	st	X, r24
        OCR0A = Af;
     ad4:	e7 e4       	ldi	r30, 0x47	; 71
     ad6:	f0 e0       	ldi	r31, 0x00	; 0
     ad8:	89 81       	ldd	r24, Y+1	; 0x01
     ada:	80 83       	st	Z, r24
    }
    if (Bf < 0)
     adc:	8b 81       	ldd	r24, Y+3	; 0x03
     ade:	9c 81       	ldd	r25, Y+4	; 0x04
     ae0:	99 23       	and	r25, r25
     ae2:	5c f4       	brge	.+22     	; 0xafa <motor+0x50>
    {
        PORTJ |= (1<<PJ1);
     ae4:	a5 e0       	ldi	r26, 0x05	; 5
     ae6:	b1 e0       	ldi	r27, 0x01	; 1
     ae8:	e5 e0       	ldi	r30, 0x05	; 5
     aea:	f1 e0       	ldi	r31, 0x01	; 1
     aec:	80 81       	ld	r24, Z
     aee:	82 60       	ori	r24, 0x02	; 2
     af0:	8c 93       	st	X, r24
        OCR0B = Bf;
     af2:	e8 e4       	ldi	r30, 0x48	; 72
     af4:	f0 e0       	ldi	r31, 0x00	; 0
     af6:	8b 81       	ldd	r24, Y+3	; 0x03
     af8:	80 83       	st	Z, r24
    }
    if (Af > 0)
     afa:	89 81       	ldd	r24, Y+1	; 0x01
     afc:	9a 81       	ldd	r25, Y+2	; 0x02
     afe:	18 16       	cp	r1, r24
     b00:	19 06       	cpc	r1, r25
     b02:	5c f4       	brge	.+22     	; 0xb1a <motor+0x70>
    {
        PORTJ &= ~(1<<PJ0);
     b04:	a5 e0       	ldi	r26, 0x05	; 5
     b06:	b1 e0       	ldi	r27, 0x01	; 1
     b08:	e5 e0       	ldi	r30, 0x05	; 5
     b0a:	f1 e0       	ldi	r31, 0x01	; 1
     b0c:	80 81       	ld	r24, Z
     b0e:	8e 7f       	andi	r24, 0xFE	; 254
     b10:	8c 93       	st	X, r24
        OCR0A = Af;
     b12:	e7 e4       	ldi	r30, 0x47	; 71
     b14:	f0 e0       	ldi	r31, 0x00	; 0
     b16:	89 81       	ldd	r24, Y+1	; 0x01
     b18:	80 83       	st	Z, r24
    }
    if (Bf > 0)
     b1a:	8b 81       	ldd	r24, Y+3	; 0x03
     b1c:	9c 81       	ldd	r25, Y+4	; 0x04
     b1e:	18 16       	cp	r1, r24
     b20:	19 06       	cpc	r1, r25
     b22:	5c f4       	brge	.+22     	; 0xb3a <motor+0x90>
    {
        PORTJ &= ~(1<<PJ1);
     b24:	a5 e0       	ldi	r26, 0x05	; 5
     b26:	b1 e0       	ldi	r27, 0x01	; 1
     b28:	e5 e0       	ldi	r30, 0x05	; 5
     b2a:	f1 e0       	ldi	r31, 0x01	; 1
     b2c:	80 81       	ld	r24, Z
     b2e:	8d 7f       	andi	r24, 0xFD	; 253
     b30:	8c 93       	st	X, r24
        OCR0B = Bf;
     b32:	e8 e4       	ldi	r30, 0x48	; 72
     b34:	f0 e0       	ldi	r31, 0x00	; 0
     b36:	8b 81       	ldd	r24, Y+3	; 0x03
     b38:	80 83       	st	Z, r24
    }
}
     b3a:	0f 90       	pop	r0
     b3c:	0f 90       	pop	r0
     b3e:	0f 90       	pop	r0
     b40:	0f 90       	pop	r0
     b42:	cf 91       	pop	r28
     b44:	df 91       	pop	r29
     b46:	08 95       	ret

00000b48 <__mulsf3>:
     b48:	a0 e2       	ldi	r26, 0x20	; 32
     b4a:	b0 e0       	ldi	r27, 0x00	; 0
     b4c:	ea ea       	ldi	r30, 0xAA	; 170
     b4e:	f5 e0       	ldi	r31, 0x05	; 5
     b50:	0c 94 ca 09 	jmp	0x1394	; 0x1394 <__prologue_saves__>
     b54:	69 83       	std	Y+1, r22	; 0x01
     b56:	7a 83       	std	Y+2, r23	; 0x02
     b58:	8b 83       	std	Y+3, r24	; 0x03
     b5a:	9c 83       	std	Y+4, r25	; 0x04
     b5c:	2d 83       	std	Y+5, r18	; 0x05
     b5e:	3e 83       	std	Y+6, r19	; 0x06
     b60:	4f 83       	std	Y+7, r20	; 0x07
     b62:	58 87       	std	Y+8, r21	; 0x08
     b64:	ce 01       	movw	r24, r28
     b66:	01 96       	adiw	r24, 0x01	; 1
     b68:	be 01       	movw	r22, r28
     b6a:	67 5f       	subi	r22, 0xF7	; 247
     b6c:	7f 4f       	sbci	r23, 0xFF	; 255
     b6e:	0e 94 f9 08 	call	0x11f2	; 0x11f2 <__unpack_f>
     b72:	ce 01       	movw	r24, r28
     b74:	05 96       	adiw	r24, 0x05	; 5
     b76:	be 01       	movw	r22, r28
     b78:	6f 5e       	subi	r22, 0xEF	; 239
     b7a:	7f 4f       	sbci	r23, 0xFF	; 255
     b7c:	0e 94 f9 08 	call	0x11f2	; 0x11f2 <__unpack_f>
     b80:	99 85       	ldd	r25, Y+9	; 0x09
     b82:	92 30       	cpi	r25, 0x02	; 2
     b84:	88 f0       	brcs	.+34     	; 0xba8 <__mulsf3+0x60>
     b86:	89 89       	ldd	r24, Y+17	; 0x11
     b88:	82 30       	cpi	r24, 0x02	; 2
     b8a:	c8 f0       	brcs	.+50     	; 0xbbe <__mulsf3+0x76>
     b8c:	94 30       	cpi	r25, 0x04	; 4
     b8e:	19 f4       	brne	.+6      	; 0xb96 <__mulsf3+0x4e>
     b90:	82 30       	cpi	r24, 0x02	; 2
     b92:	51 f4       	brne	.+20     	; 0xba8 <__mulsf3+0x60>
     b94:	04 c0       	rjmp	.+8      	; 0xb9e <__mulsf3+0x56>
     b96:	84 30       	cpi	r24, 0x04	; 4
     b98:	29 f4       	brne	.+10     	; 0xba4 <__mulsf3+0x5c>
     b9a:	92 30       	cpi	r25, 0x02	; 2
     b9c:	81 f4       	brne	.+32     	; 0xbbe <__mulsf3+0x76>
     b9e:	80 e0       	ldi	r24, 0x00	; 0
     ba0:	92 e0       	ldi	r25, 0x02	; 2
     ba2:	c6 c0       	rjmp	.+396    	; 0xd30 <__mulsf3+0x1e8>
     ba4:	92 30       	cpi	r25, 0x02	; 2
     ba6:	49 f4       	brne	.+18     	; 0xbba <__mulsf3+0x72>
     ba8:	20 e0       	ldi	r18, 0x00	; 0
     baa:	9a 85       	ldd	r25, Y+10	; 0x0a
     bac:	8a 89       	ldd	r24, Y+18	; 0x12
     bae:	98 13       	cpse	r25, r24
     bb0:	21 e0       	ldi	r18, 0x01	; 1
     bb2:	2a 87       	std	Y+10, r18	; 0x0a
     bb4:	ce 01       	movw	r24, r28
     bb6:	09 96       	adiw	r24, 0x09	; 9
     bb8:	bb c0       	rjmp	.+374    	; 0xd30 <__mulsf3+0x1e8>
     bba:	82 30       	cpi	r24, 0x02	; 2
     bbc:	49 f4       	brne	.+18     	; 0xbd0 <__mulsf3+0x88>
     bbe:	20 e0       	ldi	r18, 0x00	; 0
     bc0:	9a 85       	ldd	r25, Y+10	; 0x0a
     bc2:	8a 89       	ldd	r24, Y+18	; 0x12
     bc4:	98 13       	cpse	r25, r24
     bc6:	21 e0       	ldi	r18, 0x01	; 1
     bc8:	2a 8b       	std	Y+18, r18	; 0x12
     bca:	ce 01       	movw	r24, r28
     bcc:	41 96       	adiw	r24, 0x11	; 17
     bce:	b0 c0       	rjmp	.+352    	; 0xd30 <__mulsf3+0x1e8>
     bd0:	2d 84       	ldd	r2, Y+13	; 0x0d
     bd2:	3e 84       	ldd	r3, Y+14	; 0x0e
     bd4:	4f 84       	ldd	r4, Y+15	; 0x0f
     bd6:	58 88       	ldd	r5, Y+16	; 0x10
     bd8:	6d 88       	ldd	r6, Y+21	; 0x15
     bda:	7e 88       	ldd	r7, Y+22	; 0x16
     bdc:	8f 88       	ldd	r8, Y+23	; 0x17
     bde:	98 8c       	ldd	r9, Y+24	; 0x18
     be0:	ee 24       	eor	r14, r14
     be2:	ff 24       	eor	r15, r15
     be4:	87 01       	movw	r16, r14
     be6:	aa 24       	eor	r10, r10
     be8:	bb 24       	eor	r11, r11
     bea:	65 01       	movw	r12, r10
     bec:	40 e0       	ldi	r20, 0x00	; 0
     bee:	50 e0       	ldi	r21, 0x00	; 0
     bf0:	60 e0       	ldi	r22, 0x00	; 0
     bf2:	70 e0       	ldi	r23, 0x00	; 0
     bf4:	e0 e0       	ldi	r30, 0x00	; 0
     bf6:	f0 e0       	ldi	r31, 0x00	; 0
     bf8:	c1 01       	movw	r24, r2
     bfa:	81 70       	andi	r24, 0x01	; 1
     bfc:	90 70       	andi	r25, 0x00	; 0
     bfe:	89 2b       	or	r24, r25
     c00:	e9 f0       	breq	.+58     	; 0xc3c <__mulsf3+0xf4>
     c02:	e6 0c       	add	r14, r6
     c04:	f7 1c       	adc	r15, r7
     c06:	08 1d       	adc	r16, r8
     c08:	19 1d       	adc	r17, r9
     c0a:	9a 01       	movw	r18, r20
     c0c:	ab 01       	movw	r20, r22
     c0e:	2a 0d       	add	r18, r10
     c10:	3b 1d       	adc	r19, r11
     c12:	4c 1d       	adc	r20, r12
     c14:	5d 1d       	adc	r21, r13
     c16:	80 e0       	ldi	r24, 0x00	; 0
     c18:	90 e0       	ldi	r25, 0x00	; 0
     c1a:	a0 e0       	ldi	r26, 0x00	; 0
     c1c:	b0 e0       	ldi	r27, 0x00	; 0
     c1e:	e6 14       	cp	r14, r6
     c20:	f7 04       	cpc	r15, r7
     c22:	08 05       	cpc	r16, r8
     c24:	19 05       	cpc	r17, r9
     c26:	20 f4       	brcc	.+8      	; 0xc30 <__mulsf3+0xe8>
     c28:	81 e0       	ldi	r24, 0x01	; 1
     c2a:	90 e0       	ldi	r25, 0x00	; 0
     c2c:	a0 e0       	ldi	r26, 0x00	; 0
     c2e:	b0 e0       	ldi	r27, 0x00	; 0
     c30:	ba 01       	movw	r22, r20
     c32:	a9 01       	movw	r20, r18
     c34:	48 0f       	add	r20, r24
     c36:	59 1f       	adc	r21, r25
     c38:	6a 1f       	adc	r22, r26
     c3a:	7b 1f       	adc	r23, r27
     c3c:	aa 0c       	add	r10, r10
     c3e:	bb 1c       	adc	r11, r11
     c40:	cc 1c       	adc	r12, r12
     c42:	dd 1c       	adc	r13, r13
     c44:	97 fe       	sbrs	r9, 7
     c46:	08 c0       	rjmp	.+16     	; 0xc58 <__mulsf3+0x110>
     c48:	81 e0       	ldi	r24, 0x01	; 1
     c4a:	90 e0       	ldi	r25, 0x00	; 0
     c4c:	a0 e0       	ldi	r26, 0x00	; 0
     c4e:	b0 e0       	ldi	r27, 0x00	; 0
     c50:	a8 2a       	or	r10, r24
     c52:	b9 2a       	or	r11, r25
     c54:	ca 2a       	or	r12, r26
     c56:	db 2a       	or	r13, r27
     c58:	31 96       	adiw	r30, 0x01	; 1
     c5a:	e0 32       	cpi	r30, 0x20	; 32
     c5c:	f1 05       	cpc	r31, r1
     c5e:	49 f0       	breq	.+18     	; 0xc72 <__mulsf3+0x12a>
     c60:	66 0c       	add	r6, r6
     c62:	77 1c       	adc	r7, r7
     c64:	88 1c       	adc	r8, r8
     c66:	99 1c       	adc	r9, r9
     c68:	56 94       	lsr	r5
     c6a:	47 94       	ror	r4
     c6c:	37 94       	ror	r3
     c6e:	27 94       	ror	r2
     c70:	c3 cf       	rjmp	.-122    	; 0xbf8 <__mulsf3+0xb0>
     c72:	fa 85       	ldd	r31, Y+10	; 0x0a
     c74:	ea 89       	ldd	r30, Y+18	; 0x12
     c76:	2b 89       	ldd	r18, Y+19	; 0x13
     c78:	3c 89       	ldd	r19, Y+20	; 0x14
     c7a:	8b 85       	ldd	r24, Y+11	; 0x0b
     c7c:	9c 85       	ldd	r25, Y+12	; 0x0c
     c7e:	28 0f       	add	r18, r24
     c80:	39 1f       	adc	r19, r25
     c82:	2e 5f       	subi	r18, 0xFE	; 254
     c84:	3f 4f       	sbci	r19, 0xFF	; 255
     c86:	17 c0       	rjmp	.+46     	; 0xcb6 <__mulsf3+0x16e>
     c88:	ca 01       	movw	r24, r20
     c8a:	81 70       	andi	r24, 0x01	; 1
     c8c:	90 70       	andi	r25, 0x00	; 0
     c8e:	89 2b       	or	r24, r25
     c90:	61 f0       	breq	.+24     	; 0xcaa <__mulsf3+0x162>
     c92:	16 95       	lsr	r17
     c94:	07 95       	ror	r16
     c96:	f7 94       	ror	r15
     c98:	e7 94       	ror	r14
     c9a:	80 e0       	ldi	r24, 0x00	; 0
     c9c:	90 e0       	ldi	r25, 0x00	; 0
     c9e:	a0 e0       	ldi	r26, 0x00	; 0
     ca0:	b0 e8       	ldi	r27, 0x80	; 128
     ca2:	e8 2a       	or	r14, r24
     ca4:	f9 2a       	or	r15, r25
     ca6:	0a 2b       	or	r16, r26
     ca8:	1b 2b       	or	r17, r27
     caa:	76 95       	lsr	r23
     cac:	67 95       	ror	r22
     cae:	57 95       	ror	r21
     cb0:	47 95       	ror	r20
     cb2:	2f 5f       	subi	r18, 0xFF	; 255
     cb4:	3f 4f       	sbci	r19, 0xFF	; 255
     cb6:	77 fd       	sbrc	r23, 7
     cb8:	e7 cf       	rjmp	.-50     	; 0xc88 <__mulsf3+0x140>
     cba:	0c c0       	rjmp	.+24     	; 0xcd4 <__mulsf3+0x18c>
     cbc:	44 0f       	add	r20, r20
     cbe:	55 1f       	adc	r21, r21
     cc0:	66 1f       	adc	r22, r22
     cc2:	77 1f       	adc	r23, r23
     cc4:	17 fd       	sbrc	r17, 7
     cc6:	41 60       	ori	r20, 0x01	; 1
     cc8:	ee 0c       	add	r14, r14
     cca:	ff 1c       	adc	r15, r15
     ccc:	00 1f       	adc	r16, r16
     cce:	11 1f       	adc	r17, r17
     cd0:	21 50       	subi	r18, 0x01	; 1
     cd2:	30 40       	sbci	r19, 0x00	; 0
     cd4:	40 30       	cpi	r20, 0x00	; 0
     cd6:	90 e0       	ldi	r25, 0x00	; 0
     cd8:	59 07       	cpc	r21, r25
     cda:	90 e0       	ldi	r25, 0x00	; 0
     cdc:	69 07       	cpc	r22, r25
     cde:	90 e4       	ldi	r25, 0x40	; 64
     ce0:	79 07       	cpc	r23, r25
     ce2:	60 f3       	brcs	.-40     	; 0xcbc <__mulsf3+0x174>
     ce4:	2b 8f       	std	Y+27, r18	; 0x1b
     ce6:	3c 8f       	std	Y+28, r19	; 0x1c
     ce8:	db 01       	movw	r26, r22
     cea:	ca 01       	movw	r24, r20
     cec:	8f 77       	andi	r24, 0x7F	; 127
     cee:	90 70       	andi	r25, 0x00	; 0
     cf0:	a0 70       	andi	r26, 0x00	; 0
     cf2:	b0 70       	andi	r27, 0x00	; 0
     cf4:	80 34       	cpi	r24, 0x40	; 64
     cf6:	91 05       	cpc	r25, r1
     cf8:	a1 05       	cpc	r26, r1
     cfa:	b1 05       	cpc	r27, r1
     cfc:	61 f4       	brne	.+24     	; 0xd16 <__mulsf3+0x1ce>
     cfe:	47 fd       	sbrc	r20, 7
     d00:	0a c0       	rjmp	.+20     	; 0xd16 <__mulsf3+0x1ce>
     d02:	e1 14       	cp	r14, r1
     d04:	f1 04       	cpc	r15, r1
     d06:	01 05       	cpc	r16, r1
     d08:	11 05       	cpc	r17, r1
     d0a:	29 f0       	breq	.+10     	; 0xd16 <__mulsf3+0x1ce>
     d0c:	40 5c       	subi	r20, 0xC0	; 192
     d0e:	5f 4f       	sbci	r21, 0xFF	; 255
     d10:	6f 4f       	sbci	r22, 0xFF	; 255
     d12:	7f 4f       	sbci	r23, 0xFF	; 255
     d14:	40 78       	andi	r20, 0x80	; 128
     d16:	1a 8e       	std	Y+26, r1	; 0x1a
     d18:	fe 17       	cp	r31, r30
     d1a:	11 f0       	breq	.+4      	; 0xd20 <__mulsf3+0x1d8>
     d1c:	81 e0       	ldi	r24, 0x01	; 1
     d1e:	8a 8f       	std	Y+26, r24	; 0x1a
     d20:	4d 8f       	std	Y+29, r20	; 0x1d
     d22:	5e 8f       	std	Y+30, r21	; 0x1e
     d24:	6f 8f       	std	Y+31, r22	; 0x1f
     d26:	78 a3       	std	Y+32, r23	; 0x20
     d28:	83 e0       	ldi	r24, 0x03	; 3
     d2a:	89 8f       	std	Y+25, r24	; 0x19
     d2c:	ce 01       	movw	r24, r28
     d2e:	49 96       	adiw	r24, 0x19	; 25
     d30:	0e 94 24 08 	call	0x1048	; 0x1048 <__pack_f>
     d34:	a0 96       	adiw	r28, 0x20	; 32
     d36:	e2 e1       	ldi	r30, 0x12	; 18
     d38:	0c 94 e6 09 	jmp	0x13cc	; 0x13cc <__epilogue_restores__>

00000d3c <__gesf2>:
     d3c:	a8 e1       	ldi	r26, 0x18	; 24
     d3e:	b0 e0       	ldi	r27, 0x00	; 0
     d40:	e4 ea       	ldi	r30, 0xA4	; 164
     d42:	f6 e0       	ldi	r31, 0x06	; 6
     d44:	0c 94 d6 09 	jmp	0x13ac	; 0x13ac <__prologue_saves__+0x18>
     d48:	69 83       	std	Y+1, r22	; 0x01
     d4a:	7a 83       	std	Y+2, r23	; 0x02
     d4c:	8b 83       	std	Y+3, r24	; 0x03
     d4e:	9c 83       	std	Y+4, r25	; 0x04
     d50:	2d 83       	std	Y+5, r18	; 0x05
     d52:	3e 83       	std	Y+6, r19	; 0x06
     d54:	4f 83       	std	Y+7, r20	; 0x07
     d56:	58 87       	std	Y+8, r21	; 0x08
     d58:	89 e0       	ldi	r24, 0x09	; 9
     d5a:	e8 2e       	mov	r14, r24
     d5c:	f1 2c       	mov	r15, r1
     d5e:	ec 0e       	add	r14, r28
     d60:	fd 1e       	adc	r15, r29
     d62:	ce 01       	movw	r24, r28
     d64:	01 96       	adiw	r24, 0x01	; 1
     d66:	b7 01       	movw	r22, r14
     d68:	0e 94 f9 08 	call	0x11f2	; 0x11f2 <__unpack_f>
     d6c:	8e 01       	movw	r16, r28
     d6e:	0f 5e       	subi	r16, 0xEF	; 239
     d70:	1f 4f       	sbci	r17, 0xFF	; 255
     d72:	ce 01       	movw	r24, r28
     d74:	05 96       	adiw	r24, 0x05	; 5
     d76:	b8 01       	movw	r22, r16
     d78:	0e 94 f9 08 	call	0x11f2	; 0x11f2 <__unpack_f>
     d7c:	89 85       	ldd	r24, Y+9	; 0x09
     d7e:	82 30       	cpi	r24, 0x02	; 2
     d80:	40 f0       	brcs	.+16     	; 0xd92 <__gesf2+0x56>
     d82:	89 89       	ldd	r24, Y+17	; 0x11
     d84:	82 30       	cpi	r24, 0x02	; 2
     d86:	28 f0       	brcs	.+10     	; 0xd92 <__gesf2+0x56>
     d88:	c7 01       	movw	r24, r14
     d8a:	b8 01       	movw	r22, r16
     d8c:	0e 94 71 09 	call	0x12e2	; 0x12e2 <__fpcmp_parts_f>
     d90:	01 c0       	rjmp	.+2      	; 0xd94 <__gesf2+0x58>
     d92:	8f ef       	ldi	r24, 0xFF	; 255
     d94:	68 96       	adiw	r28, 0x18	; 24
     d96:	e6 e0       	ldi	r30, 0x06	; 6
     d98:	0c 94 f2 09 	jmp	0x13e4	; 0x13e4 <__epilogue_restores__+0x18>

00000d9c <__lesf2>:
     d9c:	a8 e1       	ldi	r26, 0x18	; 24
     d9e:	b0 e0       	ldi	r27, 0x00	; 0
     da0:	e4 ed       	ldi	r30, 0xD4	; 212
     da2:	f6 e0       	ldi	r31, 0x06	; 6
     da4:	0c 94 d6 09 	jmp	0x13ac	; 0x13ac <__prologue_saves__+0x18>
     da8:	69 83       	std	Y+1, r22	; 0x01
     daa:	7a 83       	std	Y+2, r23	; 0x02
     dac:	8b 83       	std	Y+3, r24	; 0x03
     dae:	9c 83       	std	Y+4, r25	; 0x04
     db0:	2d 83       	std	Y+5, r18	; 0x05
     db2:	3e 83       	std	Y+6, r19	; 0x06
     db4:	4f 83       	std	Y+7, r20	; 0x07
     db6:	58 87       	std	Y+8, r21	; 0x08
     db8:	89 e0       	ldi	r24, 0x09	; 9
     dba:	e8 2e       	mov	r14, r24
     dbc:	f1 2c       	mov	r15, r1
     dbe:	ec 0e       	add	r14, r28
     dc0:	fd 1e       	adc	r15, r29
     dc2:	ce 01       	movw	r24, r28
     dc4:	01 96       	adiw	r24, 0x01	; 1
     dc6:	b7 01       	movw	r22, r14
     dc8:	0e 94 f9 08 	call	0x11f2	; 0x11f2 <__unpack_f>
     dcc:	8e 01       	movw	r16, r28
     dce:	0f 5e       	subi	r16, 0xEF	; 239
     dd0:	1f 4f       	sbci	r17, 0xFF	; 255
     dd2:	ce 01       	movw	r24, r28
     dd4:	05 96       	adiw	r24, 0x05	; 5
     dd6:	b8 01       	movw	r22, r16
     dd8:	0e 94 f9 08 	call	0x11f2	; 0x11f2 <__unpack_f>
     ddc:	89 85       	ldd	r24, Y+9	; 0x09
     dde:	82 30       	cpi	r24, 0x02	; 2
     de0:	40 f0       	brcs	.+16     	; 0xdf2 <__lesf2+0x56>
     de2:	89 89       	ldd	r24, Y+17	; 0x11
     de4:	82 30       	cpi	r24, 0x02	; 2
     de6:	28 f0       	brcs	.+10     	; 0xdf2 <__lesf2+0x56>
     de8:	c7 01       	movw	r24, r14
     dea:	b8 01       	movw	r22, r16
     dec:	0e 94 71 09 	call	0x12e2	; 0x12e2 <__fpcmp_parts_f>
     df0:	01 c0       	rjmp	.+2      	; 0xdf4 <__lesf2+0x58>
     df2:	81 e0       	ldi	r24, 0x01	; 1
     df4:	68 96       	adiw	r28, 0x18	; 24
     df6:	e6 e0       	ldi	r30, 0x06	; 6
     df8:	0c 94 f2 09 	jmp	0x13e4	; 0x13e4 <__epilogue_restores__+0x18>

00000dfc <__floatsisf>:
     dfc:	a8 e0       	ldi	r26, 0x08	; 8
     dfe:	b0 e0       	ldi	r27, 0x00	; 0
     e00:	e4 e0       	ldi	r30, 0x04	; 4
     e02:	f7 e0       	ldi	r31, 0x07	; 7
     e04:	0c 94 d3 09 	jmp	0x13a6	; 0x13a6 <__prologue_saves__+0x12>
     e08:	9b 01       	movw	r18, r22
     e0a:	ac 01       	movw	r20, r24
     e0c:	83 e0       	ldi	r24, 0x03	; 3
     e0e:	89 83       	std	Y+1, r24	; 0x01
     e10:	da 01       	movw	r26, r20
     e12:	c9 01       	movw	r24, r18
     e14:	88 27       	eor	r24, r24
     e16:	b7 fd       	sbrc	r27, 7
     e18:	83 95       	inc	r24
     e1a:	99 27       	eor	r25, r25
     e1c:	aa 27       	eor	r26, r26
     e1e:	bb 27       	eor	r27, r27
     e20:	b8 2e       	mov	r11, r24
     e22:	21 15       	cp	r18, r1
     e24:	31 05       	cpc	r19, r1
     e26:	41 05       	cpc	r20, r1
     e28:	51 05       	cpc	r21, r1
     e2a:	19 f4       	brne	.+6      	; 0xe32 <__floatsisf+0x36>
     e2c:	82 e0       	ldi	r24, 0x02	; 2
     e2e:	89 83       	std	Y+1, r24	; 0x01
     e30:	3a c0       	rjmp	.+116    	; 0xea6 <__floatsisf+0xaa>
     e32:	88 23       	and	r24, r24
     e34:	a9 f0       	breq	.+42     	; 0xe60 <__floatsisf+0x64>
     e36:	20 30       	cpi	r18, 0x00	; 0
     e38:	80 e0       	ldi	r24, 0x00	; 0
     e3a:	38 07       	cpc	r19, r24
     e3c:	80 e0       	ldi	r24, 0x00	; 0
     e3e:	48 07       	cpc	r20, r24
     e40:	80 e8       	ldi	r24, 0x80	; 128
     e42:	58 07       	cpc	r21, r24
     e44:	29 f4       	brne	.+10     	; 0xe50 <__floatsisf+0x54>
     e46:	60 e0       	ldi	r22, 0x00	; 0
     e48:	70 e0       	ldi	r23, 0x00	; 0
     e4a:	80 e0       	ldi	r24, 0x00	; 0
     e4c:	9f ec       	ldi	r25, 0xCF	; 207
     e4e:	30 c0       	rjmp	.+96     	; 0xeb0 <__floatsisf+0xb4>
     e50:	ee 24       	eor	r14, r14
     e52:	ff 24       	eor	r15, r15
     e54:	87 01       	movw	r16, r14
     e56:	e2 1a       	sub	r14, r18
     e58:	f3 0a       	sbc	r15, r19
     e5a:	04 0b       	sbc	r16, r20
     e5c:	15 0b       	sbc	r17, r21
     e5e:	02 c0       	rjmp	.+4      	; 0xe64 <__floatsisf+0x68>
     e60:	79 01       	movw	r14, r18
     e62:	8a 01       	movw	r16, r20
     e64:	8e e1       	ldi	r24, 0x1E	; 30
     e66:	c8 2e       	mov	r12, r24
     e68:	d1 2c       	mov	r13, r1
     e6a:	dc 82       	std	Y+4, r13	; 0x04
     e6c:	cb 82       	std	Y+3, r12	; 0x03
     e6e:	ed 82       	std	Y+5, r14	; 0x05
     e70:	fe 82       	std	Y+6, r15	; 0x06
     e72:	0f 83       	std	Y+7, r16	; 0x07
     e74:	18 87       	std	Y+8, r17	; 0x08
     e76:	c8 01       	movw	r24, r16
     e78:	b7 01       	movw	r22, r14
     e7a:	0e 94 d5 07 	call	0xfaa	; 0xfaa <__clzsi2>
     e7e:	01 97       	sbiw	r24, 0x01	; 1
     e80:	18 16       	cp	r1, r24
     e82:	19 06       	cpc	r1, r25
     e84:	84 f4       	brge	.+32     	; 0xea6 <__floatsisf+0xaa>
     e86:	08 2e       	mov	r0, r24
     e88:	04 c0       	rjmp	.+8      	; 0xe92 <__floatsisf+0x96>
     e8a:	ee 0c       	add	r14, r14
     e8c:	ff 1c       	adc	r15, r15
     e8e:	00 1f       	adc	r16, r16
     e90:	11 1f       	adc	r17, r17
     e92:	0a 94       	dec	r0
     e94:	d2 f7       	brpl	.-12     	; 0xe8a <__floatsisf+0x8e>
     e96:	ed 82       	std	Y+5, r14	; 0x05
     e98:	fe 82       	std	Y+6, r15	; 0x06
     e9a:	0f 83       	std	Y+7, r16	; 0x07
     e9c:	18 87       	std	Y+8, r17	; 0x08
     e9e:	c8 1a       	sub	r12, r24
     ea0:	d9 0a       	sbc	r13, r25
     ea2:	dc 82       	std	Y+4, r13	; 0x04
     ea4:	cb 82       	std	Y+3, r12	; 0x03
     ea6:	ba 82       	std	Y+2, r11	; 0x02
     ea8:	ce 01       	movw	r24, r28
     eaa:	01 96       	adiw	r24, 0x01	; 1
     eac:	0e 94 24 08 	call	0x1048	; 0x1048 <__pack_f>
     eb0:	28 96       	adiw	r28, 0x08	; 8
     eb2:	e9 e0       	ldi	r30, 0x09	; 9
     eb4:	0c 94 ef 09 	jmp	0x13de	; 0x13de <__epilogue_restores__+0x12>

00000eb8 <__floatunsisf>:
     eb8:	a8 e0       	ldi	r26, 0x08	; 8
     eba:	b0 e0       	ldi	r27, 0x00	; 0
     ebc:	e2 e6       	ldi	r30, 0x62	; 98
     ebe:	f7 e0       	ldi	r31, 0x07	; 7
     ec0:	0c 94 d2 09 	jmp	0x13a4	; 0x13a4 <__prologue_saves__+0x10>
     ec4:	7b 01       	movw	r14, r22
     ec6:	8c 01       	movw	r16, r24
     ec8:	61 15       	cp	r22, r1
     eca:	71 05       	cpc	r23, r1
     ecc:	81 05       	cpc	r24, r1
     ece:	91 05       	cpc	r25, r1
     ed0:	19 f4       	brne	.+6      	; 0xed8 <__floatunsisf+0x20>
     ed2:	82 e0       	ldi	r24, 0x02	; 2
     ed4:	89 83       	std	Y+1, r24	; 0x01
     ed6:	60 c0       	rjmp	.+192    	; 0xf98 <__floatunsisf+0xe0>
     ed8:	83 e0       	ldi	r24, 0x03	; 3
     eda:	89 83       	std	Y+1, r24	; 0x01
     edc:	8e e1       	ldi	r24, 0x1E	; 30
     ede:	c8 2e       	mov	r12, r24
     ee0:	d1 2c       	mov	r13, r1
     ee2:	dc 82       	std	Y+4, r13	; 0x04
     ee4:	cb 82       	std	Y+3, r12	; 0x03
     ee6:	ed 82       	std	Y+5, r14	; 0x05
     ee8:	fe 82       	std	Y+6, r15	; 0x06
     eea:	0f 83       	std	Y+7, r16	; 0x07
     eec:	18 87       	std	Y+8, r17	; 0x08
     eee:	c8 01       	movw	r24, r16
     ef0:	b7 01       	movw	r22, r14
     ef2:	0e 94 d5 07 	call	0xfaa	; 0xfaa <__clzsi2>
     ef6:	fc 01       	movw	r30, r24
     ef8:	31 97       	sbiw	r30, 0x01	; 1
     efa:	f7 ff       	sbrs	r31, 7
     efc:	3b c0       	rjmp	.+118    	; 0xf74 <__floatunsisf+0xbc>
     efe:	22 27       	eor	r18, r18
     f00:	33 27       	eor	r19, r19
     f02:	2e 1b       	sub	r18, r30
     f04:	3f 0b       	sbc	r19, r31
     f06:	57 01       	movw	r10, r14
     f08:	68 01       	movw	r12, r16
     f0a:	02 2e       	mov	r0, r18
     f0c:	04 c0       	rjmp	.+8      	; 0xf16 <__floatunsisf+0x5e>
     f0e:	d6 94       	lsr	r13
     f10:	c7 94       	ror	r12
     f12:	b7 94       	ror	r11
     f14:	a7 94       	ror	r10
     f16:	0a 94       	dec	r0
     f18:	d2 f7       	brpl	.-12     	; 0xf0e <__floatunsisf+0x56>
     f1a:	40 e0       	ldi	r20, 0x00	; 0
     f1c:	50 e0       	ldi	r21, 0x00	; 0
     f1e:	60 e0       	ldi	r22, 0x00	; 0
     f20:	70 e0       	ldi	r23, 0x00	; 0
     f22:	81 e0       	ldi	r24, 0x01	; 1
     f24:	90 e0       	ldi	r25, 0x00	; 0
     f26:	a0 e0       	ldi	r26, 0x00	; 0
     f28:	b0 e0       	ldi	r27, 0x00	; 0
     f2a:	04 c0       	rjmp	.+8      	; 0xf34 <__floatunsisf+0x7c>
     f2c:	88 0f       	add	r24, r24
     f2e:	99 1f       	adc	r25, r25
     f30:	aa 1f       	adc	r26, r26
     f32:	bb 1f       	adc	r27, r27
     f34:	2a 95       	dec	r18
     f36:	d2 f7       	brpl	.-12     	; 0xf2c <__floatunsisf+0x74>
     f38:	01 97       	sbiw	r24, 0x01	; 1
     f3a:	a1 09       	sbc	r26, r1
     f3c:	b1 09       	sbc	r27, r1
     f3e:	8e 21       	and	r24, r14
     f40:	9f 21       	and	r25, r15
     f42:	a0 23       	and	r26, r16
     f44:	b1 23       	and	r27, r17
     f46:	00 97       	sbiw	r24, 0x00	; 0
     f48:	a1 05       	cpc	r26, r1
     f4a:	b1 05       	cpc	r27, r1
     f4c:	21 f0       	breq	.+8      	; 0xf56 <__floatunsisf+0x9e>
     f4e:	41 e0       	ldi	r20, 0x01	; 1
     f50:	50 e0       	ldi	r21, 0x00	; 0
     f52:	60 e0       	ldi	r22, 0x00	; 0
     f54:	70 e0       	ldi	r23, 0x00	; 0
     f56:	4a 29       	or	r20, r10
     f58:	5b 29       	or	r21, r11
     f5a:	6c 29       	or	r22, r12
     f5c:	7d 29       	or	r23, r13
     f5e:	4d 83       	std	Y+5, r20	; 0x05
     f60:	5e 83       	std	Y+6, r21	; 0x06
     f62:	6f 83       	std	Y+7, r22	; 0x07
     f64:	78 87       	std	Y+8, r23	; 0x08
     f66:	8e e1       	ldi	r24, 0x1E	; 30
     f68:	90 e0       	ldi	r25, 0x00	; 0
     f6a:	8e 1b       	sub	r24, r30
     f6c:	9f 0b       	sbc	r25, r31
     f6e:	9c 83       	std	Y+4, r25	; 0x04
     f70:	8b 83       	std	Y+3, r24	; 0x03
     f72:	12 c0       	rjmp	.+36     	; 0xf98 <__floatunsisf+0xe0>
     f74:	30 97       	sbiw	r30, 0x00	; 0
     f76:	81 f0       	breq	.+32     	; 0xf98 <__floatunsisf+0xe0>
     f78:	0e 2e       	mov	r0, r30
     f7a:	04 c0       	rjmp	.+8      	; 0xf84 <__floatunsisf+0xcc>
     f7c:	ee 0c       	add	r14, r14
     f7e:	ff 1c       	adc	r15, r15
     f80:	00 1f       	adc	r16, r16
     f82:	11 1f       	adc	r17, r17
     f84:	0a 94       	dec	r0
     f86:	d2 f7       	brpl	.-12     	; 0xf7c <__floatunsisf+0xc4>
     f88:	ed 82       	std	Y+5, r14	; 0x05
     f8a:	fe 82       	std	Y+6, r15	; 0x06
     f8c:	0f 83       	std	Y+7, r16	; 0x07
     f8e:	18 87       	std	Y+8, r17	; 0x08
     f90:	ce 1a       	sub	r12, r30
     f92:	df 0a       	sbc	r13, r31
     f94:	dc 82       	std	Y+4, r13	; 0x04
     f96:	cb 82       	std	Y+3, r12	; 0x03
     f98:	1a 82       	std	Y+2, r1	; 0x02
     f9a:	ce 01       	movw	r24, r28
     f9c:	01 96       	adiw	r24, 0x01	; 1
     f9e:	0e 94 24 08 	call	0x1048	; 0x1048 <__pack_f>
     fa2:	28 96       	adiw	r28, 0x08	; 8
     fa4:	ea e0       	ldi	r30, 0x0A	; 10
     fa6:	0c 94 ee 09 	jmp	0x13dc	; 0x13dc <__epilogue_restores__+0x10>

00000faa <__clzsi2>:
     faa:	ef 92       	push	r14
     fac:	ff 92       	push	r15
     fae:	0f 93       	push	r16
     fb0:	1f 93       	push	r17
     fb2:	7b 01       	movw	r14, r22
     fb4:	8c 01       	movw	r16, r24
     fb6:	80 e0       	ldi	r24, 0x00	; 0
     fb8:	e8 16       	cp	r14, r24
     fba:	80 e0       	ldi	r24, 0x00	; 0
     fbc:	f8 06       	cpc	r15, r24
     fbe:	81 e0       	ldi	r24, 0x01	; 1
     fc0:	08 07       	cpc	r16, r24
     fc2:	80 e0       	ldi	r24, 0x00	; 0
     fc4:	18 07       	cpc	r17, r24
     fc6:	88 f4       	brcc	.+34     	; 0xfea <__clzsi2+0x40>
     fc8:	8f ef       	ldi	r24, 0xFF	; 255
     fca:	e8 16       	cp	r14, r24
     fcc:	f1 04       	cpc	r15, r1
     fce:	01 05       	cpc	r16, r1
     fd0:	11 05       	cpc	r17, r1
     fd2:	31 f0       	breq	.+12     	; 0xfe0 <__clzsi2+0x36>
     fd4:	28 f0       	brcs	.+10     	; 0xfe0 <__clzsi2+0x36>
     fd6:	88 e0       	ldi	r24, 0x08	; 8
     fd8:	90 e0       	ldi	r25, 0x00	; 0
     fda:	a0 e0       	ldi	r26, 0x00	; 0
     fdc:	b0 e0       	ldi	r27, 0x00	; 0
     fde:	17 c0       	rjmp	.+46     	; 0x100e <__clzsi2+0x64>
     fe0:	80 e0       	ldi	r24, 0x00	; 0
     fe2:	90 e0       	ldi	r25, 0x00	; 0
     fe4:	a0 e0       	ldi	r26, 0x00	; 0
     fe6:	b0 e0       	ldi	r27, 0x00	; 0
     fe8:	12 c0       	rjmp	.+36     	; 0x100e <__clzsi2+0x64>
     fea:	80 e0       	ldi	r24, 0x00	; 0
     fec:	e8 16       	cp	r14, r24
     fee:	80 e0       	ldi	r24, 0x00	; 0
     ff0:	f8 06       	cpc	r15, r24
     ff2:	80 e0       	ldi	r24, 0x00	; 0
     ff4:	08 07       	cpc	r16, r24
     ff6:	81 e0       	ldi	r24, 0x01	; 1
     ff8:	18 07       	cpc	r17, r24
     ffa:	28 f0       	brcs	.+10     	; 0x1006 <__clzsi2+0x5c>
     ffc:	88 e1       	ldi	r24, 0x18	; 24
     ffe:	90 e0       	ldi	r25, 0x00	; 0
    1000:	a0 e0       	ldi	r26, 0x00	; 0
    1002:	b0 e0       	ldi	r27, 0x00	; 0
    1004:	04 c0       	rjmp	.+8      	; 0x100e <__clzsi2+0x64>
    1006:	80 e1       	ldi	r24, 0x10	; 16
    1008:	90 e0       	ldi	r25, 0x00	; 0
    100a:	a0 e0       	ldi	r26, 0x00	; 0
    100c:	b0 e0       	ldi	r27, 0x00	; 0
    100e:	20 e2       	ldi	r18, 0x20	; 32
    1010:	30 e0       	ldi	r19, 0x00	; 0
    1012:	40 e0       	ldi	r20, 0x00	; 0
    1014:	50 e0       	ldi	r21, 0x00	; 0
    1016:	28 1b       	sub	r18, r24
    1018:	39 0b       	sbc	r19, r25
    101a:	4a 0b       	sbc	r20, r26
    101c:	5b 0b       	sbc	r21, r27
    101e:	04 c0       	rjmp	.+8      	; 0x1028 <__clzsi2+0x7e>
    1020:	16 95       	lsr	r17
    1022:	07 95       	ror	r16
    1024:	f7 94       	ror	r15
    1026:	e7 94       	ror	r14
    1028:	8a 95       	dec	r24
    102a:	d2 f7       	brpl	.-12     	; 0x1020 <__clzsi2+0x76>
    102c:	f7 01       	movw	r30, r14
    102e:	e8 5f       	subi	r30, 0xF8	; 248
    1030:	fd 4f       	sbci	r31, 0xFD	; 253
    1032:	80 81       	ld	r24, Z
    1034:	28 1b       	sub	r18, r24
    1036:	31 09       	sbc	r19, r1
    1038:	41 09       	sbc	r20, r1
    103a:	51 09       	sbc	r21, r1
    103c:	c9 01       	movw	r24, r18
    103e:	1f 91       	pop	r17
    1040:	0f 91       	pop	r16
    1042:	ff 90       	pop	r15
    1044:	ef 90       	pop	r14
    1046:	08 95       	ret

00001048 <__pack_f>:
    1048:	df 92       	push	r13
    104a:	ef 92       	push	r14
    104c:	ff 92       	push	r15
    104e:	0f 93       	push	r16
    1050:	1f 93       	push	r17
    1052:	fc 01       	movw	r30, r24
    1054:	e4 80       	ldd	r14, Z+4	; 0x04
    1056:	f5 80       	ldd	r15, Z+5	; 0x05
    1058:	06 81       	ldd	r16, Z+6	; 0x06
    105a:	17 81       	ldd	r17, Z+7	; 0x07
    105c:	d1 80       	ldd	r13, Z+1	; 0x01
    105e:	80 81       	ld	r24, Z
    1060:	82 30       	cpi	r24, 0x02	; 2
    1062:	48 f4       	brcc	.+18     	; 0x1076 <__pack_f+0x2e>
    1064:	80 e0       	ldi	r24, 0x00	; 0
    1066:	90 e0       	ldi	r25, 0x00	; 0
    1068:	a0 e1       	ldi	r26, 0x10	; 16
    106a:	b0 e0       	ldi	r27, 0x00	; 0
    106c:	e8 2a       	or	r14, r24
    106e:	f9 2a       	or	r15, r25
    1070:	0a 2b       	or	r16, r26
    1072:	1b 2b       	or	r17, r27
    1074:	a5 c0       	rjmp	.+330    	; 0x11c0 <__pack_f+0x178>
    1076:	84 30       	cpi	r24, 0x04	; 4
    1078:	09 f4       	brne	.+2      	; 0x107c <__pack_f+0x34>
    107a:	9f c0       	rjmp	.+318    	; 0x11ba <__pack_f+0x172>
    107c:	82 30       	cpi	r24, 0x02	; 2
    107e:	21 f4       	brne	.+8      	; 0x1088 <__pack_f+0x40>
    1080:	ee 24       	eor	r14, r14
    1082:	ff 24       	eor	r15, r15
    1084:	87 01       	movw	r16, r14
    1086:	05 c0       	rjmp	.+10     	; 0x1092 <__pack_f+0x4a>
    1088:	e1 14       	cp	r14, r1
    108a:	f1 04       	cpc	r15, r1
    108c:	01 05       	cpc	r16, r1
    108e:	11 05       	cpc	r17, r1
    1090:	19 f4       	brne	.+6      	; 0x1098 <__pack_f+0x50>
    1092:	e0 e0       	ldi	r30, 0x00	; 0
    1094:	f0 e0       	ldi	r31, 0x00	; 0
    1096:	96 c0       	rjmp	.+300    	; 0x11c4 <__pack_f+0x17c>
    1098:	62 81       	ldd	r22, Z+2	; 0x02
    109a:	73 81       	ldd	r23, Z+3	; 0x03
    109c:	9f ef       	ldi	r25, 0xFF	; 255
    109e:	62 38       	cpi	r22, 0x82	; 130
    10a0:	79 07       	cpc	r23, r25
    10a2:	0c f0       	brlt	.+2      	; 0x10a6 <__pack_f+0x5e>
    10a4:	5b c0       	rjmp	.+182    	; 0x115c <__pack_f+0x114>
    10a6:	22 e8       	ldi	r18, 0x82	; 130
    10a8:	3f ef       	ldi	r19, 0xFF	; 255
    10aa:	26 1b       	sub	r18, r22
    10ac:	37 0b       	sbc	r19, r23
    10ae:	2a 31       	cpi	r18, 0x1A	; 26
    10b0:	31 05       	cpc	r19, r1
    10b2:	2c f0       	brlt	.+10     	; 0x10be <__pack_f+0x76>
    10b4:	20 e0       	ldi	r18, 0x00	; 0
    10b6:	30 e0       	ldi	r19, 0x00	; 0
    10b8:	40 e0       	ldi	r20, 0x00	; 0
    10ba:	50 e0       	ldi	r21, 0x00	; 0
    10bc:	2a c0       	rjmp	.+84     	; 0x1112 <__pack_f+0xca>
    10be:	b8 01       	movw	r22, r16
    10c0:	a7 01       	movw	r20, r14
    10c2:	02 2e       	mov	r0, r18
    10c4:	04 c0       	rjmp	.+8      	; 0x10ce <__pack_f+0x86>
    10c6:	76 95       	lsr	r23
    10c8:	67 95       	ror	r22
    10ca:	57 95       	ror	r21
    10cc:	47 95       	ror	r20
    10ce:	0a 94       	dec	r0
    10d0:	d2 f7       	brpl	.-12     	; 0x10c6 <__pack_f+0x7e>
    10d2:	81 e0       	ldi	r24, 0x01	; 1
    10d4:	90 e0       	ldi	r25, 0x00	; 0
    10d6:	a0 e0       	ldi	r26, 0x00	; 0
    10d8:	b0 e0       	ldi	r27, 0x00	; 0
    10da:	04 c0       	rjmp	.+8      	; 0x10e4 <__pack_f+0x9c>
    10dc:	88 0f       	add	r24, r24
    10de:	99 1f       	adc	r25, r25
    10e0:	aa 1f       	adc	r26, r26
    10e2:	bb 1f       	adc	r27, r27
    10e4:	2a 95       	dec	r18
    10e6:	d2 f7       	brpl	.-12     	; 0x10dc <__pack_f+0x94>
    10e8:	01 97       	sbiw	r24, 0x01	; 1
    10ea:	a1 09       	sbc	r26, r1
    10ec:	b1 09       	sbc	r27, r1
    10ee:	8e 21       	and	r24, r14
    10f0:	9f 21       	and	r25, r15
    10f2:	a0 23       	and	r26, r16
    10f4:	b1 23       	and	r27, r17
    10f6:	00 97       	sbiw	r24, 0x00	; 0
    10f8:	a1 05       	cpc	r26, r1
    10fa:	b1 05       	cpc	r27, r1
    10fc:	21 f0       	breq	.+8      	; 0x1106 <__pack_f+0xbe>
    10fe:	81 e0       	ldi	r24, 0x01	; 1
    1100:	90 e0       	ldi	r25, 0x00	; 0
    1102:	a0 e0       	ldi	r26, 0x00	; 0
    1104:	b0 e0       	ldi	r27, 0x00	; 0
    1106:	9a 01       	movw	r18, r20
    1108:	ab 01       	movw	r20, r22
    110a:	28 2b       	or	r18, r24
    110c:	39 2b       	or	r19, r25
    110e:	4a 2b       	or	r20, r26
    1110:	5b 2b       	or	r21, r27
    1112:	da 01       	movw	r26, r20
    1114:	c9 01       	movw	r24, r18
    1116:	8f 77       	andi	r24, 0x7F	; 127
    1118:	90 70       	andi	r25, 0x00	; 0
    111a:	a0 70       	andi	r26, 0x00	; 0
    111c:	b0 70       	andi	r27, 0x00	; 0
    111e:	80 34       	cpi	r24, 0x40	; 64
    1120:	91 05       	cpc	r25, r1
    1122:	a1 05       	cpc	r26, r1
    1124:	b1 05       	cpc	r27, r1
    1126:	39 f4       	brne	.+14     	; 0x1136 <__pack_f+0xee>
    1128:	27 ff       	sbrs	r18, 7
    112a:	09 c0       	rjmp	.+18     	; 0x113e <__pack_f+0xf6>
    112c:	20 5c       	subi	r18, 0xC0	; 192
    112e:	3f 4f       	sbci	r19, 0xFF	; 255
    1130:	4f 4f       	sbci	r20, 0xFF	; 255
    1132:	5f 4f       	sbci	r21, 0xFF	; 255
    1134:	04 c0       	rjmp	.+8      	; 0x113e <__pack_f+0xf6>
    1136:	21 5c       	subi	r18, 0xC1	; 193
    1138:	3f 4f       	sbci	r19, 0xFF	; 255
    113a:	4f 4f       	sbci	r20, 0xFF	; 255
    113c:	5f 4f       	sbci	r21, 0xFF	; 255
    113e:	e0 e0       	ldi	r30, 0x00	; 0
    1140:	f0 e0       	ldi	r31, 0x00	; 0
    1142:	20 30       	cpi	r18, 0x00	; 0
    1144:	a0 e0       	ldi	r26, 0x00	; 0
    1146:	3a 07       	cpc	r19, r26
    1148:	a0 e0       	ldi	r26, 0x00	; 0
    114a:	4a 07       	cpc	r20, r26
    114c:	a0 e4       	ldi	r26, 0x40	; 64
    114e:	5a 07       	cpc	r21, r26
    1150:	10 f0       	brcs	.+4      	; 0x1156 <__pack_f+0x10e>
    1152:	e1 e0       	ldi	r30, 0x01	; 1
    1154:	f0 e0       	ldi	r31, 0x00	; 0
    1156:	79 01       	movw	r14, r18
    1158:	8a 01       	movw	r16, r20
    115a:	27 c0       	rjmp	.+78     	; 0x11aa <__pack_f+0x162>
    115c:	60 38       	cpi	r22, 0x80	; 128
    115e:	71 05       	cpc	r23, r1
    1160:	64 f5       	brge	.+88     	; 0x11ba <__pack_f+0x172>
    1162:	fb 01       	movw	r30, r22
    1164:	e1 58       	subi	r30, 0x81	; 129
    1166:	ff 4f       	sbci	r31, 0xFF	; 255
    1168:	d8 01       	movw	r26, r16
    116a:	c7 01       	movw	r24, r14
    116c:	8f 77       	andi	r24, 0x7F	; 127
    116e:	90 70       	andi	r25, 0x00	; 0
    1170:	a0 70       	andi	r26, 0x00	; 0
    1172:	b0 70       	andi	r27, 0x00	; 0
    1174:	80 34       	cpi	r24, 0x40	; 64
    1176:	91 05       	cpc	r25, r1
    1178:	a1 05       	cpc	r26, r1
    117a:	b1 05       	cpc	r27, r1
    117c:	39 f4       	brne	.+14     	; 0x118c <__pack_f+0x144>
    117e:	e7 fe       	sbrs	r14, 7
    1180:	0d c0       	rjmp	.+26     	; 0x119c <__pack_f+0x154>
    1182:	80 e4       	ldi	r24, 0x40	; 64
    1184:	90 e0       	ldi	r25, 0x00	; 0
    1186:	a0 e0       	ldi	r26, 0x00	; 0
    1188:	b0 e0       	ldi	r27, 0x00	; 0
    118a:	04 c0       	rjmp	.+8      	; 0x1194 <__pack_f+0x14c>
    118c:	8f e3       	ldi	r24, 0x3F	; 63
    118e:	90 e0       	ldi	r25, 0x00	; 0
    1190:	a0 e0       	ldi	r26, 0x00	; 0
    1192:	b0 e0       	ldi	r27, 0x00	; 0
    1194:	e8 0e       	add	r14, r24
    1196:	f9 1e       	adc	r15, r25
    1198:	0a 1f       	adc	r16, r26
    119a:	1b 1f       	adc	r17, r27
    119c:	17 ff       	sbrs	r17, 7
    119e:	05 c0       	rjmp	.+10     	; 0x11aa <__pack_f+0x162>
    11a0:	16 95       	lsr	r17
    11a2:	07 95       	ror	r16
    11a4:	f7 94       	ror	r15
    11a6:	e7 94       	ror	r14
    11a8:	31 96       	adiw	r30, 0x01	; 1
    11aa:	87 e0       	ldi	r24, 0x07	; 7
    11ac:	16 95       	lsr	r17
    11ae:	07 95       	ror	r16
    11b0:	f7 94       	ror	r15
    11b2:	e7 94       	ror	r14
    11b4:	8a 95       	dec	r24
    11b6:	d1 f7       	brne	.-12     	; 0x11ac <__pack_f+0x164>
    11b8:	05 c0       	rjmp	.+10     	; 0x11c4 <__pack_f+0x17c>
    11ba:	ee 24       	eor	r14, r14
    11bc:	ff 24       	eor	r15, r15
    11be:	87 01       	movw	r16, r14
    11c0:	ef ef       	ldi	r30, 0xFF	; 255
    11c2:	f0 e0       	ldi	r31, 0x00	; 0
    11c4:	6e 2f       	mov	r22, r30
    11c6:	67 95       	ror	r22
    11c8:	66 27       	eor	r22, r22
    11ca:	67 95       	ror	r22
    11cc:	90 2f       	mov	r25, r16
    11ce:	9f 77       	andi	r25, 0x7F	; 127
    11d0:	d7 94       	ror	r13
    11d2:	dd 24       	eor	r13, r13
    11d4:	d7 94       	ror	r13
    11d6:	8e 2f       	mov	r24, r30
    11d8:	86 95       	lsr	r24
    11da:	49 2f       	mov	r20, r25
    11dc:	46 2b       	or	r20, r22
    11de:	58 2f       	mov	r21, r24
    11e0:	5d 29       	or	r21, r13
    11e2:	b7 01       	movw	r22, r14
    11e4:	ca 01       	movw	r24, r20
    11e6:	1f 91       	pop	r17
    11e8:	0f 91       	pop	r16
    11ea:	ff 90       	pop	r15
    11ec:	ef 90       	pop	r14
    11ee:	df 90       	pop	r13
    11f0:	08 95       	ret

000011f2 <__unpack_f>:
    11f2:	fc 01       	movw	r30, r24
    11f4:	db 01       	movw	r26, r22
    11f6:	40 81       	ld	r20, Z
    11f8:	51 81       	ldd	r21, Z+1	; 0x01
    11fa:	22 81       	ldd	r18, Z+2	; 0x02
    11fc:	62 2f       	mov	r22, r18
    11fe:	6f 77       	andi	r22, 0x7F	; 127
    1200:	70 e0       	ldi	r23, 0x00	; 0
    1202:	22 1f       	adc	r18, r18
    1204:	22 27       	eor	r18, r18
    1206:	22 1f       	adc	r18, r18
    1208:	93 81       	ldd	r25, Z+3	; 0x03
    120a:	89 2f       	mov	r24, r25
    120c:	88 0f       	add	r24, r24
    120e:	82 2b       	or	r24, r18
    1210:	28 2f       	mov	r18, r24
    1212:	30 e0       	ldi	r19, 0x00	; 0
    1214:	99 1f       	adc	r25, r25
    1216:	99 27       	eor	r25, r25
    1218:	99 1f       	adc	r25, r25
    121a:	11 96       	adiw	r26, 0x01	; 1
    121c:	9c 93       	st	X, r25
    121e:	11 97       	sbiw	r26, 0x01	; 1
    1220:	21 15       	cp	r18, r1
    1222:	31 05       	cpc	r19, r1
    1224:	a9 f5       	brne	.+106    	; 0x1290 <__unpack_f+0x9e>
    1226:	41 15       	cp	r20, r1
    1228:	51 05       	cpc	r21, r1
    122a:	61 05       	cpc	r22, r1
    122c:	71 05       	cpc	r23, r1
    122e:	11 f4       	brne	.+4      	; 0x1234 <__unpack_f+0x42>
    1230:	82 e0       	ldi	r24, 0x02	; 2
    1232:	37 c0       	rjmp	.+110    	; 0x12a2 <__unpack_f+0xb0>
    1234:	82 e8       	ldi	r24, 0x82	; 130
    1236:	9f ef       	ldi	r25, 0xFF	; 255
    1238:	13 96       	adiw	r26, 0x03	; 3
    123a:	9c 93       	st	X, r25
    123c:	8e 93       	st	-X, r24
    123e:	12 97       	sbiw	r26, 0x02	; 2
    1240:	9a 01       	movw	r18, r20
    1242:	ab 01       	movw	r20, r22
    1244:	67 e0       	ldi	r22, 0x07	; 7
    1246:	22 0f       	add	r18, r18
    1248:	33 1f       	adc	r19, r19
    124a:	44 1f       	adc	r20, r20
    124c:	55 1f       	adc	r21, r21
    124e:	6a 95       	dec	r22
    1250:	d1 f7       	brne	.-12     	; 0x1246 <__unpack_f+0x54>
    1252:	83 e0       	ldi	r24, 0x03	; 3
    1254:	8c 93       	st	X, r24
    1256:	0d c0       	rjmp	.+26     	; 0x1272 <__unpack_f+0x80>
    1258:	22 0f       	add	r18, r18
    125a:	33 1f       	adc	r19, r19
    125c:	44 1f       	adc	r20, r20
    125e:	55 1f       	adc	r21, r21
    1260:	12 96       	adiw	r26, 0x02	; 2
    1262:	8d 91       	ld	r24, X+
    1264:	9c 91       	ld	r25, X
    1266:	13 97       	sbiw	r26, 0x03	; 3
    1268:	01 97       	sbiw	r24, 0x01	; 1
    126a:	13 96       	adiw	r26, 0x03	; 3
    126c:	9c 93       	st	X, r25
    126e:	8e 93       	st	-X, r24
    1270:	12 97       	sbiw	r26, 0x02	; 2
    1272:	20 30       	cpi	r18, 0x00	; 0
    1274:	80 e0       	ldi	r24, 0x00	; 0
    1276:	38 07       	cpc	r19, r24
    1278:	80 e0       	ldi	r24, 0x00	; 0
    127a:	48 07       	cpc	r20, r24
    127c:	80 e4       	ldi	r24, 0x40	; 64
    127e:	58 07       	cpc	r21, r24
    1280:	58 f3       	brcs	.-42     	; 0x1258 <__unpack_f+0x66>
    1282:	14 96       	adiw	r26, 0x04	; 4
    1284:	2d 93       	st	X+, r18
    1286:	3d 93       	st	X+, r19
    1288:	4d 93       	st	X+, r20
    128a:	5c 93       	st	X, r21
    128c:	17 97       	sbiw	r26, 0x07	; 7
    128e:	08 95       	ret
    1290:	2f 3f       	cpi	r18, 0xFF	; 255
    1292:	31 05       	cpc	r19, r1
    1294:	79 f4       	brne	.+30     	; 0x12b4 <__unpack_f+0xc2>
    1296:	41 15       	cp	r20, r1
    1298:	51 05       	cpc	r21, r1
    129a:	61 05       	cpc	r22, r1
    129c:	71 05       	cpc	r23, r1
    129e:	19 f4       	brne	.+6      	; 0x12a6 <__unpack_f+0xb4>
    12a0:	84 e0       	ldi	r24, 0x04	; 4
    12a2:	8c 93       	st	X, r24
    12a4:	08 95       	ret
    12a6:	64 ff       	sbrs	r22, 4
    12a8:	03 c0       	rjmp	.+6      	; 0x12b0 <__unpack_f+0xbe>
    12aa:	81 e0       	ldi	r24, 0x01	; 1
    12ac:	8c 93       	st	X, r24
    12ae:	12 c0       	rjmp	.+36     	; 0x12d4 <__unpack_f+0xe2>
    12b0:	1c 92       	st	X, r1
    12b2:	10 c0       	rjmp	.+32     	; 0x12d4 <__unpack_f+0xe2>
    12b4:	2f 57       	subi	r18, 0x7F	; 127
    12b6:	30 40       	sbci	r19, 0x00	; 0
    12b8:	13 96       	adiw	r26, 0x03	; 3
    12ba:	3c 93       	st	X, r19
    12bc:	2e 93       	st	-X, r18
    12be:	12 97       	sbiw	r26, 0x02	; 2
    12c0:	83 e0       	ldi	r24, 0x03	; 3
    12c2:	8c 93       	st	X, r24
    12c4:	87 e0       	ldi	r24, 0x07	; 7
    12c6:	44 0f       	add	r20, r20
    12c8:	55 1f       	adc	r21, r21
    12ca:	66 1f       	adc	r22, r22
    12cc:	77 1f       	adc	r23, r23
    12ce:	8a 95       	dec	r24
    12d0:	d1 f7       	brne	.-12     	; 0x12c6 <__unpack_f+0xd4>
    12d2:	70 64       	ori	r23, 0x40	; 64
    12d4:	14 96       	adiw	r26, 0x04	; 4
    12d6:	4d 93       	st	X+, r20
    12d8:	5d 93       	st	X+, r21
    12da:	6d 93       	st	X+, r22
    12dc:	7c 93       	st	X, r23
    12de:	17 97       	sbiw	r26, 0x07	; 7
    12e0:	08 95       	ret

000012e2 <__fpcmp_parts_f>:
    12e2:	1f 93       	push	r17
    12e4:	dc 01       	movw	r26, r24
    12e6:	fb 01       	movw	r30, r22
    12e8:	9c 91       	ld	r25, X
    12ea:	92 30       	cpi	r25, 0x02	; 2
    12ec:	08 f4       	brcc	.+2      	; 0x12f0 <__fpcmp_parts_f+0xe>
    12ee:	47 c0       	rjmp	.+142    	; 0x137e <__fpcmp_parts_f+0x9c>
    12f0:	80 81       	ld	r24, Z
    12f2:	82 30       	cpi	r24, 0x02	; 2
    12f4:	08 f4       	brcc	.+2      	; 0x12f8 <__fpcmp_parts_f+0x16>
    12f6:	43 c0       	rjmp	.+134    	; 0x137e <__fpcmp_parts_f+0x9c>
    12f8:	94 30       	cpi	r25, 0x04	; 4
    12fa:	51 f4       	brne	.+20     	; 0x1310 <__fpcmp_parts_f+0x2e>
    12fc:	11 96       	adiw	r26, 0x01	; 1
    12fe:	1c 91       	ld	r17, X
    1300:	84 30       	cpi	r24, 0x04	; 4
    1302:	99 f5       	brne	.+102    	; 0x136a <__fpcmp_parts_f+0x88>
    1304:	81 81       	ldd	r24, Z+1	; 0x01
    1306:	68 2f       	mov	r22, r24
    1308:	70 e0       	ldi	r23, 0x00	; 0
    130a:	61 1b       	sub	r22, r17
    130c:	71 09       	sbc	r23, r1
    130e:	3f c0       	rjmp	.+126    	; 0x138e <__fpcmp_parts_f+0xac>
    1310:	84 30       	cpi	r24, 0x04	; 4
    1312:	21 f0       	breq	.+8      	; 0x131c <__fpcmp_parts_f+0x3a>
    1314:	92 30       	cpi	r25, 0x02	; 2
    1316:	31 f4       	brne	.+12     	; 0x1324 <__fpcmp_parts_f+0x42>
    1318:	82 30       	cpi	r24, 0x02	; 2
    131a:	b9 f1       	breq	.+110    	; 0x138a <__fpcmp_parts_f+0xa8>
    131c:	81 81       	ldd	r24, Z+1	; 0x01
    131e:	88 23       	and	r24, r24
    1320:	89 f1       	breq	.+98     	; 0x1384 <__fpcmp_parts_f+0xa2>
    1322:	2d c0       	rjmp	.+90     	; 0x137e <__fpcmp_parts_f+0x9c>
    1324:	11 96       	adiw	r26, 0x01	; 1
    1326:	1c 91       	ld	r17, X
    1328:	11 97       	sbiw	r26, 0x01	; 1
    132a:	82 30       	cpi	r24, 0x02	; 2
    132c:	f1 f0       	breq	.+60     	; 0x136a <__fpcmp_parts_f+0x88>
    132e:	81 81       	ldd	r24, Z+1	; 0x01
    1330:	18 17       	cp	r17, r24
    1332:	d9 f4       	brne	.+54     	; 0x136a <__fpcmp_parts_f+0x88>
    1334:	12 96       	adiw	r26, 0x02	; 2
    1336:	2d 91       	ld	r18, X+
    1338:	3c 91       	ld	r19, X
    133a:	13 97       	sbiw	r26, 0x03	; 3
    133c:	82 81       	ldd	r24, Z+2	; 0x02
    133e:	93 81       	ldd	r25, Z+3	; 0x03
    1340:	82 17       	cp	r24, r18
    1342:	93 07       	cpc	r25, r19
    1344:	94 f0       	brlt	.+36     	; 0x136a <__fpcmp_parts_f+0x88>
    1346:	28 17       	cp	r18, r24
    1348:	39 07       	cpc	r19, r25
    134a:	bc f0       	brlt	.+46     	; 0x137a <__fpcmp_parts_f+0x98>
    134c:	14 96       	adiw	r26, 0x04	; 4
    134e:	8d 91       	ld	r24, X+
    1350:	9d 91       	ld	r25, X+
    1352:	0d 90       	ld	r0, X+
    1354:	bc 91       	ld	r27, X
    1356:	a0 2d       	mov	r26, r0
    1358:	24 81       	ldd	r18, Z+4	; 0x04
    135a:	35 81       	ldd	r19, Z+5	; 0x05
    135c:	46 81       	ldd	r20, Z+6	; 0x06
    135e:	57 81       	ldd	r21, Z+7	; 0x07
    1360:	28 17       	cp	r18, r24
    1362:	39 07       	cpc	r19, r25
    1364:	4a 07       	cpc	r20, r26
    1366:	5b 07       	cpc	r21, r27
    1368:	18 f4       	brcc	.+6      	; 0x1370 <__fpcmp_parts_f+0x8e>
    136a:	11 23       	and	r17, r17
    136c:	41 f0       	breq	.+16     	; 0x137e <__fpcmp_parts_f+0x9c>
    136e:	0a c0       	rjmp	.+20     	; 0x1384 <__fpcmp_parts_f+0xa2>
    1370:	82 17       	cp	r24, r18
    1372:	93 07       	cpc	r25, r19
    1374:	a4 07       	cpc	r26, r20
    1376:	b5 07       	cpc	r27, r21
    1378:	40 f4       	brcc	.+16     	; 0x138a <__fpcmp_parts_f+0xa8>
    137a:	11 23       	and	r17, r17
    137c:	19 f0       	breq	.+6      	; 0x1384 <__fpcmp_parts_f+0xa2>
    137e:	61 e0       	ldi	r22, 0x01	; 1
    1380:	70 e0       	ldi	r23, 0x00	; 0
    1382:	05 c0       	rjmp	.+10     	; 0x138e <__fpcmp_parts_f+0xac>
    1384:	6f ef       	ldi	r22, 0xFF	; 255
    1386:	7f ef       	ldi	r23, 0xFF	; 255
    1388:	02 c0       	rjmp	.+4      	; 0x138e <__fpcmp_parts_f+0xac>
    138a:	60 e0       	ldi	r22, 0x00	; 0
    138c:	70 e0       	ldi	r23, 0x00	; 0
    138e:	cb 01       	movw	r24, r22
    1390:	1f 91       	pop	r17
    1392:	08 95       	ret

00001394 <__prologue_saves__>:
    1394:	2f 92       	push	r2
    1396:	3f 92       	push	r3
    1398:	4f 92       	push	r4
    139a:	5f 92       	push	r5
    139c:	6f 92       	push	r6
    139e:	7f 92       	push	r7
    13a0:	8f 92       	push	r8
    13a2:	9f 92       	push	r9
    13a4:	af 92       	push	r10
    13a6:	bf 92       	push	r11
    13a8:	cf 92       	push	r12
    13aa:	df 92       	push	r13
    13ac:	ef 92       	push	r14
    13ae:	ff 92       	push	r15
    13b0:	0f 93       	push	r16
    13b2:	1f 93       	push	r17
    13b4:	cf 93       	push	r28
    13b6:	df 93       	push	r29
    13b8:	cd b7       	in	r28, 0x3d	; 61
    13ba:	de b7       	in	r29, 0x3e	; 62
    13bc:	ca 1b       	sub	r28, r26
    13be:	db 0b       	sbc	r29, r27
    13c0:	0f b6       	in	r0, 0x3f	; 63
    13c2:	f8 94       	cli
    13c4:	de bf       	out	0x3e, r29	; 62
    13c6:	0f be       	out	0x3f, r0	; 63
    13c8:	cd bf       	out	0x3d, r28	; 61
    13ca:	19 94       	eijmp

000013cc <__epilogue_restores__>:
    13cc:	2a 88       	ldd	r2, Y+18	; 0x12
    13ce:	39 88       	ldd	r3, Y+17	; 0x11
    13d0:	48 88       	ldd	r4, Y+16	; 0x10
    13d2:	5f 84       	ldd	r5, Y+15	; 0x0f
    13d4:	6e 84       	ldd	r6, Y+14	; 0x0e
    13d6:	7d 84       	ldd	r7, Y+13	; 0x0d
    13d8:	8c 84       	ldd	r8, Y+12	; 0x0c
    13da:	9b 84       	ldd	r9, Y+11	; 0x0b
    13dc:	aa 84       	ldd	r10, Y+10	; 0x0a
    13de:	b9 84       	ldd	r11, Y+9	; 0x09
    13e0:	c8 84       	ldd	r12, Y+8	; 0x08
    13e2:	df 80       	ldd	r13, Y+7	; 0x07
    13e4:	ee 80       	ldd	r14, Y+6	; 0x06
    13e6:	fd 80       	ldd	r15, Y+5	; 0x05
    13e8:	0c 81       	ldd	r16, Y+4	; 0x04
    13ea:	1b 81       	ldd	r17, Y+3	; 0x03
    13ec:	aa 81       	ldd	r26, Y+2	; 0x02
    13ee:	b9 81       	ldd	r27, Y+1	; 0x01
    13f0:	ce 0f       	add	r28, r30
    13f2:	d1 1d       	adc	r29, r1
    13f4:	0f b6       	in	r0, 0x3f	; 63
    13f6:	f8 94       	cli
    13f8:	de bf       	out	0x3e, r29	; 62
    13fa:	0f be       	out	0x3f, r0	; 63
    13fc:	cd bf       	out	0x3d, r28	; 61
    13fe:	ed 01       	movw	r28, r26
    1400:	08 95       	ret

00001402 <_exit>:
    1402:	f8 94       	cli

00001404 <__stop_program>:
    1404:	ff cf       	rjmp	.-2      	; 0x1404 <__stop_program>
