
bin\Debug\project_b3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000108  00800200  00001cc6  00001d7a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001cc6  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000018  00800308  00800308  00001e82  2**0
                  ALLOC
  3 .fuse         00000003  00820000  00820000  00001e82  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .debug_aranges 00000220  00000000  00000000  00001e85  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000461  00000000  00000000  000020a5  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002abe  00000000  00000000  00002506  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001652  00000000  00000000  00004fc4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001a57  00000000  00000000  00006616  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000320  00000000  00000000  00008070  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004b7  00000000  00000000  00008390  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000996  00000000  00000000  00008847  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  000091dd  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__ctors_end>
       4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
       8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
       c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      10:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      14:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      18:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      1c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      20:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      24:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      28:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      2c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      30:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      34:	0c 94 b1 05 	jmp	0xb62	; 0xb62 <__vector_13>
      38:	0c 94 ee 05 	jmp	0xbdc	; 0xbdc <__vector_14>
      3c:	0c 94 74 05 	jmp	0xae8	; 0xae8 <__vector_15>
      40:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      44:	0c 94 22 04 	jmp	0x844	; 0x844 <__vector_17>
      48:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      4c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      50:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      54:	0c 94 8b 06 	jmp	0xd16	; 0xd16 <__vector_21>
      58:	0c 94 b2 06 	jmp	0xd64	; 0xd64 <__vector_22>
      5c:	0c 94 2b 06 	jmp	0xc56	; 0xc56 <__vector_23>
      60:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      64:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      68:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      6c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      70:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      74:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      78:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      7c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      80:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      84:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      88:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      8c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      90:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      94:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      98:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      9c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      a0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      a4:	0c 94 4d 04 	jmp	0x89a	; 0x89a <__vector_41>
      a8:	0c 94 46 05 	jmp	0xa8c	; 0xa8c <__vector_42>
      ac:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      b0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      b4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      b8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      bc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      c0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      c4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      c8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      cc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      d0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      d4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      d8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      dc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      e0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	13 e0       	ldi	r17, 0x03	; 3
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b2 e0       	ldi	r27, 0x02	; 2
      fa:	e6 ec       	ldi	r30, 0xC6	; 198
      fc:	fc e1       	ldi	r31, 0x1C	; 28
      fe:	00 e0       	ldi	r16, 0x00	; 0
     100:	0b bf       	out	0x3b, r16	; 59
     102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
     104:	07 90       	elpm	r0, Z+
     106:	0d 92       	st	X+, r0
     108:	a8 30       	cpi	r26, 0x08	; 8
     10a:	b1 07       	cpc	r27, r17
     10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
     10e:	13 e0       	ldi	r17, 0x03	; 3
     110:	a8 e0       	ldi	r26, 0x08	; 8
     112:	b3 e0       	ldi	r27, 0x03	; 3
     114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
     116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
     118:	a0 32       	cpi	r26, 0x20	; 32
     11a:	b1 07       	cpc	r27, r17
     11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
     11e:	0e 94 95 00 	call	0x12a	; 0x12a <main>
     122:	0c 94 61 0e 	jmp	0x1cc2	; 0x1cc2 <_exit>

00000126 <__bad_interrupt>:
     126:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000012a <main>:
#include "Header.h"



int main(void)
{
     12a:	df 93       	push	r29
     12c:	cf 93       	push	r28
     12e:	cd b7       	in	r28, 0x3d	; 61
     130:	de b7       	in	r29, 0x3e	; 62
    init();
     132:	0e 94 a6 00 	call	0x14c	; 0x14c <init>
    init_motor();
     136:	0e 94 d9 06 	call	0xdb2	; 0xdb2 <init_motor>
    while(1)
    {
        rechte_lijn();
     13a:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <rechte_lijn>
		bocht_links();
     13e:	0e 94 41 03 	call	0x682	; 0x682 <bocht_links>
		rechte_lijn();
     142:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <rechte_lijn>
        bocht_rechts();
     146:	0e 94 ac 03 	call	0x758	; 0x758 <bocht_rechts>
     14a:	f7 cf       	rjmp	.-18     	; 0x13a <main+0x10>

0000014c <init>:
#include <avr/io.h>
#include <avr/interrupt.h>
#include "Header.h"

void init (void)
{
     14c:	df 93       	push	r29
     14e:	cf 93       	push	r28
     150:	cd b7       	in	r28, 0x3d	; 61
     152:	de b7       	in	r29, 0x3e	; 62
    DDRE |= (1 << PE5); //pwm links
     154:	ad e2       	ldi	r26, 0x2D	; 45
     156:	b0 e0       	ldi	r27, 0x00	; 0
     158:	ed e2       	ldi	r30, 0x2D	; 45
     15a:	f0 e0       	ldi	r31, 0x00	; 0
     15c:	80 81       	ld	r24, Z
     15e:	80 62       	ori	r24, 0x20	; 32
     160:	8c 93       	st	X, r24
    DDRE |= (1 << PE4); //pwm rechts
     162:	ad e2       	ldi	r26, 0x2D	; 45
     164:	b0 e0       	ldi	r27, 0x00	; 0
     166:	ed e2       	ldi	r30, 0x2D	; 45
     168:	f0 e0       	ldi	r31, 0x00	; 0
     16a:	80 81       	ld	r24, Z
     16c:	80 61       	ori	r24, 0x10	; 16
     16e:	8c 93       	st	X, r24
	DDRH |= (1 << PH4); //lampje
     170:	a1 e0       	ldi	r26, 0x01	; 1
     172:	b1 e0       	ldi	r27, 0x01	; 1
     174:	e1 e0       	ldi	r30, 0x01	; 1
     176:	f1 e0       	ldi	r31, 0x01	; 1
     178:	80 81       	ld	r24, Z
     17a:	80 61       	ori	r24, 0x10	; 16
     17c:	8c 93       	st	X, r24
	DDRE |= (1 << PJ1); //motorrichting links
     17e:	ad e2       	ldi	r26, 0x2D	; 45
     180:	b0 e0       	ldi	r27, 0x00	; 0
     182:	ed e2       	ldi	r30, 0x2D	; 45
     184:	f0 e0       	ldi	r31, 0x00	; 0
     186:	80 81       	ld	r24, Z
     188:	82 60       	ori	r24, 0x02	; 2
     18a:	8c 93       	st	X, r24
	DDRE |= (1 << PJ0); //motorrichting rechts
     18c:	ad e2       	ldi	r26, 0x2D	; 45
     18e:	b0 e0       	ldi	r27, 0x00	; 0
     190:	ed e2       	ldi	r30, 0x2D	; 45
     192:	f0 e0       	ldi	r31, 0x00	; 0
     194:	80 81       	ld	r24, Z
     196:	81 60       	ori	r24, 0x01	; 1
     198:	8c 93       	st	X, r24
    DDRA &= ~(1 << PA0); //nadering links
     19a:	a1 e2       	ldi	r26, 0x21	; 33
     19c:	b0 e0       	ldi	r27, 0x00	; 0
     19e:	e1 e2       	ldi	r30, 0x21	; 33
     1a0:	f0 e0       	ldi	r31, 0x00	; 0
     1a2:	80 81       	ld	r24, Z
     1a4:	8e 7f       	andi	r24, 0xFE	; 254
     1a6:	8c 93       	st	X, r24
    DDRA &= ~(1 << PA1); //nadering rechts
     1a8:	a1 e2       	ldi	r26, 0x21	; 33
     1aa:	b0 e0       	ldi	r27, 0x00	; 0
     1ac:	e1 e2       	ldi	r30, 0x21	; 33
     1ae:	f0 e0       	ldi	r31, 0x00	; 0
     1b0:	80 81       	ld	r24, Z
     1b2:	8d 7f       	andi	r24, 0xFD	; 253
     1b4:	8c 93       	st	X, r24
	DDRL &= ~(1 << PL0); //Ultrasoon echopin
     1b6:	aa e0       	ldi	r26, 0x0A	; 10
     1b8:	b1 e0       	ldi	r27, 0x01	; 1
     1ba:	ea e0       	ldi	r30, 0x0A	; 10
     1bc:	f1 e0       	ldi	r31, 0x01	; 1
     1be:	80 81       	ld	r24, Z
     1c0:	8e 7f       	andi	r24, 0xFE	; 254
     1c2:	8c 93       	st	X, r24
	DDRA |= (1 << PA3); //Ultrasoon trigger
     1c4:	a1 e2       	ldi	r26, 0x21	; 33
     1c6:	b0 e0       	ldi	r27, 0x00	; 0
     1c8:	e1 e2       	ldi	r30, 0x21	; 33
     1ca:	f0 e0       	ldi	r31, 0x00	; 0
     1cc:	80 81       	ld	r24, Z
     1ce:	88 60       	ori	r24, 0x08	; 8
     1d0:	8c 93       	st	X, r24
}
     1d2:	cf 91       	pop	r28
     1d4:	df 91       	pop	r29
     1d6:	08 95       	ret

000001d8 <rechte_lijn>:

void rechte_lijn(void)
{
     1d8:	df 93       	push	r29
     1da:	cf 93       	push	r28
     1dc:	cd b7       	in	r28, 0x3d	; 61
     1de:	de b7       	in	r29, 0x3e	; 62
     1e0:	e3 97       	sbiw	r28, 0x33	; 51
     1e2:	0f b6       	in	r0, 0x3f	; 63
     1e4:	f8 94       	cli
     1e6:	de bf       	out	0x3e, r29	; 62
     1e8:	0f be       	out	0x3f, r0	; 63
     1ea:	cd bf       	out	0x3d, r28	; 61
	int vlag;
	TCNT1 = 0;
     1ec:	e4 e8       	ldi	r30, 0x84	; 132
     1ee:	f0 e0       	ldi	r31, 0x00	; 0
     1f0:	11 82       	std	Z+1, r1	; 0x01
     1f2:	10 82       	st	Z, r1
	Grote_klok = 0;
     1f4:	10 92 15 03 	sts	0x0315, r1
     1f8:	10 92 14 03 	sts	0x0314, r1
     1fc:	19 c2       	rjmp	.+1074   	; 0x630 <rechte_lijn+0x458>
    while ((ultrasoon <= 37) && (vlag == 1))
    {
		if ((ultrasoon_rechts > 10) && (ultrasoon_links > 10))
     1fe:	80 91 10 03 	lds	r24, 0x0310
     202:	90 91 11 03 	lds	r25, 0x0311
     206:	a0 91 12 03 	lds	r26, 0x0312
     20a:	b0 91 13 03 	lds	r27, 0x0313
     20e:	1b aa       	std	Y+51, r1	; 0x33
     210:	bc 01       	movw	r22, r24
     212:	cd 01       	movw	r24, r26
     214:	20 e0       	ldi	r18, 0x00	; 0
     216:	30 e0       	ldi	r19, 0x00	; 0
     218:	40 e2       	ldi	r20, 0x20	; 32
     21a:	51 e4       	ldi	r21, 0x41	; 65
     21c:	0e 94 4a 0a 	call	0x1494	; 0x1494 <__gtsf2>
     220:	18 16       	cp	r1, r24
     222:	14 f4       	brge	.+4      	; 0x228 <rechte_lijn+0x50>
     224:	81 e0       	ldi	r24, 0x01	; 1
     226:	8b ab       	std	Y+51, r24	; 0x33
     228:	81 e0       	ldi	r24, 0x01	; 1
     22a:	9b a9       	ldd	r25, Y+51	; 0x33
     22c:	89 27       	eor	r24, r25
     22e:	88 23       	and	r24, r24
     230:	09 f0       	breq	.+2      	; 0x234 <rechte_lijn+0x5c>
     232:	78 c1       	rjmp	.+752    	; 0x524 <rechte_lijn+0x34c>
     234:	80 91 0c 03 	lds	r24, 0x030C
     238:	90 91 0d 03 	lds	r25, 0x030D
     23c:	a0 91 0e 03 	lds	r26, 0x030E
     240:	b0 91 0f 03 	lds	r27, 0x030F
     244:	1a aa       	std	Y+50, r1	; 0x32
     246:	bc 01       	movw	r22, r24
     248:	cd 01       	movw	r24, r26
     24a:	20 e0       	ldi	r18, 0x00	; 0
     24c:	30 e0       	ldi	r19, 0x00	; 0
     24e:	40 e2       	ldi	r20, 0x20	; 32
     250:	51 e4       	ldi	r21, 0x41	; 65
     252:	0e 94 4a 0a 	call	0x1494	; 0x1494 <__gtsf2>
     256:	18 16       	cp	r1, r24
     258:	14 f4       	brge	.+4      	; 0x25e <rechte_lijn+0x86>
     25a:	81 e0       	ldi	r24, 0x01	; 1
     25c:	8a ab       	std	Y+50, r24	; 0x32
     25e:	81 e0       	ldi	r24, 0x01	; 1
     260:	9a a9       	ldd	r25, Y+50	; 0x32
     262:	89 27       	eor	r24, r25
     264:	88 23       	and	r24, r24
     266:	09 f0       	breq	.+2      	; 0x26a <rechte_lijn+0x92>
     268:	5d c1       	rjmp	.+698    	; 0x524 <rechte_lijn+0x34c>
		{
        motor(170,170);
     26a:	8a ea       	ldi	r24, 0xAA	; 170
     26c:	90 e0       	ldi	r25, 0x00	; 0
     26e:	6a ea       	ldi	r22, 0xAA	; 170
     270:	70 e0       	ldi	r23, 0x00	; 0
     272:	0e 94 2b 07 	call	0xe56	; 0xe56 <motor>
        if (PINA &(1 << PA0))
     276:	e0 e2       	ldi	r30, 0x20	; 32
     278:	f0 e0       	ldi	r31, 0x00	; 0
     27a:	80 81       	ld	r24, Z
     27c:	88 2f       	mov	r24, r24
     27e:	90 e0       	ldi	r25, 0x00	; 0
     280:	81 70       	andi	r24, 0x01	; 1
     282:	90 70       	andi	r25, 0x00	; 0
     284:	88 23       	and	r24, r24
     286:	09 f4       	brne	.+2      	; 0x28a <rechte_lijn+0xb2>
     288:	8c c0       	rjmp	.+280    	; 0x3a2 <rechte_lijn+0x1ca>
        {
            for (int a = 170;PINA &(1 << PA0); a++)
     28a:	8a ea       	ldi	r24, 0xAA	; 170
     28c:	90 e0       	ldi	r25, 0x00	; 0
     28e:	9e a7       	std	Y+46, r25	; 0x2e
     290:	8d a7       	std	Y+45, r24	; 0x2d
     292:	7d c0       	rjmp	.+250    	; 0x38e <rechte_lijn+0x1b6>
            {
                motor (a,160);
     294:	8d a5       	ldd	r24, Y+45	; 0x2d
     296:	9e a5       	ldd	r25, Y+46	; 0x2e
     298:	60 ea       	ldi	r22, 0xA0	; 160
     29a:	70 e0       	ldi	r23, 0x00	; 0
     29c:	0e 94 2b 07 	call	0xe56	; 0xe56 <motor>
     2a0:	80 e0       	ldi	r24, 0x00	; 0
     2a2:	90 e0       	ldi	r25, 0x00	; 0
     2a4:	a0 e2       	ldi	r26, 0x20	; 32
     2a6:	b2 e4       	ldi	r27, 0x42	; 66
     2a8:	8f a3       	std	Y+39, r24	; 0x27
     2aa:	98 a7       	std	Y+40, r25	; 0x28
     2ac:	a9 a7       	std	Y+41, r26	; 0x29
     2ae:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     2b0:	6f a1       	ldd	r22, Y+39	; 0x27
     2b2:	78 a5       	ldd	r23, Y+40	; 0x28
     2b4:	89 a5       	ldd	r24, Y+41	; 0x29
     2b6:	9a a5       	ldd	r25, Y+42	; 0x2a
     2b8:	20 e0       	ldi	r18, 0x00	; 0
     2ba:	30 e0       	ldi	r19, 0x00	; 0
     2bc:	4a e7       	ldi	r20, 0x7A	; 122
     2be:	55 e4       	ldi	r21, 0x45	; 69
     2c0:	0e 94 50 09 	call	0x12a0	; 0x12a0 <__mulsf3>
     2c4:	dc 01       	movw	r26, r24
     2c6:	cb 01       	movw	r24, r22
     2c8:	8b a3       	std	Y+35, r24	; 0x23
     2ca:	9c a3       	std	Y+36, r25	; 0x24
     2cc:	ad a3       	std	Y+37, r26	; 0x25
     2ce:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
     2d0:	6b a1       	ldd	r22, Y+35	; 0x23
     2d2:	7c a1       	ldd	r23, Y+36	; 0x24
     2d4:	8d a1       	ldd	r24, Y+37	; 0x25
     2d6:	9e a1       	ldd	r25, Y+38	; 0x26
     2d8:	20 e0       	ldi	r18, 0x00	; 0
     2da:	30 e0       	ldi	r19, 0x00	; 0
     2dc:	40 e8       	ldi	r20, 0x80	; 128
     2de:	5f e3       	ldi	r21, 0x3F	; 63
     2e0:	0e 94 aa 0a 	call	0x1554	; 0x1554 <__ltsf2>
     2e4:	88 23       	and	r24, r24
     2e6:	2c f4       	brge	.+10     	; 0x2f2 <rechte_lijn+0x11a>
		__ticks = 1;
     2e8:	81 e0       	ldi	r24, 0x01	; 1
     2ea:	90 e0       	ldi	r25, 0x00	; 0
     2ec:	9a a3       	std	Y+34, r25	; 0x22
     2ee:	89 a3       	std	Y+33, r24	; 0x21
     2f0:	3f c0       	rjmp	.+126    	; 0x370 <rechte_lijn+0x198>
	else if (__tmp > 65535)
     2f2:	6b a1       	ldd	r22, Y+35	; 0x23
     2f4:	7c a1       	ldd	r23, Y+36	; 0x24
     2f6:	8d a1       	ldd	r24, Y+37	; 0x25
     2f8:	9e a1       	ldd	r25, Y+38	; 0x26
     2fa:	20 e0       	ldi	r18, 0x00	; 0
     2fc:	3f ef       	ldi	r19, 0xFF	; 255
     2fe:	4f e7       	ldi	r20, 0x7F	; 127
     300:	57 e4       	ldi	r21, 0x47	; 71
     302:	0e 94 4a 0a 	call	0x1494	; 0x1494 <__gtsf2>
     306:	18 16       	cp	r1, r24
     308:	4c f5       	brge	.+82     	; 0x35c <rechte_lijn+0x184>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     30a:	6f a1       	ldd	r22, Y+39	; 0x27
     30c:	78 a5       	ldd	r23, Y+40	; 0x28
     30e:	89 a5       	ldd	r24, Y+41	; 0x29
     310:	9a a5       	ldd	r25, Y+42	; 0x2a
     312:	20 e0       	ldi	r18, 0x00	; 0
     314:	30 e0       	ldi	r19, 0x00	; 0
     316:	40 e2       	ldi	r20, 0x20	; 32
     318:	51 e4       	ldi	r21, 0x41	; 65
     31a:	0e 94 50 09 	call	0x12a0	; 0x12a0 <__mulsf3>
     31e:	dc 01       	movw	r26, r24
     320:	cb 01       	movw	r24, r22
     322:	bc 01       	movw	r22, r24
     324:	cd 01       	movw	r24, r26
     326:	0e 94 7a 07 	call	0xef4	; 0xef4 <__fixunssfsi>
     32a:	dc 01       	movw	r26, r24
     32c:	cb 01       	movw	r24, r22
     32e:	9a a3       	std	Y+34, r25	; 0x22
     330:	89 a3       	std	Y+33, r24	; 0x21
     332:	0f c0       	rjmp	.+30     	; 0x352 <rechte_lijn+0x17a>
     334:	80 e9       	ldi	r24, 0x90	; 144
     336:	91 e0       	ldi	r25, 0x01	; 1
     338:	98 a3       	std	Y+32, r25	; 0x20
     33a:	8f 8f       	std	Y+31, r24	; 0x1f
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     33c:	8f 8d       	ldd	r24, Y+31	; 0x1f
     33e:	98 a1       	ldd	r25, Y+32	; 0x20
     340:	01 97       	sbiw	r24, 0x01	; 1
     342:	f1 f7       	brne	.-4      	; 0x340 <rechte_lijn+0x168>
     344:	98 a3       	std	Y+32, r25	; 0x20
     346:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     348:	89 a1       	ldd	r24, Y+33	; 0x21
     34a:	9a a1       	ldd	r25, Y+34	; 0x22
     34c:	01 97       	sbiw	r24, 0x01	; 1
     34e:	9a a3       	std	Y+34, r25	; 0x22
     350:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     352:	89 a1       	ldd	r24, Y+33	; 0x21
     354:	9a a1       	ldd	r25, Y+34	; 0x22
     356:	00 97       	sbiw	r24, 0x00	; 0
     358:	69 f7       	brne	.-38     	; 0x334 <rechte_lijn+0x15c>
     35a:	14 c0       	rjmp	.+40     	; 0x384 <rechte_lijn+0x1ac>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     35c:	6b a1       	ldd	r22, Y+35	; 0x23
     35e:	7c a1       	ldd	r23, Y+36	; 0x24
     360:	8d a1       	ldd	r24, Y+37	; 0x25
     362:	9e a1       	ldd	r25, Y+38	; 0x26
     364:	0e 94 7a 07 	call	0xef4	; 0xef4 <__fixunssfsi>
     368:	dc 01       	movw	r26, r24
     36a:	cb 01       	movw	r24, r22
     36c:	9a a3       	std	Y+34, r25	; 0x22
     36e:	89 a3       	std	Y+33, r24	; 0x21
     370:	89 a1       	ldd	r24, Y+33	; 0x21
     372:	9a a1       	ldd	r25, Y+34	; 0x22
     374:	9e 8f       	std	Y+30, r25	; 0x1e
     376:	8d 8f       	std	Y+29, r24	; 0x1d
     378:	8d 8d       	ldd	r24, Y+29	; 0x1d
     37a:	9e 8d       	ldd	r25, Y+30	; 0x1e
     37c:	01 97       	sbiw	r24, 0x01	; 1
     37e:	f1 f7       	brne	.-4      	; 0x37c <rechte_lijn+0x1a4>
     380:	9e 8f       	std	Y+30, r25	; 0x1e
     382:	8d 8f       	std	Y+29, r24	; 0x1d
		if ((ultrasoon_rechts > 10) && (ultrasoon_links > 10))
		{
        motor(170,170);
        if (PINA &(1 << PA0))
        {
            for (int a = 170;PINA &(1 << PA0); a++)
     384:	8d a5       	ldd	r24, Y+45	; 0x2d
     386:	9e a5       	ldd	r25, Y+46	; 0x2e
     388:	01 96       	adiw	r24, 0x01	; 1
     38a:	9e a7       	std	Y+46, r25	; 0x2e
     38c:	8d a7       	std	Y+45, r24	; 0x2d
     38e:	e0 e2       	ldi	r30, 0x20	; 32
     390:	f0 e0       	ldi	r31, 0x00	; 0
     392:	80 81       	ld	r24, Z
     394:	88 2f       	mov	r24, r24
     396:	90 e0       	ldi	r25, 0x00	; 0
     398:	81 70       	andi	r24, 0x01	; 1
     39a:	90 70       	andi	r25, 0x00	; 0
     39c:	88 23       	and	r24, r24
     39e:	09 f0       	breq	.+2      	; 0x3a2 <rechte_lijn+0x1ca>
     3a0:	79 cf       	rjmp	.-270    	; 0x294 <rechte_lijn+0xbc>
            {
                motor (a,160);
                _delay_ms(40);
            }
        }
        if (PINA &(1 << PA1))
     3a2:	e0 e2       	ldi	r30, 0x20	; 32
     3a4:	f0 e0       	ldi	r31, 0x00	; 0
     3a6:	80 81       	ld	r24, Z
     3a8:	88 2f       	mov	r24, r24
     3aa:	90 e0       	ldi	r25, 0x00	; 0
     3ac:	82 70       	andi	r24, 0x02	; 2
     3ae:	90 70       	andi	r25, 0x00	; 0
     3b0:	00 97       	sbiw	r24, 0x00	; 0
     3b2:	09 f4       	brne	.+2      	; 0x3b6 <rechte_lijn+0x1de>
     3b4:	8c c0       	rjmp	.+280    	; 0x4ce <rechte_lijn+0x2f6>
        {
            for (int a = 170;(PINA &(1 << PA1)); a++)
     3b6:	8a ea       	ldi	r24, 0xAA	; 170
     3b8:	90 e0       	ldi	r25, 0x00	; 0
     3ba:	9c a7       	std	Y+44, r25	; 0x2c
     3bc:	8b a7       	std	Y+43, r24	; 0x2b
     3be:	7d c0       	rjmp	.+250    	; 0x4ba <rechte_lijn+0x2e2>
            {
                motor (a,160);
     3c0:	8b a5       	ldd	r24, Y+43	; 0x2b
     3c2:	9c a5       	ldd	r25, Y+44	; 0x2c
     3c4:	60 ea       	ldi	r22, 0xA0	; 160
     3c6:	70 e0       	ldi	r23, 0x00	; 0
     3c8:	0e 94 2b 07 	call	0xe56	; 0xe56 <motor>
     3cc:	80 e0       	ldi	r24, 0x00	; 0
     3ce:	90 e0       	ldi	r25, 0x00	; 0
     3d0:	a0 e2       	ldi	r26, 0x20	; 32
     3d2:	b2 e4       	ldi	r27, 0x42	; 66
     3d4:	89 8f       	std	Y+25, r24	; 0x19
     3d6:	9a 8f       	std	Y+26, r25	; 0x1a
     3d8:	ab 8f       	std	Y+27, r26	; 0x1b
     3da:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     3dc:	69 8d       	ldd	r22, Y+25	; 0x19
     3de:	7a 8d       	ldd	r23, Y+26	; 0x1a
     3e0:	8b 8d       	ldd	r24, Y+27	; 0x1b
     3e2:	9c 8d       	ldd	r25, Y+28	; 0x1c
     3e4:	20 e0       	ldi	r18, 0x00	; 0
     3e6:	30 e0       	ldi	r19, 0x00	; 0
     3e8:	4a e7       	ldi	r20, 0x7A	; 122
     3ea:	55 e4       	ldi	r21, 0x45	; 69
     3ec:	0e 94 50 09 	call	0x12a0	; 0x12a0 <__mulsf3>
     3f0:	dc 01       	movw	r26, r24
     3f2:	cb 01       	movw	r24, r22
     3f4:	8d 8b       	std	Y+21, r24	; 0x15
     3f6:	9e 8b       	std	Y+22, r25	; 0x16
     3f8:	af 8b       	std	Y+23, r26	; 0x17
     3fa:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
     3fc:	6d 89       	ldd	r22, Y+21	; 0x15
     3fe:	7e 89       	ldd	r23, Y+22	; 0x16
     400:	8f 89       	ldd	r24, Y+23	; 0x17
     402:	98 8d       	ldd	r25, Y+24	; 0x18
     404:	20 e0       	ldi	r18, 0x00	; 0
     406:	30 e0       	ldi	r19, 0x00	; 0
     408:	40 e8       	ldi	r20, 0x80	; 128
     40a:	5f e3       	ldi	r21, 0x3F	; 63
     40c:	0e 94 aa 0a 	call	0x1554	; 0x1554 <__ltsf2>
     410:	88 23       	and	r24, r24
     412:	2c f4       	brge	.+10     	; 0x41e <rechte_lijn+0x246>
		__ticks = 1;
     414:	81 e0       	ldi	r24, 0x01	; 1
     416:	90 e0       	ldi	r25, 0x00	; 0
     418:	9c 8b       	std	Y+20, r25	; 0x14
     41a:	8b 8b       	std	Y+19, r24	; 0x13
     41c:	3f c0       	rjmp	.+126    	; 0x49c <rechte_lijn+0x2c4>
	else if (__tmp > 65535)
     41e:	6d 89       	ldd	r22, Y+21	; 0x15
     420:	7e 89       	ldd	r23, Y+22	; 0x16
     422:	8f 89       	ldd	r24, Y+23	; 0x17
     424:	98 8d       	ldd	r25, Y+24	; 0x18
     426:	20 e0       	ldi	r18, 0x00	; 0
     428:	3f ef       	ldi	r19, 0xFF	; 255
     42a:	4f e7       	ldi	r20, 0x7F	; 127
     42c:	57 e4       	ldi	r21, 0x47	; 71
     42e:	0e 94 4a 0a 	call	0x1494	; 0x1494 <__gtsf2>
     432:	18 16       	cp	r1, r24
     434:	4c f5       	brge	.+82     	; 0x488 <rechte_lijn+0x2b0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     436:	69 8d       	ldd	r22, Y+25	; 0x19
     438:	7a 8d       	ldd	r23, Y+26	; 0x1a
     43a:	8b 8d       	ldd	r24, Y+27	; 0x1b
     43c:	9c 8d       	ldd	r25, Y+28	; 0x1c
     43e:	20 e0       	ldi	r18, 0x00	; 0
     440:	30 e0       	ldi	r19, 0x00	; 0
     442:	40 e2       	ldi	r20, 0x20	; 32
     444:	51 e4       	ldi	r21, 0x41	; 65
     446:	0e 94 50 09 	call	0x12a0	; 0x12a0 <__mulsf3>
     44a:	dc 01       	movw	r26, r24
     44c:	cb 01       	movw	r24, r22
     44e:	bc 01       	movw	r22, r24
     450:	cd 01       	movw	r24, r26
     452:	0e 94 7a 07 	call	0xef4	; 0xef4 <__fixunssfsi>
     456:	dc 01       	movw	r26, r24
     458:	cb 01       	movw	r24, r22
     45a:	9c 8b       	std	Y+20, r25	; 0x14
     45c:	8b 8b       	std	Y+19, r24	; 0x13
     45e:	0f c0       	rjmp	.+30     	; 0x47e <rechte_lijn+0x2a6>
     460:	80 e9       	ldi	r24, 0x90	; 144
     462:	91 e0       	ldi	r25, 0x01	; 1
     464:	9a 8b       	std	Y+18, r25	; 0x12
     466:	89 8b       	std	Y+17, r24	; 0x11
     468:	89 89       	ldd	r24, Y+17	; 0x11
     46a:	9a 89       	ldd	r25, Y+18	; 0x12
     46c:	01 97       	sbiw	r24, 0x01	; 1
     46e:	f1 f7       	brne	.-4      	; 0x46c <rechte_lijn+0x294>
     470:	9a 8b       	std	Y+18, r25	; 0x12
     472:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     474:	8b 89       	ldd	r24, Y+19	; 0x13
     476:	9c 89       	ldd	r25, Y+20	; 0x14
     478:	01 97       	sbiw	r24, 0x01	; 1
     47a:	9c 8b       	std	Y+20, r25	; 0x14
     47c:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     47e:	8b 89       	ldd	r24, Y+19	; 0x13
     480:	9c 89       	ldd	r25, Y+20	; 0x14
     482:	00 97       	sbiw	r24, 0x00	; 0
     484:	69 f7       	brne	.-38     	; 0x460 <rechte_lijn+0x288>
     486:	14 c0       	rjmp	.+40     	; 0x4b0 <rechte_lijn+0x2d8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     488:	6d 89       	ldd	r22, Y+21	; 0x15
     48a:	7e 89       	ldd	r23, Y+22	; 0x16
     48c:	8f 89       	ldd	r24, Y+23	; 0x17
     48e:	98 8d       	ldd	r25, Y+24	; 0x18
     490:	0e 94 7a 07 	call	0xef4	; 0xef4 <__fixunssfsi>
     494:	dc 01       	movw	r26, r24
     496:	cb 01       	movw	r24, r22
     498:	9c 8b       	std	Y+20, r25	; 0x14
     49a:	8b 8b       	std	Y+19, r24	; 0x13
     49c:	8b 89       	ldd	r24, Y+19	; 0x13
     49e:	9c 89       	ldd	r25, Y+20	; 0x14
     4a0:	98 8b       	std	Y+16, r25	; 0x10
     4a2:	8f 87       	std	Y+15, r24	; 0x0f
     4a4:	8f 85       	ldd	r24, Y+15	; 0x0f
     4a6:	98 89       	ldd	r25, Y+16	; 0x10
     4a8:	01 97       	sbiw	r24, 0x01	; 1
     4aa:	f1 f7       	brne	.-4      	; 0x4a8 <rechte_lijn+0x2d0>
     4ac:	98 8b       	std	Y+16, r25	; 0x10
     4ae:	8f 87       	std	Y+15, r24	; 0x0f
                _delay_ms(40);
            }
        }
        if (PINA &(1 << PA1))
        {
            for (int a = 170;(PINA &(1 << PA1)); a++)
     4b0:	8b a5       	ldd	r24, Y+43	; 0x2b
     4b2:	9c a5       	ldd	r25, Y+44	; 0x2c
     4b4:	01 96       	adiw	r24, 0x01	; 1
     4b6:	9c a7       	std	Y+44, r25	; 0x2c
     4b8:	8b a7       	std	Y+43, r24	; 0x2b
     4ba:	e0 e2       	ldi	r30, 0x20	; 32
     4bc:	f0 e0       	ldi	r31, 0x00	; 0
     4be:	80 81       	ld	r24, Z
     4c0:	88 2f       	mov	r24, r24
     4c2:	90 e0       	ldi	r25, 0x00	; 0
     4c4:	82 70       	andi	r24, 0x02	; 2
     4c6:	90 70       	andi	r25, 0x00	; 0
     4c8:	00 97       	sbiw	r24, 0x00	; 0
     4ca:	09 f0       	breq	.+2      	; 0x4ce <rechte_lijn+0x2f6>
     4cc:	79 cf       	rjmp	.-270    	; 0x3c0 <rechte_lijn+0x1e8>
                motor (a,160);
                _delay_ms(40);
            }
        }

		if (Grote_klok >= 180)//stel de boog begint te laat dan kun je de waarde veranderen nu 18.0 seconden
     4ce:	80 91 14 03 	lds	r24, 0x0314
     4d2:	90 91 15 03 	lds	r25, 0x0315
     4d6:	84 3b       	cpi	r24, 0xB4	; 180
     4d8:	91 05       	cpc	r25, r1
     4da:	24 f0       	brlt	.+8      	; 0x4e4 <rechte_lijn+0x30c>
		{
			vlag = 1;
     4dc:	81 e0       	ldi	r24, 0x01	; 1
     4de:	90 e0       	ldi	r25, 0x00	; 0
     4e0:	98 ab       	std	Y+48, r25	; 0x30
     4e2:	8f a7       	std	Y+47, r24	; 0x2f
		}
		if ((ultrasoon <= 20) && (vlag != 1))
     4e4:	80 91 08 03 	lds	r24, 0x0308
     4e8:	90 91 09 03 	lds	r25, 0x0309
     4ec:	a0 91 0a 03 	lds	r26, 0x030A
     4f0:	b0 91 0b 03 	lds	r27, 0x030B
     4f4:	bc 01       	movw	r22, r24
     4f6:	cd 01       	movw	r24, r26
     4f8:	20 e0       	ldi	r18, 0x00	; 0
     4fa:	30 e0       	ldi	r19, 0x00	; 0
     4fc:	40 ea       	ldi	r20, 0xA0	; 160
     4fe:	51 e4       	ldi	r21, 0x41	; 65
     500:	0e 94 da 0a 	call	0x15b4	; 0x15b4 <__lesf2>
     504:	18 16       	cp	r1, r24
     506:	0c f4       	brge	.+2      	; 0x50a <rechte_lijn+0x332>
     508:	93 c0       	rjmp	.+294    	; 0x630 <rechte_lijn+0x458>
     50a:	8f a5       	ldd	r24, Y+47	; 0x2f
     50c:	98 a9       	ldd	r25, Y+48	; 0x30
     50e:	81 30       	cpi	r24, 0x01	; 1
     510:	91 05       	cpc	r25, r1
     512:	09 f4       	brne	.+2      	; 0x516 <rechte_lijn+0x33e>
     514:	8d c0       	rjmp	.+282    	; 0x630 <rechte_lijn+0x458>
		{
			motor(0,0);
     516:	80 e0       	ldi	r24, 0x00	; 0
     518:	90 e0       	ldi	r25, 0x00	; 0
     51a:	60 e0       	ldi	r22, 0x00	; 0
     51c:	70 e0       	ldi	r23, 0x00	; 0
     51e:	0e 94 2b 07 	call	0xe56	; 0xe56 <motor>
     522:	86 c0       	rjmp	.+268    	; 0x630 <rechte_lijn+0x458>
		}
		}
		else
		{
			motor(0,0);
     524:	80 e0       	ldi	r24, 0x00	; 0
     526:	90 e0       	ldi	r25, 0x00	; 0
     528:	60 e0       	ldi	r22, 0x00	; 0
     52a:	70 e0       	ldi	r23, 0x00	; 0
     52c:	0e 94 2b 07 	call	0xe56	; 0xe56 <motor>
			PORTH |= (1 << PH4);
     530:	a2 e0       	ldi	r26, 0x02	; 2
     532:	b1 e0       	ldi	r27, 0x01	; 1
     534:	e2 e0       	ldi	r30, 0x02	; 2
     536:	f1 e0       	ldi	r31, 0x01	; 1
     538:	80 81       	ld	r24, Z
     53a:	80 61       	ori	r24, 0x10	; 16
     53c:	8c 93       	st	X, r24
     53e:	80 e0       	ldi	r24, 0x00	; 0
     540:	90 e0       	ldi	r25, 0x00	; 0
     542:	aa ef       	ldi	r26, 0xFA	; 250
     544:	b3 e4       	ldi	r27, 0x43	; 67
     546:	8b 87       	std	Y+11, r24	; 0x0b
     548:	9c 87       	std	Y+12, r25	; 0x0c
     54a:	ad 87       	std	Y+13, r26	; 0x0d
     54c:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     54e:	6b 85       	ldd	r22, Y+11	; 0x0b
     550:	7c 85       	ldd	r23, Y+12	; 0x0c
     552:	8d 85       	ldd	r24, Y+13	; 0x0d
     554:	9e 85       	ldd	r25, Y+14	; 0x0e
     556:	20 e0       	ldi	r18, 0x00	; 0
     558:	30 e0       	ldi	r19, 0x00	; 0
     55a:	4a e7       	ldi	r20, 0x7A	; 122
     55c:	55 e4       	ldi	r21, 0x45	; 69
     55e:	0e 94 50 09 	call	0x12a0	; 0x12a0 <__mulsf3>
     562:	dc 01       	movw	r26, r24
     564:	cb 01       	movw	r24, r22
     566:	8f 83       	std	Y+7, r24	; 0x07
     568:	98 87       	std	Y+8, r25	; 0x08
     56a:	a9 87       	std	Y+9, r26	; 0x09
     56c:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     56e:	6f 81       	ldd	r22, Y+7	; 0x07
     570:	78 85       	ldd	r23, Y+8	; 0x08
     572:	89 85       	ldd	r24, Y+9	; 0x09
     574:	9a 85       	ldd	r25, Y+10	; 0x0a
     576:	20 e0       	ldi	r18, 0x00	; 0
     578:	30 e0       	ldi	r19, 0x00	; 0
     57a:	40 e8       	ldi	r20, 0x80	; 128
     57c:	5f e3       	ldi	r21, 0x3F	; 63
     57e:	0e 94 aa 0a 	call	0x1554	; 0x1554 <__ltsf2>
     582:	88 23       	and	r24, r24
     584:	2c f4       	brge	.+10     	; 0x590 <rechte_lijn+0x3b8>
		__ticks = 1;
     586:	81 e0       	ldi	r24, 0x01	; 1
     588:	90 e0       	ldi	r25, 0x00	; 0
     58a:	9e 83       	std	Y+6, r25	; 0x06
     58c:	8d 83       	std	Y+5, r24	; 0x05
     58e:	3f c0       	rjmp	.+126    	; 0x60e <rechte_lijn+0x436>
	else if (__tmp > 65535)
     590:	6f 81       	ldd	r22, Y+7	; 0x07
     592:	78 85       	ldd	r23, Y+8	; 0x08
     594:	89 85       	ldd	r24, Y+9	; 0x09
     596:	9a 85       	ldd	r25, Y+10	; 0x0a
     598:	20 e0       	ldi	r18, 0x00	; 0
     59a:	3f ef       	ldi	r19, 0xFF	; 255
     59c:	4f e7       	ldi	r20, 0x7F	; 127
     59e:	57 e4       	ldi	r21, 0x47	; 71
     5a0:	0e 94 4a 0a 	call	0x1494	; 0x1494 <__gtsf2>
     5a4:	18 16       	cp	r1, r24
     5a6:	4c f5       	brge	.+82     	; 0x5fa <rechte_lijn+0x422>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     5a8:	6b 85       	ldd	r22, Y+11	; 0x0b
     5aa:	7c 85       	ldd	r23, Y+12	; 0x0c
     5ac:	8d 85       	ldd	r24, Y+13	; 0x0d
     5ae:	9e 85       	ldd	r25, Y+14	; 0x0e
     5b0:	20 e0       	ldi	r18, 0x00	; 0
     5b2:	30 e0       	ldi	r19, 0x00	; 0
     5b4:	40 e2       	ldi	r20, 0x20	; 32
     5b6:	51 e4       	ldi	r21, 0x41	; 65
     5b8:	0e 94 50 09 	call	0x12a0	; 0x12a0 <__mulsf3>
     5bc:	dc 01       	movw	r26, r24
     5be:	cb 01       	movw	r24, r22
     5c0:	bc 01       	movw	r22, r24
     5c2:	cd 01       	movw	r24, r26
     5c4:	0e 94 7a 07 	call	0xef4	; 0xef4 <__fixunssfsi>
     5c8:	dc 01       	movw	r26, r24
     5ca:	cb 01       	movw	r24, r22
     5cc:	9e 83       	std	Y+6, r25	; 0x06
     5ce:	8d 83       	std	Y+5, r24	; 0x05
     5d0:	0f c0       	rjmp	.+30     	; 0x5f0 <rechte_lijn+0x418>
     5d2:	80 e9       	ldi	r24, 0x90	; 144
     5d4:	91 e0       	ldi	r25, 0x01	; 1
     5d6:	9c 83       	std	Y+4, r25	; 0x04
     5d8:	8b 83       	std	Y+3, r24	; 0x03
     5da:	8b 81       	ldd	r24, Y+3	; 0x03
     5dc:	9c 81       	ldd	r25, Y+4	; 0x04
     5de:	01 97       	sbiw	r24, 0x01	; 1
     5e0:	f1 f7       	brne	.-4      	; 0x5de <rechte_lijn+0x406>
     5e2:	9c 83       	std	Y+4, r25	; 0x04
     5e4:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     5e6:	8d 81       	ldd	r24, Y+5	; 0x05
     5e8:	9e 81       	ldd	r25, Y+6	; 0x06
     5ea:	01 97       	sbiw	r24, 0x01	; 1
     5ec:	9e 83       	std	Y+6, r25	; 0x06
     5ee:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     5f0:	8d 81       	ldd	r24, Y+5	; 0x05
     5f2:	9e 81       	ldd	r25, Y+6	; 0x06
     5f4:	00 97       	sbiw	r24, 0x00	; 0
     5f6:	69 f7       	brne	.-38     	; 0x5d2 <rechte_lijn+0x3fa>
     5f8:	14 c0       	rjmp	.+40     	; 0x622 <rechte_lijn+0x44a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     5fa:	6f 81       	ldd	r22, Y+7	; 0x07
     5fc:	78 85       	ldd	r23, Y+8	; 0x08
     5fe:	89 85       	ldd	r24, Y+9	; 0x09
     600:	9a 85       	ldd	r25, Y+10	; 0x0a
     602:	0e 94 7a 07 	call	0xef4	; 0xef4 <__fixunssfsi>
     606:	dc 01       	movw	r26, r24
     608:	cb 01       	movw	r24, r22
     60a:	9e 83       	std	Y+6, r25	; 0x06
     60c:	8d 83       	std	Y+5, r24	; 0x05
     60e:	8d 81       	ldd	r24, Y+5	; 0x05
     610:	9e 81       	ldd	r25, Y+6	; 0x06
     612:	9a 83       	std	Y+2, r25	; 0x02
     614:	89 83       	std	Y+1, r24	; 0x01
     616:	89 81       	ldd	r24, Y+1	; 0x01
     618:	9a 81       	ldd	r25, Y+2	; 0x02
     61a:	01 97       	sbiw	r24, 0x01	; 1
     61c:	f1 f7       	brne	.-4      	; 0x61a <rechte_lijn+0x442>
     61e:	9a 83       	std	Y+2, r25	; 0x02
     620:	89 83       	std	Y+1, r24	; 0x01
			_delay_ms(500);
			PORTH &= ~(1 << PH4);
     622:	a2 e0       	ldi	r26, 0x02	; 2
     624:	b1 e0       	ldi	r27, 0x01	; 1
     626:	e2 e0       	ldi	r30, 0x02	; 2
     628:	f1 e0       	ldi	r31, 0x01	; 1
     62a:	80 81       	ld	r24, Z
     62c:	8f 7e       	andi	r24, 0xEF	; 239
     62e:	8c 93       	st	X, r24
void rechte_lijn(void)
{
	int vlag;
	TCNT1 = 0;
	Grote_klok = 0;
    while ((ultrasoon <= 37) && (vlag == 1))
     630:	80 91 08 03 	lds	r24, 0x0308
     634:	90 91 09 03 	lds	r25, 0x0309
     638:	a0 91 0a 03 	lds	r26, 0x030A
     63c:	b0 91 0b 03 	lds	r27, 0x030B
     640:	19 aa       	std	Y+49, r1	; 0x31
     642:	bc 01       	movw	r22, r24
     644:	cd 01       	movw	r24, r26
     646:	20 e0       	ldi	r18, 0x00	; 0
     648:	30 e0       	ldi	r19, 0x00	; 0
     64a:	44 e1       	ldi	r20, 0x14	; 20
     64c:	52 e4       	ldi	r21, 0x42	; 66
     64e:	0e 94 da 0a 	call	0x15b4	; 0x15b4 <__lesf2>
     652:	18 16       	cp	r1, r24
     654:	14 f0       	brlt	.+4      	; 0x65a <rechte_lijn+0x482>
     656:	81 e0       	ldi	r24, 0x01	; 1
     658:	89 ab       	std	Y+49, r24	; 0x31
     65a:	81 e0       	ldi	r24, 0x01	; 1
     65c:	99 a9       	ldd	r25, Y+49	; 0x31
     65e:	89 27       	eor	r24, r25
     660:	88 23       	and	r24, r24
     662:	31 f4       	brne	.+12     	; 0x670 <rechte_lijn+0x498>
     664:	8f a5       	ldd	r24, Y+47	; 0x2f
     666:	98 a9       	ldd	r25, Y+48	; 0x30
     668:	81 30       	cpi	r24, 0x01	; 1
     66a:	91 05       	cpc	r25, r1
     66c:	09 f4       	brne	.+2      	; 0x670 <rechte_lijn+0x498>
     66e:	c7 cd       	rjmp	.-1138   	; 0x1fe <rechte_lijn+0x26>
			_delay_ms(500);
			PORTH &= ~(1 << PH4);
		}

    }
}
     670:	e3 96       	adiw	r28, 0x33	; 51
     672:	0f b6       	in	r0, 0x3f	; 63
     674:	f8 94       	cli
     676:	de bf       	out	0x3e, r29	; 62
     678:	0f be       	out	0x3f, r0	; 63
     67a:	cd bf       	out	0x3d, r28	; 61
     67c:	cf 91       	pop	r28
     67e:	df 91       	pop	r29
     680:	08 95       	ret

00000682 <bocht_links>:

void bocht_links (void)
{
     682:	df 93       	push	r29
     684:	cf 93       	push	r28
     686:	0f 92       	push	r0
     688:	0f 92       	push	r0
     68a:	cd b7       	in	r28, 0x3d	; 61
     68c:	de b7       	in	r29, 0x3e	; 62
	int vlag;
	TCNT1 = 0;
     68e:	e4 e8       	ldi	r30, 0x84	; 132
     690:	f0 e0       	ldi	r31, 0x00	; 0
     692:	11 82       	std	Z+1, r1	; 0x01
     694:	10 82       	st	Z, r1
	Grote_klok = 0;
     696:	10 92 15 03 	sts	0x0315, r1
     69a:	10 92 14 03 	sts	0x0314, r1
     69e:	45 c0       	rjmp	.+138    	; 0x72a <bocht_links+0xa8>
	while ((PINA &(1 << PA0)) && (vlag == 1))
	{
		motor(35,170); //bocht naar rechts maken
     6a0:	83 e2       	ldi	r24, 0x23	; 35
     6a2:	90 e0       	ldi	r25, 0x00	; 0
     6a4:	6a ea       	ldi	r22, 0xAA	; 170
     6a6:	70 e0       	ldi	r23, 0x00	; 0
     6a8:	0e 94 2b 07 	call	0xe56	; 0xe56 <motor>
		if ((PINA &(1 << PA0)) && (Grote_klok <= 11.3)) //waarde
     6ac:	e0 e2       	ldi	r30, 0x20	; 32
     6ae:	f0 e0       	ldi	r31, 0x00	; 0
     6b0:	80 81       	ld	r24, Z
     6b2:	88 2f       	mov	r24, r24
     6b4:	90 e0       	ldi	r25, 0x00	; 0
     6b6:	81 70       	andi	r24, 0x01	; 1
     6b8:	90 70       	andi	r25, 0x00	; 0
     6ba:	88 23       	and	r24, r24
     6bc:	d1 f0       	breq	.+52     	; 0x6f2 <bocht_links+0x70>
     6be:	80 91 14 03 	lds	r24, 0x0314
     6c2:	90 91 15 03 	lds	r25, 0x0315
     6c6:	aa 27       	eor	r26, r26
     6c8:	97 fd       	sbrc	r25, 7
     6ca:	a0 95       	com	r26
     6cc:	ba 2f       	mov	r27, r26
     6ce:	bc 01       	movw	r22, r24
     6d0:	cd 01       	movw	r24, r26
     6d2:	0e 94 0a 0b 	call	0x1614	; 0x1614 <__floatsisf>
     6d6:	dc 01       	movw	r26, r24
     6d8:	cb 01       	movw	r24, r22
     6da:	bc 01       	movw	r22, r24
     6dc:	cd 01       	movw	r24, r26
     6de:	2d ec       	ldi	r18, 0xCD	; 205
     6e0:	3c ec       	ldi	r19, 0xCC	; 204
     6e2:	44 e3       	ldi	r20, 0x34	; 52
     6e4:	51 e4       	ldi	r21, 0x41	; 65
     6e6:	0e 94 da 0a 	call	0x15b4	; 0x15b4 <__lesf2>
     6ea:	18 16       	cp	r1, r24
     6ec:	14 f0       	brlt	.+4      	; 0x6f2 <bocht_links+0x70>
		{
			error();
     6ee:	0e 94 17 04 	call	0x82e	; 0x82e <error>
		}
		if (Grote_klok >= 11.3)
     6f2:	80 91 14 03 	lds	r24, 0x0314
     6f6:	90 91 15 03 	lds	r25, 0x0315
     6fa:	aa 27       	eor	r26, r26
     6fc:	97 fd       	sbrc	r25, 7
     6fe:	a0 95       	com	r26
     700:	ba 2f       	mov	r27, r26
     702:	bc 01       	movw	r22, r24
     704:	cd 01       	movw	r24, r26
     706:	0e 94 0a 0b 	call	0x1614	; 0x1614 <__floatsisf>
     70a:	dc 01       	movw	r26, r24
     70c:	cb 01       	movw	r24, r22
     70e:	bc 01       	movw	r22, r24
     710:	cd 01       	movw	r24, r26
     712:	2d ec       	ldi	r18, 0xCD	; 205
     714:	3c ec       	ldi	r19, 0xCC	; 204
     716:	44 e3       	ldi	r20, 0x34	; 52
     718:	51 e4       	ldi	r21, 0x41	; 65
     71a:	0e 94 7a 0a 	call	0x14f4	; 0x14f4 <__gesf2>
     71e:	88 23       	and	r24, r24
     720:	24 f0       	brlt	.+8      	; 0x72a <bocht_links+0xa8>
		{
			vlag = 1;
     722:	81 e0       	ldi	r24, 0x01	; 1
     724:	90 e0       	ldi	r25, 0x00	; 0
     726:	9a 83       	std	Y+2, r25	; 0x02
     728:	89 83       	std	Y+1, r24	; 0x01
void bocht_links (void)
{
	int vlag;
	TCNT1 = 0;
	Grote_klok = 0;
	while ((PINA &(1 << PA0)) && (vlag == 1))
     72a:	e0 e2       	ldi	r30, 0x20	; 32
     72c:	f0 e0       	ldi	r31, 0x00	; 0
     72e:	80 81       	ld	r24, Z
     730:	88 2f       	mov	r24, r24
     732:	90 e0       	ldi	r25, 0x00	; 0
     734:	81 70       	andi	r24, 0x01	; 1
     736:	90 70       	andi	r25, 0x00	; 0
     738:	98 2f       	mov	r25, r24
     73a:	81 e0       	ldi	r24, 0x01	; 1
     73c:	89 27       	eor	r24, r25
     73e:	88 23       	and	r24, r24
     740:	31 f4       	brne	.+12     	; 0x74e <bocht_links+0xcc>
     742:	89 81       	ldd	r24, Y+1	; 0x01
     744:	9a 81       	ldd	r25, Y+2	; 0x02
     746:	81 30       	cpi	r24, 0x01	; 1
     748:	91 05       	cpc	r25, r1
     74a:	09 f4       	brne	.+2      	; 0x74e <bocht_links+0xcc>
     74c:	a9 cf       	rjmp	.-174    	; 0x6a0 <bocht_links+0x1e>
			vlag = 1;
		}

	}

}
     74e:	0f 90       	pop	r0
     750:	0f 90       	pop	r0
     752:	cf 91       	pop	r28
     754:	df 91       	pop	r29
     756:	08 95       	ret

00000758 <bocht_rechts>:

void bocht_rechts (void)
{
     758:	df 93       	push	r29
     75a:	cf 93       	push	r28
     75c:	0f 92       	push	r0
     75e:	0f 92       	push	r0
     760:	cd b7       	in	r28, 0x3d	; 61
     762:	de b7       	in	r29, 0x3e	; 62
	int vlag;
	TCNT1 = 0;
     764:	e4 e8       	ldi	r30, 0x84	; 132
     766:	f0 e0       	ldi	r31, 0x00	; 0
     768:	11 82       	std	Z+1, r1	; 0x01
     76a:	10 82       	st	Z, r1
	Grote_klok = 0;
     76c:	10 92 15 03 	sts	0x0315, r1
     770:	10 92 14 03 	sts	0x0314, r1
     774:	45 c0       	rjmp	.+138    	; 0x800 <bocht_rechts+0xa8>
	while ((PINA &(1 << PA0)) && (vlag == 1))
	{
		motor(170,35); //bocht naar rechts maken
     776:	8a ea       	ldi	r24, 0xAA	; 170
     778:	90 e0       	ldi	r25, 0x00	; 0
     77a:	63 e2       	ldi	r22, 0x23	; 35
     77c:	70 e0       	ldi	r23, 0x00	; 0
     77e:	0e 94 2b 07 	call	0xe56	; 0xe56 <motor>
		if ((PINA &(1 << PA0)) && (Grote_klok <= 11.3)) //waarde
     782:	e0 e2       	ldi	r30, 0x20	; 32
     784:	f0 e0       	ldi	r31, 0x00	; 0
     786:	80 81       	ld	r24, Z
     788:	88 2f       	mov	r24, r24
     78a:	90 e0       	ldi	r25, 0x00	; 0
     78c:	81 70       	andi	r24, 0x01	; 1
     78e:	90 70       	andi	r25, 0x00	; 0
     790:	88 23       	and	r24, r24
     792:	d1 f0       	breq	.+52     	; 0x7c8 <bocht_rechts+0x70>
     794:	80 91 14 03 	lds	r24, 0x0314
     798:	90 91 15 03 	lds	r25, 0x0315
     79c:	aa 27       	eor	r26, r26
     79e:	97 fd       	sbrc	r25, 7
     7a0:	a0 95       	com	r26
     7a2:	ba 2f       	mov	r27, r26
     7a4:	bc 01       	movw	r22, r24
     7a6:	cd 01       	movw	r24, r26
     7a8:	0e 94 0a 0b 	call	0x1614	; 0x1614 <__floatsisf>
     7ac:	dc 01       	movw	r26, r24
     7ae:	cb 01       	movw	r24, r22
     7b0:	bc 01       	movw	r22, r24
     7b2:	cd 01       	movw	r24, r26
     7b4:	2d ec       	ldi	r18, 0xCD	; 205
     7b6:	3c ec       	ldi	r19, 0xCC	; 204
     7b8:	44 e3       	ldi	r20, 0x34	; 52
     7ba:	51 e4       	ldi	r21, 0x41	; 65
     7bc:	0e 94 da 0a 	call	0x15b4	; 0x15b4 <__lesf2>
     7c0:	18 16       	cp	r1, r24
     7c2:	14 f0       	brlt	.+4      	; 0x7c8 <bocht_rechts+0x70>
		{
			error();
     7c4:	0e 94 17 04 	call	0x82e	; 0x82e <error>
		}
		if (Grote_klok >= 11.3)
     7c8:	80 91 14 03 	lds	r24, 0x0314
     7cc:	90 91 15 03 	lds	r25, 0x0315
     7d0:	aa 27       	eor	r26, r26
     7d2:	97 fd       	sbrc	r25, 7
     7d4:	a0 95       	com	r26
     7d6:	ba 2f       	mov	r27, r26
     7d8:	bc 01       	movw	r22, r24
     7da:	cd 01       	movw	r24, r26
     7dc:	0e 94 0a 0b 	call	0x1614	; 0x1614 <__floatsisf>
     7e0:	dc 01       	movw	r26, r24
     7e2:	cb 01       	movw	r24, r22
     7e4:	bc 01       	movw	r22, r24
     7e6:	cd 01       	movw	r24, r26
     7e8:	2d ec       	ldi	r18, 0xCD	; 205
     7ea:	3c ec       	ldi	r19, 0xCC	; 204
     7ec:	44 e3       	ldi	r20, 0x34	; 52
     7ee:	51 e4       	ldi	r21, 0x41	; 65
     7f0:	0e 94 7a 0a 	call	0x14f4	; 0x14f4 <__gesf2>
     7f4:	88 23       	and	r24, r24
     7f6:	24 f0       	brlt	.+8      	; 0x800 <bocht_rechts+0xa8>
		{
			vlag = 1;
     7f8:	81 e0       	ldi	r24, 0x01	; 1
     7fa:	90 e0       	ldi	r25, 0x00	; 0
     7fc:	9a 83       	std	Y+2, r25	; 0x02
     7fe:	89 83       	std	Y+1, r24	; 0x01
void bocht_rechts (void)
{
	int vlag;
	TCNT1 = 0;
	Grote_klok = 0;
	while ((PINA &(1 << PA0)) && (vlag == 1))
     800:	e0 e2       	ldi	r30, 0x20	; 32
     802:	f0 e0       	ldi	r31, 0x00	; 0
     804:	80 81       	ld	r24, Z
     806:	88 2f       	mov	r24, r24
     808:	90 e0       	ldi	r25, 0x00	; 0
     80a:	81 70       	andi	r24, 0x01	; 1
     80c:	90 70       	andi	r25, 0x00	; 0
     80e:	98 2f       	mov	r25, r24
     810:	81 e0       	ldi	r24, 0x01	; 1
     812:	89 27       	eor	r24, r25
     814:	88 23       	and	r24, r24
     816:	31 f4       	brne	.+12     	; 0x824 <bocht_rechts+0xcc>
     818:	89 81       	ldd	r24, Y+1	; 0x01
     81a:	9a 81       	ldd	r25, Y+2	; 0x02
     81c:	81 30       	cpi	r24, 0x01	; 1
     81e:	91 05       	cpc	r25, r1
     820:	09 f4       	brne	.+2      	; 0x824 <bocht_rechts+0xcc>
     822:	a9 cf       	rjmp	.-174    	; 0x776 <bocht_rechts+0x1e>
			vlag = 1;
		}

	}

}
     824:	0f 90       	pop	r0
     826:	0f 90       	pop	r0
     828:	cf 91       	pop	r28
     82a:	df 91       	pop	r29
     82c:	08 95       	ret

0000082e <error>:

void error (void) //om een probleem optelossen todat we een betere oplossing hebben of niet
{
     82e:	df 93       	push	r29
     830:	cf 93       	push	r28
     832:	cd b7       	in	r28, 0x3d	; 61
     834:	de b7       	in	r29, 0x3e	; 62
	while (1)
	{
	motor(0,0);
     836:	80 e0       	ldi	r24, 0x00	; 0
     838:	90 e0       	ldi	r25, 0x00	; 0
     83a:	60 e0       	ldi	r22, 0x00	; 0
     83c:	70 e0       	ldi	r23, 0x00	; 0
     83e:	0e 94 2b 07 	call	0xe56	; 0xe56 <motor>
     842:	f9 cf       	rjmp	.-14     	; 0x836 <error+0x8>

00000844 <__vector_17>:
uint16_t waarde2;
uint32_t counts;
int ultasoon_nr;

ISR(TIMER1_COMPA_vect)
{
     844:	1f 92       	push	r1
     846:	0f 92       	push	r0
     848:	0f b6       	in	r0, 0x3f	; 63
     84a:	0f 92       	push	r0
     84c:	00 90 5b 00 	lds	r0, 0x005B
     850:	0f 92       	push	r0
     852:	11 24       	eor	r1, r1
     854:	8f 93       	push	r24
     856:	9f 93       	push	r25
     858:	ef 93       	push	r30
     85a:	ff 93       	push	r31
     85c:	df 93       	push	r29
     85e:	cf 93       	push	r28
     860:	cd b7       	in	r28, 0x3d	; 61
     862:	de b7       	in	r29, 0x3e	; 62
    TCNT1 = 0;
     864:	e4 e8       	ldi	r30, 0x84	; 132
     866:	f0 e0       	ldi	r31, 0x00	; 0
     868:	11 82       	std	Z+1, r1	; 0x01
     86a:	10 82       	st	Z, r1
    Grote_klok++;
     86c:	80 91 14 03 	lds	r24, 0x0314
     870:	90 91 15 03 	lds	r25, 0x0315
     874:	01 96       	adiw	r24, 0x01	; 1
     876:	90 93 15 03 	sts	0x0315, r25
     87a:	80 93 14 03 	sts	0x0314, r24
}
     87e:	cf 91       	pop	r28
     880:	df 91       	pop	r29
     882:	ff 91       	pop	r31
     884:	ef 91       	pop	r30
     886:	9f 91       	pop	r25
     888:	8f 91       	pop	r24
     88a:	0f 90       	pop	r0
     88c:	00 92 5b 00 	sts	0x005B, r0
     890:	0f 90       	pop	r0
     892:	0f be       	out	0x3f, r0	; 63
     894:	0f 90       	pop	r0
     896:	1f 90       	pop	r1
     898:	18 95       	reti

0000089a <__vector_41>:

ISR (TIMER4_CAPT_vect)
{
     89a:	1f 92       	push	r1
     89c:	0f 92       	push	r0
     89e:	0f b6       	in	r0, 0x3f	; 63
     8a0:	0f 92       	push	r0
     8a2:	00 90 5b 00 	lds	r0, 0x005B
     8a6:	0f 92       	push	r0
     8a8:	11 24       	eor	r1, r1
     8aa:	ef 92       	push	r14
     8ac:	ff 92       	push	r15
     8ae:	0f 93       	push	r16
     8b0:	1f 93       	push	r17
     8b2:	2f 93       	push	r18
     8b4:	3f 93       	push	r19
     8b6:	4f 93       	push	r20
     8b8:	5f 93       	push	r21
     8ba:	6f 93       	push	r22
     8bc:	7f 93       	push	r23
     8be:	8f 93       	push	r24
     8c0:	9f 93       	push	r25
     8c2:	af 93       	push	r26
     8c4:	bf 93       	push	r27
     8c6:	ef 93       	push	r30
     8c8:	ff 93       	push	r31
     8ca:	df 93       	push	r29
     8cc:	cf 93       	push	r28
     8ce:	cd b7       	in	r28, 0x3d	; 61
     8d0:	de b7       	in	r29, 0x3e	; 62
    if (TCCR4B & (1<<ICES4)) // On rising edge
     8d2:	e1 ea       	ldi	r30, 0xA1	; 161
     8d4:	f0 e0       	ldi	r31, 0x00	; 0
     8d6:	80 81       	ld	r24, Z
     8d8:	88 2f       	mov	r24, r24
     8da:	90 e0       	ldi	r25, 0x00	; 0
     8dc:	80 74       	andi	r24, 0x40	; 64
     8de:	90 70       	andi	r25, 0x00	; 0
     8e0:	00 97       	sbiw	r24, 0x00	; 0
     8e2:	81 f0       	breq	.+32     	; 0x904 <__vector_41+0x6a>
    {
        TCCR4B &= ~(1<<ICES4); // Next time detect falling edge
     8e4:	a1 ea       	ldi	r26, 0xA1	; 161
     8e6:	b0 e0       	ldi	r27, 0x00	; 0
     8e8:	e1 ea       	ldi	r30, 0xA1	; 161
     8ea:	f0 e0       	ldi	r31, 0x00	; 0
     8ec:	80 81       	ld	r24, Z
     8ee:	8f 7b       	andi	r24, 0xBF	; 191
     8f0:	8c 93       	st	X, r24
        waarde1 = TCNT4; // Save current count
     8f2:	e4 ea       	ldi	r30, 0xA4	; 164
     8f4:	f0 e0       	ldi	r31, 0x00	; 0
     8f6:	80 81       	ld	r24, Z
     8f8:	91 81       	ldd	r25, Z+1	; 0x01
     8fa:	90 93 1f 03 	sts	0x031F, r25
     8fe:	80 93 1e 03 	sts	0x031E, r24
     902:	aa c0       	rjmp	.+340    	; 0xa58 <__vector_41+0x1be>
    }
    else // On falling edge
    {
        TCCR4B |= 0; // geen interrupts meer
     904:	a1 ea       	ldi	r26, 0xA1	; 161
     906:	b0 e0       	ldi	r27, 0x00	; 0
     908:	e1 ea       	ldi	r30, 0xA1	; 161
     90a:	f0 e0       	ldi	r31, 0x00	; 0
     90c:	80 81       	ld	r24, Z
     90e:	8c 93       	st	X, r24
        waarde2 = TCNT4; // Save current count
     910:	e4 ea       	ldi	r30, 0xA4	; 164
     912:	f0 e0       	ldi	r31, 0x00	; 0
     914:	80 81       	ld	r24, Z
     916:	91 81       	ldd	r25, Z+1	; 0x01
     918:	90 93 19 03 	sts	0x0319, r25
     91c:	80 93 18 03 	sts	0x0318, r24
        counts = (uint32_t)waarde1 - (uint32_t)waarde2;
     920:	80 91 1e 03 	lds	r24, 0x031E
     924:	90 91 1f 03 	lds	r25, 0x031F
     928:	9c 01       	movw	r18, r24
     92a:	40 e0       	ldi	r20, 0x00	; 0
     92c:	50 e0       	ldi	r21, 0x00	; 0
     92e:	80 91 18 03 	lds	r24, 0x0318
     932:	90 91 19 03 	lds	r25, 0x0319
     936:	cc 01       	movw	r24, r24
     938:	a0 e0       	ldi	r26, 0x00	; 0
     93a:	b0 e0       	ldi	r27, 0x00	; 0
     93c:	79 01       	movw	r14, r18
     93e:	8a 01       	movw	r16, r20
     940:	e8 1a       	sub	r14, r24
     942:	f9 0a       	sbc	r15, r25
     944:	0a 0b       	sbc	r16, r26
     946:	1b 0b       	sbc	r17, r27
     948:	d8 01       	movw	r26, r16
     94a:	c7 01       	movw	r24, r14
     94c:	80 93 1a 03 	sts	0x031A, r24
     950:	90 93 1b 03 	sts	0x031B, r25
     954:	a0 93 1c 03 	sts	0x031C, r26
     958:	b0 93 1d 03 	sts	0x031D, r27
		if ((ultasoon_nr = 3))
     95c:	83 e0       	ldi	r24, 0x03	; 3
     95e:	90 e0       	ldi	r25, 0x00	; 0
     960:	90 93 17 03 	sts	0x0317, r25
     964:	80 93 16 03 	sts	0x0316, r24
		{
        ultrasoon = (counts/2)*0.01715; //snelheid van geluid keer de tijd die de klok vertegenwoordigd (16/8 = 2 1/2E6= 5E-7)
     968:	80 91 1a 03 	lds	r24, 0x031A
     96c:	90 91 1b 03 	lds	r25, 0x031B
     970:	a0 91 1c 03 	lds	r26, 0x031C
     974:	b0 91 1d 03 	lds	r27, 0x031D
     978:	b6 95       	lsr	r27
     97a:	a7 95       	ror	r26
     97c:	97 95       	ror	r25
     97e:	87 95       	ror	r24
     980:	bc 01       	movw	r22, r24
     982:	cd 01       	movw	r24, r26
     984:	0e 94 bc 0b 	call	0x1778	; 0x1778 <__floatunsisf>
     988:	dc 01       	movw	r26, r24
     98a:	cb 01       	movw	r24, r22
     98c:	bc 01       	movw	r22, r24
     98e:	cd 01       	movw	r24, r26
     990:	28 e2       	ldi	r18, 0x28	; 40
     992:	3e e7       	ldi	r19, 0x7E	; 126
     994:	4c e8       	ldi	r20, 0x8C	; 140
     996:	5c e3       	ldi	r21, 0x3C	; 60
     998:	0e 94 50 09 	call	0x12a0	; 0x12a0 <__mulsf3>
     99c:	dc 01       	movw	r26, r24
     99e:	cb 01       	movw	r24, r22
     9a0:	80 93 08 03 	sts	0x0308, r24
     9a4:	90 93 09 03 	sts	0x0309, r25
     9a8:	a0 93 0a 03 	sts	0x030A, r26
     9ac:	b0 93 0b 03 	sts	0x030B, r27
		}
		if ((ultasoon_nr = 1))
     9b0:	81 e0       	ldi	r24, 0x01	; 1
     9b2:	90 e0       	ldi	r25, 0x00	; 0
     9b4:	90 93 17 03 	sts	0x0317, r25
     9b8:	80 93 16 03 	sts	0x0316, r24
		{
        ultrasoon_links = (counts/2)*0.01715; //snelheid van geluid keer de tijd die de klok vertegenwoordigd (16/8 = 2 1/2E6= 5E-7)
     9bc:	80 91 1a 03 	lds	r24, 0x031A
     9c0:	90 91 1b 03 	lds	r25, 0x031B
     9c4:	a0 91 1c 03 	lds	r26, 0x031C
     9c8:	b0 91 1d 03 	lds	r27, 0x031D
     9cc:	b6 95       	lsr	r27
     9ce:	a7 95       	ror	r26
     9d0:	97 95       	ror	r25
     9d2:	87 95       	ror	r24
     9d4:	bc 01       	movw	r22, r24
     9d6:	cd 01       	movw	r24, r26
     9d8:	0e 94 bc 0b 	call	0x1778	; 0x1778 <__floatunsisf>
     9dc:	dc 01       	movw	r26, r24
     9de:	cb 01       	movw	r24, r22
     9e0:	bc 01       	movw	r22, r24
     9e2:	cd 01       	movw	r24, r26
     9e4:	28 e2       	ldi	r18, 0x28	; 40
     9e6:	3e e7       	ldi	r19, 0x7E	; 126
     9e8:	4c e8       	ldi	r20, 0x8C	; 140
     9ea:	5c e3       	ldi	r21, 0x3C	; 60
     9ec:	0e 94 50 09 	call	0x12a0	; 0x12a0 <__mulsf3>
     9f0:	dc 01       	movw	r26, r24
     9f2:	cb 01       	movw	r24, r22
     9f4:	80 93 0c 03 	sts	0x030C, r24
     9f8:	90 93 0d 03 	sts	0x030D, r25
     9fc:	a0 93 0e 03 	sts	0x030E, r26
     a00:	b0 93 0f 03 	sts	0x030F, r27
		}
		if ((ultasoon_nr = 1))
     a04:	81 e0       	ldi	r24, 0x01	; 1
     a06:	90 e0       	ldi	r25, 0x00	; 0
     a08:	90 93 17 03 	sts	0x0317, r25
     a0c:	80 93 16 03 	sts	0x0316, r24
		{
        ultrasoon_rechts = (counts/2)*0.01715; //snelheid van geluid keer de tijd die de klok vertegenwoordigd (16/8 = 2 1/2E6= 5E-7)
     a10:	80 91 1a 03 	lds	r24, 0x031A
     a14:	90 91 1b 03 	lds	r25, 0x031B
     a18:	a0 91 1c 03 	lds	r26, 0x031C
     a1c:	b0 91 1d 03 	lds	r27, 0x031D
     a20:	b6 95       	lsr	r27
     a22:	a7 95       	ror	r26
     a24:	97 95       	ror	r25
     a26:	87 95       	ror	r24
     a28:	bc 01       	movw	r22, r24
     a2a:	cd 01       	movw	r24, r26
     a2c:	0e 94 bc 0b 	call	0x1778	; 0x1778 <__floatunsisf>
     a30:	dc 01       	movw	r26, r24
     a32:	cb 01       	movw	r24, r22
     a34:	bc 01       	movw	r22, r24
     a36:	cd 01       	movw	r24, r26
     a38:	28 e2       	ldi	r18, 0x28	; 40
     a3a:	3e e7       	ldi	r19, 0x7E	; 126
     a3c:	4c e8       	ldi	r20, 0x8C	; 140
     a3e:	5c e3       	ldi	r21, 0x3C	; 60
     a40:	0e 94 50 09 	call	0x12a0	; 0x12a0 <__mulsf3>
     a44:	dc 01       	movw	r26, r24
     a46:	cb 01       	movw	r24, r22
     a48:	80 93 10 03 	sts	0x0310, r24
     a4c:	90 93 11 03 	sts	0x0311, r25
     a50:	a0 93 12 03 	sts	0x0312, r26
     a54:	b0 93 13 03 	sts	0x0313, r27
		}
    }
}
     a58:	cf 91       	pop	r28
     a5a:	df 91       	pop	r29
     a5c:	ff 91       	pop	r31
     a5e:	ef 91       	pop	r30
     a60:	bf 91       	pop	r27
     a62:	af 91       	pop	r26
     a64:	9f 91       	pop	r25
     a66:	8f 91       	pop	r24
     a68:	7f 91       	pop	r23
     a6a:	6f 91       	pop	r22
     a6c:	5f 91       	pop	r21
     a6e:	4f 91       	pop	r20
     a70:	3f 91       	pop	r19
     a72:	2f 91       	pop	r18
     a74:	1f 91       	pop	r17
     a76:	0f 91       	pop	r16
     a78:	ff 90       	pop	r15
     a7a:	ef 90       	pop	r14
     a7c:	0f 90       	pop	r0
     a7e:	00 92 5b 00 	sts	0x005B, r0
     a82:	0f 90       	pop	r0
     a84:	0f be       	out	0x3f, r0	; 63
     a86:	0f 90       	pop	r0
     a88:	1f 90       	pop	r1
     a8a:	18 95       	reti

00000a8c <__vector_42>:

ISR(TIMER4_COMPA_vect)
{
     a8c:	1f 92       	push	r1
     a8e:	0f 92       	push	r0
     a90:	0f b6       	in	r0, 0x3f	; 63
     a92:	0f 92       	push	r0
     a94:	00 90 5b 00 	lds	r0, 0x005B
     a98:	0f 92       	push	r0
     a9a:	11 24       	eor	r1, r1
     a9c:	8f 93       	push	r24
     a9e:	af 93       	push	r26
     aa0:	bf 93       	push	r27
     aa2:	ef 93       	push	r30
     aa4:	ff 93       	push	r31
     aa6:	df 93       	push	r29
     aa8:	cf 93       	push	r28
     aaa:	cd b7       	in	r28, 0x3d	; 61
     aac:	de b7       	in	r29, 0x3e	; 62
    PORTA = 0;
     aae:	e2 e2       	ldi	r30, 0x22	; 34
     ab0:	f0 e0       	ldi	r31, 0x00	; 0
     ab2:	10 82       	st	Z, r1
    TIMSK4 = (1 << ICIE4);
     ab4:	e2 e7       	ldi	r30, 0x72	; 114
     ab6:	f0 e0       	ldi	r31, 0x00	; 0
     ab8:	80 e2       	ldi	r24, 0x20	; 32
     aba:	80 83       	st	Z, r24
    TCCR4B |= (1 << ICES4);
     abc:	a1 ea       	ldi	r26, 0xA1	; 161
     abe:	b0 e0       	ldi	r27, 0x00	; 0
     ac0:	e1 ea       	ldi	r30, 0xA1	; 161
     ac2:	f0 e0       	ldi	r31, 0x00	; 0
     ac4:	80 81       	ld	r24, Z
     ac6:	80 64       	ori	r24, 0x40	; 64
     ac8:	8c 93       	st	X, r24
}
     aca:	cf 91       	pop	r28
     acc:	df 91       	pop	r29
     ace:	ff 91       	pop	r31
     ad0:	ef 91       	pop	r30
     ad2:	bf 91       	pop	r27
     ad4:	af 91       	pop	r26
     ad6:	8f 91       	pop	r24
     ad8:	0f 90       	pop	r0
     ada:	00 92 5b 00 	sts	0x005B, r0
     ade:	0f 90       	pop	r0
     ae0:	0f be       	out	0x3f, r0	; 63
     ae2:	0f 90       	pop	r0
     ae4:	1f 90       	pop	r1
     ae6:	18 95       	reti

00000ae8 <__vector_15>:

ISR(TIMER2_OVF_vect)
{
     ae8:	1f 92       	push	r1
     aea:	0f 92       	push	r0
     aec:	0f b6       	in	r0, 0x3f	; 63
     aee:	0f 92       	push	r0
     af0:	00 90 5b 00 	lds	r0, 0x005B
     af4:	0f 92       	push	r0
     af6:	11 24       	eor	r1, r1
     af8:	8f 93       	push	r24
     afa:	9f 93       	push	r25
     afc:	af 93       	push	r26
     afe:	bf 93       	push	r27
     b00:	ef 93       	push	r30
     b02:	ff 93       	push	r31
     b04:	df 93       	push	r29
     b06:	cf 93       	push	r28
     b08:	cd b7       	in	r28, 0x3d	; 61
     b0a:	de b7       	in	r29, 0x3e	; 62
    TIMSK4 = (1<<OCIE4A);
     b0c:	e2 e7       	ldi	r30, 0x72	; 114
     b0e:	f0 e0       	ldi	r31, 0x00	; 0
     b10:	82 e0       	ldi	r24, 0x02	; 2
     b12:	80 83       	st	Z, r24
    PORTA |= (1<<PA3);
     b14:	a2 e2       	ldi	r26, 0x22	; 34
     b16:	b0 e0       	ldi	r27, 0x00	; 0
     b18:	e2 e2       	ldi	r30, 0x22	; 34
     b1a:	f0 e0       	ldi	r31, 0x00	; 0
     b1c:	80 81       	ld	r24, Z
     b1e:	88 60       	ori	r24, 0x08	; 8
     b20:	8c 93       	st	X, r24
    TCNT4 =0;
     b22:	e4 ea       	ldi	r30, 0xA4	; 164
     b24:	f0 e0       	ldi	r31, 0x00	; 0
     b26:	11 82       	std	Z+1, r1	; 0x01
     b28:	10 82       	st	Z, r1
    OCR4A = 20000;
     b2a:	e8 ea       	ldi	r30, 0xA8	; 168
     b2c:	f0 e0       	ldi	r31, 0x00	; 0
     b2e:	80 e2       	ldi	r24, 0x20	; 32
     b30:	9e e4       	ldi	r25, 0x4E	; 78
     b32:	91 83       	std	Z+1, r25	; 0x01
     b34:	80 83       	st	Z, r24
	ultasoon_nr = 3;
     b36:	83 e0       	ldi	r24, 0x03	; 3
     b38:	90 e0       	ldi	r25, 0x00	; 0
     b3a:	90 93 17 03 	sts	0x0317, r25
     b3e:	80 93 16 03 	sts	0x0316, r24
}
     b42:	cf 91       	pop	r28
     b44:	df 91       	pop	r29
     b46:	ff 91       	pop	r31
     b48:	ef 91       	pop	r30
     b4a:	bf 91       	pop	r27
     b4c:	af 91       	pop	r26
     b4e:	9f 91       	pop	r25
     b50:	8f 91       	pop	r24
     b52:	0f 90       	pop	r0
     b54:	00 92 5b 00 	sts	0x005B, r0
     b58:	0f 90       	pop	r0
     b5a:	0f be       	out	0x3f, r0	; 63
     b5c:	0f 90       	pop	r0
     b5e:	1f 90       	pop	r1
     b60:	18 95       	reti

00000b62 <__vector_13>:

ISR(TIMER2_COMPA_vect)
{
     b62:	1f 92       	push	r1
     b64:	0f 92       	push	r0
     b66:	0f b6       	in	r0, 0x3f	; 63
     b68:	0f 92       	push	r0
     b6a:	00 90 5b 00 	lds	r0, 0x005B
     b6e:	0f 92       	push	r0
     b70:	11 24       	eor	r1, r1
     b72:	8f 93       	push	r24
     b74:	9f 93       	push	r25
     b76:	af 93       	push	r26
     b78:	bf 93       	push	r27
     b7a:	ef 93       	push	r30
     b7c:	ff 93       	push	r31
     b7e:	df 93       	push	r29
     b80:	cf 93       	push	r28
     b82:	cd b7       	in	r28, 0x3d	; 61
     b84:	de b7       	in	r29, 0x3e	; 62
    TIMSK4 = (1<<OCIE4A);
     b86:	e2 e7       	ldi	r30, 0x72	; 114
     b88:	f0 e0       	ldi	r31, 0x00	; 0
     b8a:	82 e0       	ldi	r24, 0x02	; 2
     b8c:	80 83       	st	Z, r24
    PORTA |= (1<<PA2);
     b8e:	a2 e2       	ldi	r26, 0x22	; 34
     b90:	b0 e0       	ldi	r27, 0x00	; 0
     b92:	e2 e2       	ldi	r30, 0x22	; 34
     b94:	f0 e0       	ldi	r31, 0x00	; 0
     b96:	80 81       	ld	r24, Z
     b98:	84 60       	ori	r24, 0x04	; 4
     b9a:	8c 93       	st	X, r24
    TCNT4 =0;
     b9c:	e4 ea       	ldi	r30, 0xA4	; 164
     b9e:	f0 e0       	ldi	r31, 0x00	; 0
     ba0:	11 82       	std	Z+1, r1	; 0x01
     ba2:	10 82       	st	Z, r1
    OCR4A = 20000;
     ba4:	e8 ea       	ldi	r30, 0xA8	; 168
     ba6:	f0 e0       	ldi	r31, 0x00	; 0
     ba8:	80 e2       	ldi	r24, 0x20	; 32
     baa:	9e e4       	ldi	r25, 0x4E	; 78
     bac:	91 83       	std	Z+1, r25	; 0x01
     bae:	80 83       	st	Z, r24
	ultasoon_nr = 2;
     bb0:	82 e0       	ldi	r24, 0x02	; 2
     bb2:	90 e0       	ldi	r25, 0x00	; 0
     bb4:	90 93 17 03 	sts	0x0317, r25
     bb8:	80 93 16 03 	sts	0x0316, r24
}
     bbc:	cf 91       	pop	r28
     bbe:	df 91       	pop	r29
     bc0:	ff 91       	pop	r31
     bc2:	ef 91       	pop	r30
     bc4:	bf 91       	pop	r27
     bc6:	af 91       	pop	r26
     bc8:	9f 91       	pop	r25
     bca:	8f 91       	pop	r24
     bcc:	0f 90       	pop	r0
     bce:	00 92 5b 00 	sts	0x005B, r0
     bd2:	0f 90       	pop	r0
     bd4:	0f be       	out	0x3f, r0	; 63
     bd6:	0f 90       	pop	r0
     bd8:	1f 90       	pop	r1
     bda:	18 95       	reti

00000bdc <__vector_14>:

ISR(TIMER2_COMPB_vect)
{
     bdc:	1f 92       	push	r1
     bde:	0f 92       	push	r0
     be0:	0f b6       	in	r0, 0x3f	; 63
     be2:	0f 92       	push	r0
     be4:	00 90 5b 00 	lds	r0, 0x005B
     be8:	0f 92       	push	r0
     bea:	11 24       	eor	r1, r1
     bec:	8f 93       	push	r24
     bee:	9f 93       	push	r25
     bf0:	af 93       	push	r26
     bf2:	bf 93       	push	r27
     bf4:	ef 93       	push	r30
     bf6:	ff 93       	push	r31
     bf8:	df 93       	push	r29
     bfa:	cf 93       	push	r28
     bfc:	cd b7       	in	r28, 0x3d	; 61
     bfe:	de b7       	in	r29, 0x3e	; 62
    TIMSK4 = (1<<OCIE4A);
     c00:	e2 e7       	ldi	r30, 0x72	; 114
     c02:	f0 e0       	ldi	r31, 0x00	; 0
     c04:	82 e0       	ldi	r24, 0x02	; 2
     c06:	80 83       	st	Z, r24
    PORTA |= (1<<PA1);
     c08:	a2 e2       	ldi	r26, 0x22	; 34
     c0a:	b0 e0       	ldi	r27, 0x00	; 0
     c0c:	e2 e2       	ldi	r30, 0x22	; 34
     c0e:	f0 e0       	ldi	r31, 0x00	; 0
     c10:	80 81       	ld	r24, Z
     c12:	82 60       	ori	r24, 0x02	; 2
     c14:	8c 93       	st	X, r24
    TCNT4 =0;
     c16:	e4 ea       	ldi	r30, 0xA4	; 164
     c18:	f0 e0       	ldi	r31, 0x00	; 0
     c1a:	11 82       	std	Z+1, r1	; 0x01
     c1c:	10 82       	st	Z, r1
    OCR4A = 20000;
     c1e:	e8 ea       	ldi	r30, 0xA8	; 168
     c20:	f0 e0       	ldi	r31, 0x00	; 0
     c22:	80 e2       	ldi	r24, 0x20	; 32
     c24:	9e e4       	ldi	r25, 0x4E	; 78
     c26:	91 83       	std	Z+1, r25	; 0x01
     c28:	80 83       	st	Z, r24
	ultasoon_nr = 1;
     c2a:	81 e0       	ldi	r24, 0x01	; 1
     c2c:	90 e0       	ldi	r25, 0x00	; 0
     c2e:	90 93 17 03 	sts	0x0317, r25
     c32:	80 93 16 03 	sts	0x0316, r24
}
     c36:	cf 91       	pop	r28
     c38:	df 91       	pop	r29
     c3a:	ff 91       	pop	r31
     c3c:	ef 91       	pop	r30
     c3e:	bf 91       	pop	r27
     c40:	af 91       	pop	r26
     c42:	9f 91       	pop	r25
     c44:	8f 91       	pop	r24
     c46:	0f 90       	pop	r0
     c48:	00 92 5b 00 	sts	0x005B, r0
     c4c:	0f 90       	pop	r0
     c4e:	0f be       	out	0x3f, r0	; 63
     c50:	0f 90       	pop	r0
     c52:	1f 90       	pop	r1
     c54:	18 95       	reti

00000c56 <__vector_23>:

ISR(TIMER0_OVF_vect)
{
     c56:	1f 92       	push	r1
     c58:	0f 92       	push	r0
     c5a:	0f b6       	in	r0, 0x3f	; 63
     c5c:	0f 92       	push	r0
     c5e:	00 90 5b 00 	lds	r0, 0x005B
     c62:	0f 92       	push	r0
     c64:	11 24       	eor	r1, r1
     c66:	8f 93       	push	r24
     c68:	af 93       	push	r26
     c6a:	bf 93       	push	r27
     c6c:	ef 93       	push	r30
     c6e:	ff 93       	push	r31
     c70:	df 93       	push	r29
     c72:	cf 93       	push	r28
     c74:	cd b7       	in	r28, 0x3d	; 61
     c76:	de b7       	in	r29, 0x3e	; 62
    if (OCR0A == 0 && OCR0B == 0)
     c78:	e7 e4       	ldi	r30, 0x47	; 71
     c7a:	f0 e0       	ldi	r31, 0x00	; 0
     c7c:	80 81       	ld	r24, Z
     c7e:	88 23       	and	r24, r24
     c80:	a1 f4       	brne	.+40     	; 0xcaa <__vector_23+0x54>
     c82:	e8 e4       	ldi	r30, 0x48	; 72
     c84:	f0 e0       	ldi	r31, 0x00	; 0
     c86:	80 81       	ld	r24, Z
     c88:	88 23       	and	r24, r24
     c8a:	79 f4       	brne	.+30     	; 0xcaa <__vector_23+0x54>
    {
        PORTE &= ~(1<<PE4);
     c8c:	ae e2       	ldi	r26, 0x2E	; 46
     c8e:	b0 e0       	ldi	r27, 0x00	; 0
     c90:	ee e2       	ldi	r30, 0x2E	; 46
     c92:	f0 e0       	ldi	r31, 0x00	; 0
     c94:	80 81       	ld	r24, Z
     c96:	8f 7e       	andi	r24, 0xEF	; 239
     c98:	8c 93       	st	X, r24
        PORTE &= ~(1<<PE5);
     c9a:	ae e2       	ldi	r26, 0x2E	; 46
     c9c:	b0 e0       	ldi	r27, 0x00	; 0
     c9e:	ee e2       	ldi	r30, 0x2E	; 46
     ca0:	f0 e0       	ldi	r31, 0x00	; 0
     ca2:	80 81       	ld	r24, Z
     ca4:	8f 7d       	andi	r24, 0xDF	; 223
     ca6:	8c 93       	st	X, r24
     ca8:	27 c0       	rjmp	.+78     	; 0xcf8 <__vector_23+0xa2>
    }
    else if (OCR0A != 0)
     caa:	e7 e4       	ldi	r30, 0x47	; 71
     cac:	f0 e0       	ldi	r31, 0x00	; 0
     cae:	80 81       	ld	r24, Z
     cb0:	88 23       	and	r24, r24
     cb2:	79 f0       	breq	.+30     	; 0xcd2 <__vector_23+0x7c>
    {
        PORTE &= ~(1<<PE5);
     cb4:	ae e2       	ldi	r26, 0x2E	; 46
     cb6:	b0 e0       	ldi	r27, 0x00	; 0
     cb8:	ee e2       	ldi	r30, 0x2E	; 46
     cba:	f0 e0       	ldi	r31, 0x00	; 0
     cbc:	80 81       	ld	r24, Z
     cbe:	8f 7d       	andi	r24, 0xDF	; 223
     cc0:	8c 93       	st	X, r24
        PORTE |= (1<<PE4);
     cc2:	ae e2       	ldi	r26, 0x2E	; 46
     cc4:	b0 e0       	ldi	r27, 0x00	; 0
     cc6:	ee e2       	ldi	r30, 0x2E	; 46
     cc8:	f0 e0       	ldi	r31, 0x00	; 0
     cca:	80 81       	ld	r24, Z
     ccc:	80 61       	ori	r24, 0x10	; 16
     cce:	8c 93       	st	X, r24
     cd0:	13 c0       	rjmp	.+38     	; 0xcf8 <__vector_23+0xa2>
    }
    else if (OCR0B != 0)
     cd2:	e8 e4       	ldi	r30, 0x48	; 72
     cd4:	f0 e0       	ldi	r31, 0x00	; 0
     cd6:	80 81       	ld	r24, Z
     cd8:	88 23       	and	r24, r24
     cda:	71 f0       	breq	.+28     	; 0xcf8 <__vector_23+0xa2>
    {
        PORTE &= ~(1<<PE4);
     cdc:	ae e2       	ldi	r26, 0x2E	; 46
     cde:	b0 e0       	ldi	r27, 0x00	; 0
     ce0:	ee e2       	ldi	r30, 0x2E	; 46
     ce2:	f0 e0       	ldi	r31, 0x00	; 0
     ce4:	80 81       	ld	r24, Z
     ce6:	8f 7e       	andi	r24, 0xEF	; 239
     ce8:	8c 93       	st	X, r24
        PORTE |= (1<<PE5);
     cea:	ae e2       	ldi	r26, 0x2E	; 46
     cec:	b0 e0       	ldi	r27, 0x00	; 0
     cee:	ee e2       	ldi	r30, 0x2E	; 46
     cf0:	f0 e0       	ldi	r31, 0x00	; 0
     cf2:	80 81       	ld	r24, Z
     cf4:	80 62       	ori	r24, 0x20	; 32
     cf6:	8c 93       	st	X, r24
    }
}
     cf8:	cf 91       	pop	r28
     cfa:	df 91       	pop	r29
     cfc:	ff 91       	pop	r31
     cfe:	ef 91       	pop	r30
     d00:	bf 91       	pop	r27
     d02:	af 91       	pop	r26
     d04:	8f 91       	pop	r24
     d06:	0f 90       	pop	r0
     d08:	00 92 5b 00 	sts	0x005B, r0
     d0c:	0f 90       	pop	r0
     d0e:	0f be       	out	0x3f, r0	; 63
     d10:	0f 90       	pop	r0
     d12:	1f 90       	pop	r1
     d14:	18 95       	reti

00000d16 <__vector_21>:

ISR(TIMER0_COMPA_vect)
{
     d16:	1f 92       	push	r1
     d18:	0f 92       	push	r0
     d1a:	0f b6       	in	r0, 0x3f	; 63
     d1c:	0f 92       	push	r0
     d1e:	00 90 5b 00 	lds	r0, 0x005B
     d22:	0f 92       	push	r0
     d24:	11 24       	eor	r1, r1
     d26:	8f 93       	push	r24
     d28:	af 93       	push	r26
     d2a:	bf 93       	push	r27
     d2c:	ef 93       	push	r30
     d2e:	ff 93       	push	r31
     d30:	df 93       	push	r29
     d32:	cf 93       	push	r28
     d34:	cd b7       	in	r28, 0x3d	; 61
     d36:	de b7       	in	r29, 0x3e	; 62
    PORTE &= ~(1<<PE4);
     d38:	ae e2       	ldi	r26, 0x2E	; 46
     d3a:	b0 e0       	ldi	r27, 0x00	; 0
     d3c:	ee e2       	ldi	r30, 0x2E	; 46
     d3e:	f0 e0       	ldi	r31, 0x00	; 0
     d40:	80 81       	ld	r24, Z
     d42:	8f 7e       	andi	r24, 0xEF	; 239
     d44:	8c 93       	st	X, r24
}
     d46:	cf 91       	pop	r28
     d48:	df 91       	pop	r29
     d4a:	ff 91       	pop	r31
     d4c:	ef 91       	pop	r30
     d4e:	bf 91       	pop	r27
     d50:	af 91       	pop	r26
     d52:	8f 91       	pop	r24
     d54:	0f 90       	pop	r0
     d56:	00 92 5b 00 	sts	0x005B, r0
     d5a:	0f 90       	pop	r0
     d5c:	0f be       	out	0x3f, r0	; 63
     d5e:	0f 90       	pop	r0
     d60:	1f 90       	pop	r1
     d62:	18 95       	reti

00000d64 <__vector_22>:

ISR(TIMER0_COMPB_vect)
{
     d64:	1f 92       	push	r1
     d66:	0f 92       	push	r0
     d68:	0f b6       	in	r0, 0x3f	; 63
     d6a:	0f 92       	push	r0
     d6c:	00 90 5b 00 	lds	r0, 0x005B
     d70:	0f 92       	push	r0
     d72:	11 24       	eor	r1, r1
     d74:	8f 93       	push	r24
     d76:	af 93       	push	r26
     d78:	bf 93       	push	r27
     d7a:	ef 93       	push	r30
     d7c:	ff 93       	push	r31
     d7e:	df 93       	push	r29
     d80:	cf 93       	push	r28
     d82:	cd b7       	in	r28, 0x3d	; 61
     d84:	de b7       	in	r29, 0x3e	; 62
    PORTE &= ~(1<<PE5);
     d86:	ae e2       	ldi	r26, 0x2E	; 46
     d88:	b0 e0       	ldi	r27, 0x00	; 0
     d8a:	ee e2       	ldi	r30, 0x2E	; 46
     d8c:	f0 e0       	ldi	r31, 0x00	; 0
     d8e:	80 81       	ld	r24, Z
     d90:	8f 7d       	andi	r24, 0xDF	; 223
     d92:	8c 93       	st	X, r24
}
     d94:	cf 91       	pop	r28
     d96:	df 91       	pop	r29
     d98:	ff 91       	pop	r31
     d9a:	ef 91       	pop	r30
     d9c:	bf 91       	pop	r27
     d9e:	af 91       	pop	r26
     da0:	8f 91       	pop	r24
     da2:	0f 90       	pop	r0
     da4:	00 92 5b 00 	sts	0x005B, r0
     da8:	0f 90       	pop	r0
     daa:	0f be       	out	0x3f, r0	; 63
     dac:	0f 90       	pop	r0
     dae:	1f 90       	pop	r1
     db0:	18 95       	reti

00000db2 <init_motor>:

void init_motor (void)
{
     db2:	df 93       	push	r29
     db4:	cf 93       	push	r28
     db6:	cd b7       	in	r28, 0x3d	; 61
     db8:	de b7       	in	r29, 0x3e	; 62
    // Output low
    PORTE &= ~(1<<PE4);
     dba:	ae e2       	ldi	r26, 0x2E	; 46
     dbc:	b0 e0       	ldi	r27, 0x00	; 0
     dbe:	ee e2       	ldi	r30, 0x2E	; 46
     dc0:	f0 e0       	ldi	r31, 0x00	; 0
     dc2:	80 81       	ld	r24, Z
     dc4:	8f 7e       	andi	r24, 0xEF	; 239
     dc6:	8c 93       	st	X, r24
    PORTE &= ~(1<<PE5);
     dc8:	ae e2       	ldi	r26, 0x2E	; 46
     dca:	b0 e0       	ldi	r27, 0x00	; 0
     dcc:	ee e2       	ldi	r30, 0x2E	; 46
     dce:	f0 e0       	ldi	r31, 0x00	; 0
     dd0:	80 81       	ld	r24, Z
     dd2:	8f 7d       	andi	r24, 0xDF	; 223
     dd4:	8c 93       	st	X, r24

    // Use mode 0, clkdiv = 64 klok 0 Pwm signalen
    TCCR0A = 0;
     dd6:	e4 e4       	ldi	r30, 0x44	; 68
     dd8:	f0 e0       	ldi	r31, 0x00	; 0
     dda:	10 82       	st	Z, r1
    TCCR0B = (0<<CS02) | (1<<CS01) | (1<<CS00);
     ddc:	e5 e4       	ldi	r30, 0x45	; 69
     dde:	f0 e0       	ldi	r31, 0x00	; 0
     de0:	83 e0       	ldi	r24, 0x03	; 3
     de2:	80 83       	st	Z, r24
    TIMSK0 = (1<<OCIE0B) | (1<<OCIE0A) | (1<<TOIE0);
     de4:	ee e6       	ldi	r30, 0x6E	; 110
     de6:	f0 e0       	ldi	r31, 0x00	; 0
     de8:	87 e0       	ldi	r24, 0x07	; 7
     dea:	80 83       	st	Z, r24
    OCR0A = 0;
     dec:	e7 e4       	ldi	r30, 0x47	; 71
     dee:	f0 e0       	ldi	r31, 0x00	; 0
     df0:	10 82       	st	Z, r1
    OCR0B = 0;
     df2:	e8 e4       	ldi	r30, 0x48	; 72
     df4:	f0 e0       	ldi	r31, 0x00	; 0
     df6:	10 82       	st	Z, r1

    // Use mode 0, clkdiv = 256 klok 1 globale klok
    TCCR1A = 0;
     df8:	e0 e8       	ldi	r30, 0x80	; 128
     dfa:	f0 e0       	ldi	r31, 0x00	; 0
     dfc:	10 82       	st	Z, r1
    TCCR1B = (1<<CS02) | (0<<CS01) | (0<<CS00);
     dfe:	e1 e8       	ldi	r30, 0x81	; 129
     e00:	f0 e0       	ldi	r31, 0x00	; 0
     e02:	84 e0       	ldi	r24, 0x04	; 4
     e04:	80 83       	st	Z, r24
    TIMSK1 = (1<<OCIE0A);
     e06:	ef e6       	ldi	r30, 0x6F	; 111
     e08:	f0 e0       	ldi	r31, 0x00	; 0
     e0a:	82 e0       	ldi	r24, 0x02	; 2
     e0c:	80 83       	st	Z, r24
    OCR1A = 6250; //0.1 van een seconde dus kan gebruikt worden om een grote klok te maken voor 25.5 seconden
     e0e:	e8 e8       	ldi	r30, 0x88	; 136
     e10:	f0 e0       	ldi	r31, 0x00	; 0
     e12:	8a e6       	ldi	r24, 0x6A	; 106
     e14:	98 e1       	ldi	r25, 0x18	; 24
     e16:	91 83       	std	Z+1, r25	; 0x01
     e18:	80 83       	st	Z, r24

    // Use mode 0, clkdiv = 1024   klok 2 globale trigger
    TCCR2A = 0;
     e1a:	e0 eb       	ldi	r30, 0xB0	; 176
     e1c:	f0 e0       	ldi	r31, 0x00	; 0
     e1e:	10 82       	st	Z, r1
    TCCR2B = (1<<CS22) | (0<<CS21) | (1<<CS20);
     e20:	e1 eb       	ldi	r30, 0xB1	; 177
     e22:	f0 e0       	ldi	r31, 0x00	; 0
     e24:	85 e0       	ldi	r24, 0x05	; 5
     e26:	80 83       	st	Z, r24
    OCR2A = 85;
     e28:	e3 eb       	ldi	r30, 0xB3	; 179
     e2a:	f0 e0       	ldi	r31, 0x00	; 0
     e2c:	85 e5       	ldi	r24, 0x55	; 85
     e2e:	80 83       	st	Z, r24
    OCR2B = 170;
     e30:	e4 eb       	ldi	r30, 0xB4	; 180
     e32:	f0 e0       	ldi	r31, 0x00	; 0
     e34:	8a ea       	ldi	r24, 0xAA	; 170
     e36:	80 83       	st	Z, r24
    TIMSK2 = (1<<OCIE2B) | (1<<OCIE2A) | (1<<TOIE2);
     e38:	e0 e7       	ldi	r30, 0x70	; 112
     e3a:	f0 e0       	ldi	r31, 0x00	; 0
     e3c:	87 e0       	ldi	r24, 0x07	; 7
     e3e:	80 83       	st	Z, r24

    // Use mode 0, clkdiv = 8 klok 4 ultrasoon
    TCCR4A = 0;
     e40:	e0 ea       	ldi	r30, 0xA0	; 160
     e42:	f0 e0       	ldi	r31, 0x00	; 0
     e44:	10 82       	st	Z, r1
    TCCR4B = (0<<CS42) | (1<<CS41) | (0<<CS40);
     e46:	e1 ea       	ldi	r30, 0xA1	; 161
     e48:	f0 e0       	ldi	r31, 0x00	; 0
     e4a:	82 e0       	ldi	r24, 0x02	; 2
     e4c:	80 83       	st	Z, r24


    // Interupts geactiveerd
    sei();
     e4e:	78 94       	sei
}
     e50:	cf 91       	pop	r28
     e52:	df 91       	pop	r29
     e54:	08 95       	ret

00000e56 <motor>:

void motor (signed int Af, signed int Bf)
{
     e56:	df 93       	push	r29
     e58:	cf 93       	push	r28
     e5a:	00 d0       	rcall	.+0      	; 0xe5c <motor+0x6>
     e5c:	0f 92       	push	r0
     e5e:	cd b7       	in	r28, 0x3d	; 61
     e60:	de b7       	in	r29, 0x3e	; 62
     e62:	9a 83       	std	Y+2, r25	; 0x02
     e64:	89 83       	std	Y+1, r24	; 0x01
     e66:	7c 83       	std	Y+4, r23	; 0x04
     e68:	6b 83       	std	Y+3, r22	; 0x03
    if(Af < 0)
     e6a:	89 81       	ldd	r24, Y+1	; 0x01
     e6c:	9a 81       	ldd	r25, Y+2	; 0x02
     e6e:	99 23       	and	r25, r25
     e70:	5c f4       	brge	.+22     	; 0xe88 <motor+0x32>
    {
        PORTJ |= (1<<PJ0);
     e72:	a5 e0       	ldi	r26, 0x05	; 5
     e74:	b1 e0       	ldi	r27, 0x01	; 1
     e76:	e5 e0       	ldi	r30, 0x05	; 5
     e78:	f1 e0       	ldi	r31, 0x01	; 1
     e7a:	80 81       	ld	r24, Z
     e7c:	81 60       	ori	r24, 0x01	; 1
     e7e:	8c 93       	st	X, r24
        OCR0A = Af;
     e80:	e7 e4       	ldi	r30, 0x47	; 71
     e82:	f0 e0       	ldi	r31, 0x00	; 0
     e84:	89 81       	ldd	r24, Y+1	; 0x01
     e86:	80 83       	st	Z, r24
    }
    if (Bf < 0)
     e88:	8b 81       	ldd	r24, Y+3	; 0x03
     e8a:	9c 81       	ldd	r25, Y+4	; 0x04
     e8c:	99 23       	and	r25, r25
     e8e:	5c f4       	brge	.+22     	; 0xea6 <motor+0x50>
    {
        PORTJ |= (1<<PJ1);
     e90:	a5 e0       	ldi	r26, 0x05	; 5
     e92:	b1 e0       	ldi	r27, 0x01	; 1
     e94:	e5 e0       	ldi	r30, 0x05	; 5
     e96:	f1 e0       	ldi	r31, 0x01	; 1
     e98:	80 81       	ld	r24, Z
     e9a:	82 60       	ori	r24, 0x02	; 2
     e9c:	8c 93       	st	X, r24
        OCR0B = Bf;
     e9e:	e8 e4       	ldi	r30, 0x48	; 72
     ea0:	f0 e0       	ldi	r31, 0x00	; 0
     ea2:	8b 81       	ldd	r24, Y+3	; 0x03
     ea4:	80 83       	st	Z, r24
    }
    if (Af > 0)
     ea6:	89 81       	ldd	r24, Y+1	; 0x01
     ea8:	9a 81       	ldd	r25, Y+2	; 0x02
     eaa:	18 16       	cp	r1, r24
     eac:	19 06       	cpc	r1, r25
     eae:	5c f4       	brge	.+22     	; 0xec6 <motor+0x70>
    {
        PORTJ &= ~(1<<PJ0);
     eb0:	a5 e0       	ldi	r26, 0x05	; 5
     eb2:	b1 e0       	ldi	r27, 0x01	; 1
     eb4:	e5 e0       	ldi	r30, 0x05	; 5
     eb6:	f1 e0       	ldi	r31, 0x01	; 1
     eb8:	80 81       	ld	r24, Z
     eba:	8e 7f       	andi	r24, 0xFE	; 254
     ebc:	8c 93       	st	X, r24
        OCR0A = Af;
     ebe:	e7 e4       	ldi	r30, 0x47	; 71
     ec0:	f0 e0       	ldi	r31, 0x00	; 0
     ec2:	89 81       	ldd	r24, Y+1	; 0x01
     ec4:	80 83       	st	Z, r24
    }
    if (Bf > 0)
     ec6:	8b 81       	ldd	r24, Y+3	; 0x03
     ec8:	9c 81       	ldd	r25, Y+4	; 0x04
     eca:	18 16       	cp	r1, r24
     ecc:	19 06       	cpc	r1, r25
     ece:	5c f4       	brge	.+22     	; 0xee6 <motor+0x90>
    {
        PORTJ &= ~(1<<PJ1);
     ed0:	a5 e0       	ldi	r26, 0x05	; 5
     ed2:	b1 e0       	ldi	r27, 0x01	; 1
     ed4:	e5 e0       	ldi	r30, 0x05	; 5
     ed6:	f1 e0       	ldi	r31, 0x01	; 1
     ed8:	80 81       	ld	r24, Z
     eda:	8d 7f       	andi	r24, 0xFD	; 253
     edc:	8c 93       	st	X, r24
        OCR0B = Bf;
     ede:	e8 e4       	ldi	r30, 0x48	; 72
     ee0:	f0 e0       	ldi	r31, 0x00	; 0
     ee2:	8b 81       	ldd	r24, Y+3	; 0x03
     ee4:	80 83       	st	Z, r24
    }
}
     ee6:	0f 90       	pop	r0
     ee8:	0f 90       	pop	r0
     eea:	0f 90       	pop	r0
     eec:	0f 90       	pop	r0
     eee:	cf 91       	pop	r28
     ef0:	df 91       	pop	r29
     ef2:	08 95       	ret

00000ef4 <__fixunssfsi>:
     ef4:	ef 92       	push	r14
     ef6:	ff 92       	push	r15
     ef8:	0f 93       	push	r16
     efa:	1f 93       	push	r17
     efc:	7b 01       	movw	r14, r22
     efe:	8c 01       	movw	r16, r24
     f00:	20 e0       	ldi	r18, 0x00	; 0
     f02:	30 e0       	ldi	r19, 0x00	; 0
     f04:	40 e0       	ldi	r20, 0x00	; 0
     f06:	5f e4       	ldi	r21, 0x4F	; 79
     f08:	0e 94 7a 0a 	call	0x14f4	; 0x14f4 <__gesf2>
     f0c:	88 23       	and	r24, r24
     f0e:	8c f0       	brlt	.+34     	; 0xf32 <__fixunssfsi+0x3e>
     f10:	c8 01       	movw	r24, r16
     f12:	b7 01       	movw	r22, r14
     f14:	20 e0       	ldi	r18, 0x00	; 0
     f16:	30 e0       	ldi	r19, 0x00	; 0
     f18:	40 e0       	ldi	r20, 0x00	; 0
     f1a:	5f e4       	ldi	r21, 0x4F	; 79
     f1c:	0e 94 f2 08 	call	0x11e4	; 0x11e4 <__subsf3>
     f20:	0e 94 68 0b 	call	0x16d0	; 0x16d0 <__fixsfsi>
     f24:	9b 01       	movw	r18, r22
     f26:	ac 01       	movw	r20, r24
     f28:	20 50       	subi	r18, 0x00	; 0
     f2a:	30 40       	sbci	r19, 0x00	; 0
     f2c:	40 40       	sbci	r20, 0x00	; 0
     f2e:	50 48       	sbci	r21, 0x80	; 128
     f30:	06 c0       	rjmp	.+12     	; 0xf3e <__fixunssfsi+0x4a>
     f32:	c8 01       	movw	r24, r16
     f34:	b7 01       	movw	r22, r14
     f36:	0e 94 68 0b 	call	0x16d0	; 0x16d0 <__fixsfsi>
     f3a:	9b 01       	movw	r18, r22
     f3c:	ac 01       	movw	r20, r24
     f3e:	b9 01       	movw	r22, r18
     f40:	ca 01       	movw	r24, r20
     f42:	1f 91       	pop	r17
     f44:	0f 91       	pop	r16
     f46:	ff 90       	pop	r15
     f48:	ef 90       	pop	r14
     f4a:	08 95       	ret

00000f4c <_fpadd_parts>:
     f4c:	a0 e0       	ldi	r26, 0x00	; 0
     f4e:	b0 e0       	ldi	r27, 0x00	; 0
     f50:	ec ea       	ldi	r30, 0xAC	; 172
     f52:	f7 e0       	ldi	r31, 0x07	; 7
     f54:	0c 94 2a 0e 	jmp	0x1c54	; 0x1c54 <__prologue_saves__>
     f58:	dc 01       	movw	r26, r24
     f5a:	2b 01       	movw	r4, r22
     f5c:	fa 01       	movw	r30, r20
     f5e:	9c 91       	ld	r25, X
     f60:	92 30       	cpi	r25, 0x02	; 2
     f62:	08 f4       	brcc	.+2      	; 0xf66 <_fpadd_parts+0x1a>
     f64:	39 c1       	rjmp	.+626    	; 0x11d8 <_fpadd_parts+0x28c>
     f66:	eb 01       	movw	r28, r22
     f68:	88 81       	ld	r24, Y
     f6a:	82 30       	cpi	r24, 0x02	; 2
     f6c:	08 f4       	brcc	.+2      	; 0xf70 <_fpadd_parts+0x24>
     f6e:	33 c1       	rjmp	.+614    	; 0x11d6 <_fpadd_parts+0x28a>
     f70:	94 30       	cpi	r25, 0x04	; 4
     f72:	69 f4       	brne	.+26     	; 0xf8e <_fpadd_parts+0x42>
     f74:	84 30       	cpi	r24, 0x04	; 4
     f76:	09 f0       	breq	.+2      	; 0xf7a <_fpadd_parts+0x2e>
     f78:	2f c1       	rjmp	.+606    	; 0x11d8 <_fpadd_parts+0x28c>
     f7a:	11 96       	adiw	r26, 0x01	; 1
     f7c:	9c 91       	ld	r25, X
     f7e:	11 97       	sbiw	r26, 0x01	; 1
     f80:	89 81       	ldd	r24, Y+1	; 0x01
     f82:	98 17       	cp	r25, r24
     f84:	09 f4       	brne	.+2      	; 0xf88 <_fpadd_parts+0x3c>
     f86:	28 c1       	rjmp	.+592    	; 0x11d8 <_fpadd_parts+0x28c>
     f88:	a0 e0       	ldi	r26, 0x00	; 0
     f8a:	b2 e0       	ldi	r27, 0x02	; 2
     f8c:	25 c1       	rjmp	.+586    	; 0x11d8 <_fpadd_parts+0x28c>
     f8e:	84 30       	cpi	r24, 0x04	; 4
     f90:	09 f4       	brne	.+2      	; 0xf94 <_fpadd_parts+0x48>
     f92:	21 c1       	rjmp	.+578    	; 0x11d6 <_fpadd_parts+0x28a>
     f94:	82 30       	cpi	r24, 0x02	; 2
     f96:	a9 f4       	brne	.+42     	; 0xfc2 <_fpadd_parts+0x76>
     f98:	92 30       	cpi	r25, 0x02	; 2
     f9a:	09 f0       	breq	.+2      	; 0xf9e <_fpadd_parts+0x52>
     f9c:	1d c1       	rjmp	.+570    	; 0x11d8 <_fpadd_parts+0x28c>
     f9e:	9a 01       	movw	r18, r20
     fa0:	ad 01       	movw	r20, r26
     fa2:	88 e0       	ldi	r24, 0x08	; 8
     fa4:	ea 01       	movw	r28, r20
     fa6:	09 90       	ld	r0, Y+
     fa8:	ae 01       	movw	r20, r28
     faa:	e9 01       	movw	r28, r18
     fac:	09 92       	st	Y+, r0
     fae:	9e 01       	movw	r18, r28
     fb0:	81 50       	subi	r24, 0x01	; 1
     fb2:	c1 f7       	brne	.-16     	; 0xfa4 <_fpadd_parts+0x58>
     fb4:	e2 01       	movw	r28, r4
     fb6:	89 81       	ldd	r24, Y+1	; 0x01
     fb8:	11 96       	adiw	r26, 0x01	; 1
     fba:	9c 91       	ld	r25, X
     fbc:	89 23       	and	r24, r25
     fbe:	81 83       	std	Z+1, r24	; 0x01
     fc0:	08 c1       	rjmp	.+528    	; 0x11d2 <_fpadd_parts+0x286>
     fc2:	92 30       	cpi	r25, 0x02	; 2
     fc4:	09 f4       	brne	.+2      	; 0xfc8 <_fpadd_parts+0x7c>
     fc6:	07 c1       	rjmp	.+526    	; 0x11d6 <_fpadd_parts+0x28a>
     fc8:	12 96       	adiw	r26, 0x02	; 2
     fca:	2d 90       	ld	r2, X+
     fcc:	3c 90       	ld	r3, X
     fce:	13 97       	sbiw	r26, 0x03	; 3
     fd0:	eb 01       	movw	r28, r22
     fd2:	8a 81       	ldd	r24, Y+2	; 0x02
     fd4:	9b 81       	ldd	r25, Y+3	; 0x03
     fd6:	14 96       	adiw	r26, 0x04	; 4
     fd8:	ad 90       	ld	r10, X+
     fda:	bd 90       	ld	r11, X+
     fdc:	cd 90       	ld	r12, X+
     fde:	dc 90       	ld	r13, X
     fe0:	17 97       	sbiw	r26, 0x07	; 7
     fe2:	ec 80       	ldd	r14, Y+4	; 0x04
     fe4:	fd 80       	ldd	r15, Y+5	; 0x05
     fe6:	0e 81       	ldd	r16, Y+6	; 0x06
     fe8:	1f 81       	ldd	r17, Y+7	; 0x07
     fea:	91 01       	movw	r18, r2
     fec:	28 1b       	sub	r18, r24
     fee:	39 0b       	sbc	r19, r25
     ff0:	b9 01       	movw	r22, r18
     ff2:	37 ff       	sbrs	r19, 7
     ff4:	04 c0       	rjmp	.+8      	; 0xffe <_fpadd_parts+0xb2>
     ff6:	66 27       	eor	r22, r22
     ff8:	77 27       	eor	r23, r23
     ffa:	62 1b       	sub	r22, r18
     ffc:	73 0b       	sbc	r23, r19
     ffe:	60 32       	cpi	r22, 0x20	; 32
    1000:	71 05       	cpc	r23, r1
    1002:	0c f0       	brlt	.+2      	; 0x1006 <_fpadd_parts+0xba>
    1004:	61 c0       	rjmp	.+194    	; 0x10c8 <_fpadd_parts+0x17c>
    1006:	12 16       	cp	r1, r18
    1008:	13 06       	cpc	r1, r19
    100a:	6c f5       	brge	.+90     	; 0x1066 <_fpadd_parts+0x11a>
    100c:	37 01       	movw	r6, r14
    100e:	48 01       	movw	r8, r16
    1010:	06 2e       	mov	r0, r22
    1012:	04 c0       	rjmp	.+8      	; 0x101c <_fpadd_parts+0xd0>
    1014:	96 94       	lsr	r9
    1016:	87 94       	ror	r8
    1018:	77 94       	ror	r7
    101a:	67 94       	ror	r6
    101c:	0a 94       	dec	r0
    101e:	d2 f7       	brpl	.-12     	; 0x1014 <_fpadd_parts+0xc8>
    1020:	21 e0       	ldi	r18, 0x01	; 1
    1022:	30 e0       	ldi	r19, 0x00	; 0
    1024:	40 e0       	ldi	r20, 0x00	; 0
    1026:	50 e0       	ldi	r21, 0x00	; 0
    1028:	04 c0       	rjmp	.+8      	; 0x1032 <_fpadd_parts+0xe6>
    102a:	22 0f       	add	r18, r18
    102c:	33 1f       	adc	r19, r19
    102e:	44 1f       	adc	r20, r20
    1030:	55 1f       	adc	r21, r21
    1032:	6a 95       	dec	r22
    1034:	d2 f7       	brpl	.-12     	; 0x102a <_fpadd_parts+0xde>
    1036:	21 50       	subi	r18, 0x01	; 1
    1038:	30 40       	sbci	r19, 0x00	; 0
    103a:	40 40       	sbci	r20, 0x00	; 0
    103c:	50 40       	sbci	r21, 0x00	; 0
    103e:	2e 21       	and	r18, r14
    1040:	3f 21       	and	r19, r15
    1042:	40 23       	and	r20, r16
    1044:	51 23       	and	r21, r17
    1046:	21 15       	cp	r18, r1
    1048:	31 05       	cpc	r19, r1
    104a:	41 05       	cpc	r20, r1
    104c:	51 05       	cpc	r21, r1
    104e:	21 f0       	breq	.+8      	; 0x1058 <_fpadd_parts+0x10c>
    1050:	21 e0       	ldi	r18, 0x01	; 1
    1052:	30 e0       	ldi	r19, 0x00	; 0
    1054:	40 e0       	ldi	r20, 0x00	; 0
    1056:	50 e0       	ldi	r21, 0x00	; 0
    1058:	79 01       	movw	r14, r18
    105a:	8a 01       	movw	r16, r20
    105c:	e6 28       	or	r14, r6
    105e:	f7 28       	or	r15, r7
    1060:	08 29       	or	r16, r8
    1062:	19 29       	or	r17, r9
    1064:	3c c0       	rjmp	.+120    	; 0x10de <_fpadd_parts+0x192>
    1066:	23 2b       	or	r18, r19
    1068:	d1 f1       	breq	.+116    	; 0x10de <_fpadd_parts+0x192>
    106a:	26 0e       	add	r2, r22
    106c:	37 1e       	adc	r3, r23
    106e:	35 01       	movw	r6, r10
    1070:	46 01       	movw	r8, r12
    1072:	06 2e       	mov	r0, r22
    1074:	04 c0       	rjmp	.+8      	; 0x107e <_fpadd_parts+0x132>
    1076:	96 94       	lsr	r9
    1078:	87 94       	ror	r8
    107a:	77 94       	ror	r7
    107c:	67 94       	ror	r6
    107e:	0a 94       	dec	r0
    1080:	d2 f7       	brpl	.-12     	; 0x1076 <_fpadd_parts+0x12a>
    1082:	21 e0       	ldi	r18, 0x01	; 1
    1084:	30 e0       	ldi	r19, 0x00	; 0
    1086:	40 e0       	ldi	r20, 0x00	; 0
    1088:	50 e0       	ldi	r21, 0x00	; 0
    108a:	04 c0       	rjmp	.+8      	; 0x1094 <_fpadd_parts+0x148>
    108c:	22 0f       	add	r18, r18
    108e:	33 1f       	adc	r19, r19
    1090:	44 1f       	adc	r20, r20
    1092:	55 1f       	adc	r21, r21
    1094:	6a 95       	dec	r22
    1096:	d2 f7       	brpl	.-12     	; 0x108c <_fpadd_parts+0x140>
    1098:	21 50       	subi	r18, 0x01	; 1
    109a:	30 40       	sbci	r19, 0x00	; 0
    109c:	40 40       	sbci	r20, 0x00	; 0
    109e:	50 40       	sbci	r21, 0x00	; 0
    10a0:	2a 21       	and	r18, r10
    10a2:	3b 21       	and	r19, r11
    10a4:	4c 21       	and	r20, r12
    10a6:	5d 21       	and	r21, r13
    10a8:	21 15       	cp	r18, r1
    10aa:	31 05       	cpc	r19, r1
    10ac:	41 05       	cpc	r20, r1
    10ae:	51 05       	cpc	r21, r1
    10b0:	21 f0       	breq	.+8      	; 0x10ba <_fpadd_parts+0x16e>
    10b2:	21 e0       	ldi	r18, 0x01	; 1
    10b4:	30 e0       	ldi	r19, 0x00	; 0
    10b6:	40 e0       	ldi	r20, 0x00	; 0
    10b8:	50 e0       	ldi	r21, 0x00	; 0
    10ba:	59 01       	movw	r10, r18
    10bc:	6a 01       	movw	r12, r20
    10be:	a6 28       	or	r10, r6
    10c0:	b7 28       	or	r11, r7
    10c2:	c8 28       	or	r12, r8
    10c4:	d9 28       	or	r13, r9
    10c6:	0b c0       	rjmp	.+22     	; 0x10de <_fpadd_parts+0x192>
    10c8:	82 15       	cp	r24, r2
    10ca:	93 05       	cpc	r25, r3
    10cc:	2c f0       	brlt	.+10     	; 0x10d8 <_fpadd_parts+0x18c>
    10ce:	1c 01       	movw	r2, r24
    10d0:	aa 24       	eor	r10, r10
    10d2:	bb 24       	eor	r11, r11
    10d4:	65 01       	movw	r12, r10
    10d6:	03 c0       	rjmp	.+6      	; 0x10de <_fpadd_parts+0x192>
    10d8:	ee 24       	eor	r14, r14
    10da:	ff 24       	eor	r15, r15
    10dc:	87 01       	movw	r16, r14
    10de:	11 96       	adiw	r26, 0x01	; 1
    10e0:	9c 91       	ld	r25, X
    10e2:	d2 01       	movw	r26, r4
    10e4:	11 96       	adiw	r26, 0x01	; 1
    10e6:	8c 91       	ld	r24, X
    10e8:	98 17       	cp	r25, r24
    10ea:	09 f4       	brne	.+2      	; 0x10ee <_fpadd_parts+0x1a2>
    10ec:	45 c0       	rjmp	.+138    	; 0x1178 <_fpadd_parts+0x22c>
    10ee:	99 23       	and	r25, r25
    10f0:	39 f0       	breq	.+14     	; 0x1100 <_fpadd_parts+0x1b4>
    10f2:	a8 01       	movw	r20, r16
    10f4:	97 01       	movw	r18, r14
    10f6:	2a 19       	sub	r18, r10
    10f8:	3b 09       	sbc	r19, r11
    10fa:	4c 09       	sbc	r20, r12
    10fc:	5d 09       	sbc	r21, r13
    10fe:	06 c0       	rjmp	.+12     	; 0x110c <_fpadd_parts+0x1c0>
    1100:	a6 01       	movw	r20, r12
    1102:	95 01       	movw	r18, r10
    1104:	2e 19       	sub	r18, r14
    1106:	3f 09       	sbc	r19, r15
    1108:	40 0b       	sbc	r20, r16
    110a:	51 0b       	sbc	r21, r17
    110c:	57 fd       	sbrc	r21, 7
    110e:	08 c0       	rjmp	.+16     	; 0x1120 <_fpadd_parts+0x1d4>
    1110:	11 82       	std	Z+1, r1	; 0x01
    1112:	33 82       	std	Z+3, r3	; 0x03
    1114:	22 82       	std	Z+2, r2	; 0x02
    1116:	24 83       	std	Z+4, r18	; 0x04
    1118:	35 83       	std	Z+5, r19	; 0x05
    111a:	46 83       	std	Z+6, r20	; 0x06
    111c:	57 83       	std	Z+7, r21	; 0x07
    111e:	1d c0       	rjmp	.+58     	; 0x115a <_fpadd_parts+0x20e>
    1120:	81 e0       	ldi	r24, 0x01	; 1
    1122:	81 83       	std	Z+1, r24	; 0x01
    1124:	33 82       	std	Z+3, r3	; 0x03
    1126:	22 82       	std	Z+2, r2	; 0x02
    1128:	88 27       	eor	r24, r24
    112a:	99 27       	eor	r25, r25
    112c:	dc 01       	movw	r26, r24
    112e:	82 1b       	sub	r24, r18
    1130:	93 0b       	sbc	r25, r19
    1132:	a4 0b       	sbc	r26, r20
    1134:	b5 0b       	sbc	r27, r21
    1136:	84 83       	std	Z+4, r24	; 0x04
    1138:	95 83       	std	Z+5, r25	; 0x05
    113a:	a6 83       	std	Z+6, r26	; 0x06
    113c:	b7 83       	std	Z+7, r27	; 0x07
    113e:	0d c0       	rjmp	.+26     	; 0x115a <_fpadd_parts+0x20e>
    1140:	22 0f       	add	r18, r18
    1142:	33 1f       	adc	r19, r19
    1144:	44 1f       	adc	r20, r20
    1146:	55 1f       	adc	r21, r21
    1148:	24 83       	std	Z+4, r18	; 0x04
    114a:	35 83       	std	Z+5, r19	; 0x05
    114c:	46 83       	std	Z+6, r20	; 0x06
    114e:	57 83       	std	Z+7, r21	; 0x07
    1150:	82 81       	ldd	r24, Z+2	; 0x02
    1152:	93 81       	ldd	r25, Z+3	; 0x03
    1154:	01 97       	sbiw	r24, 0x01	; 1
    1156:	93 83       	std	Z+3, r25	; 0x03
    1158:	82 83       	std	Z+2, r24	; 0x02
    115a:	24 81       	ldd	r18, Z+4	; 0x04
    115c:	35 81       	ldd	r19, Z+5	; 0x05
    115e:	46 81       	ldd	r20, Z+6	; 0x06
    1160:	57 81       	ldd	r21, Z+7	; 0x07
    1162:	da 01       	movw	r26, r20
    1164:	c9 01       	movw	r24, r18
    1166:	01 97       	sbiw	r24, 0x01	; 1
    1168:	a1 09       	sbc	r26, r1
    116a:	b1 09       	sbc	r27, r1
    116c:	8f 5f       	subi	r24, 0xFF	; 255
    116e:	9f 4f       	sbci	r25, 0xFF	; 255
    1170:	af 4f       	sbci	r26, 0xFF	; 255
    1172:	bf 43       	sbci	r27, 0x3F	; 63
    1174:	28 f3       	brcs	.-54     	; 0x1140 <_fpadd_parts+0x1f4>
    1176:	0b c0       	rjmp	.+22     	; 0x118e <_fpadd_parts+0x242>
    1178:	91 83       	std	Z+1, r25	; 0x01
    117a:	33 82       	std	Z+3, r3	; 0x03
    117c:	22 82       	std	Z+2, r2	; 0x02
    117e:	ea 0c       	add	r14, r10
    1180:	fb 1c       	adc	r15, r11
    1182:	0c 1d       	adc	r16, r12
    1184:	1d 1d       	adc	r17, r13
    1186:	e4 82       	std	Z+4, r14	; 0x04
    1188:	f5 82       	std	Z+5, r15	; 0x05
    118a:	06 83       	std	Z+6, r16	; 0x06
    118c:	17 83       	std	Z+7, r17	; 0x07
    118e:	83 e0       	ldi	r24, 0x03	; 3
    1190:	80 83       	st	Z, r24
    1192:	24 81       	ldd	r18, Z+4	; 0x04
    1194:	35 81       	ldd	r19, Z+5	; 0x05
    1196:	46 81       	ldd	r20, Z+6	; 0x06
    1198:	57 81       	ldd	r21, Z+7	; 0x07
    119a:	57 ff       	sbrs	r21, 7
    119c:	1a c0       	rjmp	.+52     	; 0x11d2 <_fpadd_parts+0x286>
    119e:	c9 01       	movw	r24, r18
    11a0:	aa 27       	eor	r26, r26
    11a2:	97 fd       	sbrc	r25, 7
    11a4:	a0 95       	com	r26
    11a6:	ba 2f       	mov	r27, r26
    11a8:	81 70       	andi	r24, 0x01	; 1
    11aa:	90 70       	andi	r25, 0x00	; 0
    11ac:	a0 70       	andi	r26, 0x00	; 0
    11ae:	b0 70       	andi	r27, 0x00	; 0
    11b0:	56 95       	lsr	r21
    11b2:	47 95       	ror	r20
    11b4:	37 95       	ror	r19
    11b6:	27 95       	ror	r18
    11b8:	82 2b       	or	r24, r18
    11ba:	93 2b       	or	r25, r19
    11bc:	a4 2b       	or	r26, r20
    11be:	b5 2b       	or	r27, r21
    11c0:	84 83       	std	Z+4, r24	; 0x04
    11c2:	95 83       	std	Z+5, r25	; 0x05
    11c4:	a6 83       	std	Z+6, r26	; 0x06
    11c6:	b7 83       	std	Z+7, r27	; 0x07
    11c8:	82 81       	ldd	r24, Z+2	; 0x02
    11ca:	93 81       	ldd	r25, Z+3	; 0x03
    11cc:	01 96       	adiw	r24, 0x01	; 1
    11ce:	93 83       	std	Z+3, r25	; 0x03
    11d0:	82 83       	std	Z+2, r24	; 0x02
    11d2:	df 01       	movw	r26, r30
    11d4:	01 c0       	rjmp	.+2      	; 0x11d8 <_fpadd_parts+0x28c>
    11d6:	d2 01       	movw	r26, r4
    11d8:	cd 01       	movw	r24, r26
    11da:	cd b7       	in	r28, 0x3d	; 61
    11dc:	de b7       	in	r29, 0x3e	; 62
    11de:	e2 e1       	ldi	r30, 0x12	; 18
    11e0:	0c 94 46 0e 	jmp	0x1c8c	; 0x1c8c <__epilogue_restores__>

000011e4 <__subsf3>:
    11e4:	a0 e2       	ldi	r26, 0x20	; 32
    11e6:	b0 e0       	ldi	r27, 0x00	; 0
    11e8:	e8 ef       	ldi	r30, 0xF8	; 248
    11ea:	f8 e0       	ldi	r31, 0x08	; 8
    11ec:	0c 94 36 0e 	jmp	0x1c6c	; 0x1c6c <__prologue_saves__+0x18>
    11f0:	69 83       	std	Y+1, r22	; 0x01
    11f2:	7a 83       	std	Y+2, r23	; 0x02
    11f4:	8b 83       	std	Y+3, r24	; 0x03
    11f6:	9c 83       	std	Y+4, r25	; 0x04
    11f8:	2d 83       	std	Y+5, r18	; 0x05
    11fa:	3e 83       	std	Y+6, r19	; 0x06
    11fc:	4f 83       	std	Y+7, r20	; 0x07
    11fe:	58 87       	std	Y+8, r21	; 0x08
    1200:	e9 e0       	ldi	r30, 0x09	; 9
    1202:	ee 2e       	mov	r14, r30
    1204:	f1 2c       	mov	r15, r1
    1206:	ec 0e       	add	r14, r28
    1208:	fd 1e       	adc	r15, r29
    120a:	ce 01       	movw	r24, r28
    120c:	01 96       	adiw	r24, 0x01	; 1
    120e:	b7 01       	movw	r22, r14
    1210:	0e 94 59 0d 	call	0x1ab2	; 0x1ab2 <__unpack_f>
    1214:	8e 01       	movw	r16, r28
    1216:	0f 5e       	subi	r16, 0xEF	; 239
    1218:	1f 4f       	sbci	r17, 0xFF	; 255
    121a:	ce 01       	movw	r24, r28
    121c:	05 96       	adiw	r24, 0x05	; 5
    121e:	b8 01       	movw	r22, r16
    1220:	0e 94 59 0d 	call	0x1ab2	; 0x1ab2 <__unpack_f>
    1224:	8a 89       	ldd	r24, Y+18	; 0x12
    1226:	91 e0       	ldi	r25, 0x01	; 1
    1228:	89 27       	eor	r24, r25
    122a:	8a 8b       	std	Y+18, r24	; 0x12
    122c:	c7 01       	movw	r24, r14
    122e:	b8 01       	movw	r22, r16
    1230:	ae 01       	movw	r20, r28
    1232:	47 5e       	subi	r20, 0xE7	; 231
    1234:	5f 4f       	sbci	r21, 0xFF	; 255
    1236:	0e 94 a6 07 	call	0xf4c	; 0xf4c <_fpadd_parts>
    123a:	0e 94 84 0c 	call	0x1908	; 0x1908 <__pack_f>
    123e:	a0 96       	adiw	r28, 0x20	; 32
    1240:	e6 e0       	ldi	r30, 0x06	; 6
    1242:	0c 94 52 0e 	jmp	0x1ca4	; 0x1ca4 <__epilogue_restores__+0x18>

00001246 <__addsf3>:
    1246:	a0 e2       	ldi	r26, 0x20	; 32
    1248:	b0 e0       	ldi	r27, 0x00	; 0
    124a:	e9 e2       	ldi	r30, 0x29	; 41
    124c:	f9 e0       	ldi	r31, 0x09	; 9
    124e:	0c 94 36 0e 	jmp	0x1c6c	; 0x1c6c <__prologue_saves__+0x18>
    1252:	69 83       	std	Y+1, r22	; 0x01
    1254:	7a 83       	std	Y+2, r23	; 0x02
    1256:	8b 83       	std	Y+3, r24	; 0x03
    1258:	9c 83       	std	Y+4, r25	; 0x04
    125a:	2d 83       	std	Y+5, r18	; 0x05
    125c:	3e 83       	std	Y+6, r19	; 0x06
    125e:	4f 83       	std	Y+7, r20	; 0x07
    1260:	58 87       	std	Y+8, r21	; 0x08
    1262:	f9 e0       	ldi	r31, 0x09	; 9
    1264:	ef 2e       	mov	r14, r31
    1266:	f1 2c       	mov	r15, r1
    1268:	ec 0e       	add	r14, r28
    126a:	fd 1e       	adc	r15, r29
    126c:	ce 01       	movw	r24, r28
    126e:	01 96       	adiw	r24, 0x01	; 1
    1270:	b7 01       	movw	r22, r14
    1272:	0e 94 59 0d 	call	0x1ab2	; 0x1ab2 <__unpack_f>
    1276:	8e 01       	movw	r16, r28
    1278:	0f 5e       	subi	r16, 0xEF	; 239
    127a:	1f 4f       	sbci	r17, 0xFF	; 255
    127c:	ce 01       	movw	r24, r28
    127e:	05 96       	adiw	r24, 0x05	; 5
    1280:	b8 01       	movw	r22, r16
    1282:	0e 94 59 0d 	call	0x1ab2	; 0x1ab2 <__unpack_f>
    1286:	c7 01       	movw	r24, r14
    1288:	b8 01       	movw	r22, r16
    128a:	ae 01       	movw	r20, r28
    128c:	47 5e       	subi	r20, 0xE7	; 231
    128e:	5f 4f       	sbci	r21, 0xFF	; 255
    1290:	0e 94 a6 07 	call	0xf4c	; 0xf4c <_fpadd_parts>
    1294:	0e 94 84 0c 	call	0x1908	; 0x1908 <__pack_f>
    1298:	a0 96       	adiw	r28, 0x20	; 32
    129a:	e6 e0       	ldi	r30, 0x06	; 6
    129c:	0c 94 52 0e 	jmp	0x1ca4	; 0x1ca4 <__epilogue_restores__+0x18>

000012a0 <__mulsf3>:
    12a0:	a0 e2       	ldi	r26, 0x20	; 32
    12a2:	b0 e0       	ldi	r27, 0x00	; 0
    12a4:	e6 e5       	ldi	r30, 0x56	; 86
    12a6:	f9 e0       	ldi	r31, 0x09	; 9
    12a8:	0c 94 2a 0e 	jmp	0x1c54	; 0x1c54 <__prologue_saves__>
    12ac:	69 83       	std	Y+1, r22	; 0x01
    12ae:	7a 83       	std	Y+2, r23	; 0x02
    12b0:	8b 83       	std	Y+3, r24	; 0x03
    12b2:	9c 83       	std	Y+4, r25	; 0x04
    12b4:	2d 83       	std	Y+5, r18	; 0x05
    12b6:	3e 83       	std	Y+6, r19	; 0x06
    12b8:	4f 83       	std	Y+7, r20	; 0x07
    12ba:	58 87       	std	Y+8, r21	; 0x08
    12bc:	ce 01       	movw	r24, r28
    12be:	01 96       	adiw	r24, 0x01	; 1
    12c0:	be 01       	movw	r22, r28
    12c2:	67 5f       	subi	r22, 0xF7	; 247
    12c4:	7f 4f       	sbci	r23, 0xFF	; 255
    12c6:	0e 94 59 0d 	call	0x1ab2	; 0x1ab2 <__unpack_f>
    12ca:	ce 01       	movw	r24, r28
    12cc:	05 96       	adiw	r24, 0x05	; 5
    12ce:	be 01       	movw	r22, r28
    12d0:	6f 5e       	subi	r22, 0xEF	; 239
    12d2:	7f 4f       	sbci	r23, 0xFF	; 255
    12d4:	0e 94 59 0d 	call	0x1ab2	; 0x1ab2 <__unpack_f>
    12d8:	99 85       	ldd	r25, Y+9	; 0x09
    12da:	92 30       	cpi	r25, 0x02	; 2
    12dc:	88 f0       	brcs	.+34     	; 0x1300 <__mulsf3+0x60>
    12de:	89 89       	ldd	r24, Y+17	; 0x11
    12e0:	82 30       	cpi	r24, 0x02	; 2
    12e2:	c8 f0       	brcs	.+50     	; 0x1316 <__mulsf3+0x76>
    12e4:	94 30       	cpi	r25, 0x04	; 4
    12e6:	19 f4       	brne	.+6      	; 0x12ee <__mulsf3+0x4e>
    12e8:	82 30       	cpi	r24, 0x02	; 2
    12ea:	51 f4       	brne	.+20     	; 0x1300 <__mulsf3+0x60>
    12ec:	04 c0       	rjmp	.+8      	; 0x12f6 <__mulsf3+0x56>
    12ee:	84 30       	cpi	r24, 0x04	; 4
    12f0:	29 f4       	brne	.+10     	; 0x12fc <__mulsf3+0x5c>
    12f2:	92 30       	cpi	r25, 0x02	; 2
    12f4:	81 f4       	brne	.+32     	; 0x1316 <__mulsf3+0x76>
    12f6:	80 e0       	ldi	r24, 0x00	; 0
    12f8:	92 e0       	ldi	r25, 0x02	; 2
    12fa:	c6 c0       	rjmp	.+396    	; 0x1488 <__mulsf3+0x1e8>
    12fc:	92 30       	cpi	r25, 0x02	; 2
    12fe:	49 f4       	brne	.+18     	; 0x1312 <__mulsf3+0x72>
    1300:	20 e0       	ldi	r18, 0x00	; 0
    1302:	9a 85       	ldd	r25, Y+10	; 0x0a
    1304:	8a 89       	ldd	r24, Y+18	; 0x12
    1306:	98 13       	cpse	r25, r24
    1308:	21 e0       	ldi	r18, 0x01	; 1
    130a:	2a 87       	std	Y+10, r18	; 0x0a
    130c:	ce 01       	movw	r24, r28
    130e:	09 96       	adiw	r24, 0x09	; 9
    1310:	bb c0       	rjmp	.+374    	; 0x1488 <__mulsf3+0x1e8>
    1312:	82 30       	cpi	r24, 0x02	; 2
    1314:	49 f4       	brne	.+18     	; 0x1328 <__mulsf3+0x88>
    1316:	20 e0       	ldi	r18, 0x00	; 0
    1318:	9a 85       	ldd	r25, Y+10	; 0x0a
    131a:	8a 89       	ldd	r24, Y+18	; 0x12
    131c:	98 13       	cpse	r25, r24
    131e:	21 e0       	ldi	r18, 0x01	; 1
    1320:	2a 8b       	std	Y+18, r18	; 0x12
    1322:	ce 01       	movw	r24, r28
    1324:	41 96       	adiw	r24, 0x11	; 17
    1326:	b0 c0       	rjmp	.+352    	; 0x1488 <__mulsf3+0x1e8>
    1328:	2d 84       	ldd	r2, Y+13	; 0x0d
    132a:	3e 84       	ldd	r3, Y+14	; 0x0e
    132c:	4f 84       	ldd	r4, Y+15	; 0x0f
    132e:	58 88       	ldd	r5, Y+16	; 0x10
    1330:	6d 88       	ldd	r6, Y+21	; 0x15
    1332:	7e 88       	ldd	r7, Y+22	; 0x16
    1334:	8f 88       	ldd	r8, Y+23	; 0x17
    1336:	98 8c       	ldd	r9, Y+24	; 0x18
    1338:	ee 24       	eor	r14, r14
    133a:	ff 24       	eor	r15, r15
    133c:	87 01       	movw	r16, r14
    133e:	aa 24       	eor	r10, r10
    1340:	bb 24       	eor	r11, r11
    1342:	65 01       	movw	r12, r10
    1344:	40 e0       	ldi	r20, 0x00	; 0
    1346:	50 e0       	ldi	r21, 0x00	; 0
    1348:	60 e0       	ldi	r22, 0x00	; 0
    134a:	70 e0       	ldi	r23, 0x00	; 0
    134c:	e0 e0       	ldi	r30, 0x00	; 0
    134e:	f0 e0       	ldi	r31, 0x00	; 0
    1350:	c1 01       	movw	r24, r2
    1352:	81 70       	andi	r24, 0x01	; 1
    1354:	90 70       	andi	r25, 0x00	; 0
    1356:	89 2b       	or	r24, r25
    1358:	e9 f0       	breq	.+58     	; 0x1394 <__mulsf3+0xf4>
    135a:	e6 0c       	add	r14, r6
    135c:	f7 1c       	adc	r15, r7
    135e:	08 1d       	adc	r16, r8
    1360:	19 1d       	adc	r17, r9
    1362:	9a 01       	movw	r18, r20
    1364:	ab 01       	movw	r20, r22
    1366:	2a 0d       	add	r18, r10
    1368:	3b 1d       	adc	r19, r11
    136a:	4c 1d       	adc	r20, r12
    136c:	5d 1d       	adc	r21, r13
    136e:	80 e0       	ldi	r24, 0x00	; 0
    1370:	90 e0       	ldi	r25, 0x00	; 0
    1372:	a0 e0       	ldi	r26, 0x00	; 0
    1374:	b0 e0       	ldi	r27, 0x00	; 0
    1376:	e6 14       	cp	r14, r6
    1378:	f7 04       	cpc	r15, r7
    137a:	08 05       	cpc	r16, r8
    137c:	19 05       	cpc	r17, r9
    137e:	20 f4       	brcc	.+8      	; 0x1388 <__mulsf3+0xe8>
    1380:	81 e0       	ldi	r24, 0x01	; 1
    1382:	90 e0       	ldi	r25, 0x00	; 0
    1384:	a0 e0       	ldi	r26, 0x00	; 0
    1386:	b0 e0       	ldi	r27, 0x00	; 0
    1388:	ba 01       	movw	r22, r20
    138a:	a9 01       	movw	r20, r18
    138c:	48 0f       	add	r20, r24
    138e:	59 1f       	adc	r21, r25
    1390:	6a 1f       	adc	r22, r26
    1392:	7b 1f       	adc	r23, r27
    1394:	aa 0c       	add	r10, r10
    1396:	bb 1c       	adc	r11, r11
    1398:	cc 1c       	adc	r12, r12
    139a:	dd 1c       	adc	r13, r13
    139c:	97 fe       	sbrs	r9, 7
    139e:	08 c0       	rjmp	.+16     	; 0x13b0 <__mulsf3+0x110>
    13a0:	81 e0       	ldi	r24, 0x01	; 1
    13a2:	90 e0       	ldi	r25, 0x00	; 0
    13a4:	a0 e0       	ldi	r26, 0x00	; 0
    13a6:	b0 e0       	ldi	r27, 0x00	; 0
    13a8:	a8 2a       	or	r10, r24
    13aa:	b9 2a       	or	r11, r25
    13ac:	ca 2a       	or	r12, r26
    13ae:	db 2a       	or	r13, r27
    13b0:	31 96       	adiw	r30, 0x01	; 1
    13b2:	e0 32       	cpi	r30, 0x20	; 32
    13b4:	f1 05       	cpc	r31, r1
    13b6:	49 f0       	breq	.+18     	; 0x13ca <__mulsf3+0x12a>
    13b8:	66 0c       	add	r6, r6
    13ba:	77 1c       	adc	r7, r7
    13bc:	88 1c       	adc	r8, r8
    13be:	99 1c       	adc	r9, r9
    13c0:	56 94       	lsr	r5
    13c2:	47 94       	ror	r4
    13c4:	37 94       	ror	r3
    13c6:	27 94       	ror	r2
    13c8:	c3 cf       	rjmp	.-122    	; 0x1350 <__mulsf3+0xb0>
    13ca:	fa 85       	ldd	r31, Y+10	; 0x0a
    13cc:	ea 89       	ldd	r30, Y+18	; 0x12
    13ce:	2b 89       	ldd	r18, Y+19	; 0x13
    13d0:	3c 89       	ldd	r19, Y+20	; 0x14
    13d2:	8b 85       	ldd	r24, Y+11	; 0x0b
    13d4:	9c 85       	ldd	r25, Y+12	; 0x0c
    13d6:	28 0f       	add	r18, r24
    13d8:	39 1f       	adc	r19, r25
    13da:	2e 5f       	subi	r18, 0xFE	; 254
    13dc:	3f 4f       	sbci	r19, 0xFF	; 255
    13de:	17 c0       	rjmp	.+46     	; 0x140e <__mulsf3+0x16e>
    13e0:	ca 01       	movw	r24, r20
    13e2:	81 70       	andi	r24, 0x01	; 1
    13e4:	90 70       	andi	r25, 0x00	; 0
    13e6:	89 2b       	or	r24, r25
    13e8:	61 f0       	breq	.+24     	; 0x1402 <__mulsf3+0x162>
    13ea:	16 95       	lsr	r17
    13ec:	07 95       	ror	r16
    13ee:	f7 94       	ror	r15
    13f0:	e7 94       	ror	r14
    13f2:	80 e0       	ldi	r24, 0x00	; 0
    13f4:	90 e0       	ldi	r25, 0x00	; 0
    13f6:	a0 e0       	ldi	r26, 0x00	; 0
    13f8:	b0 e8       	ldi	r27, 0x80	; 128
    13fa:	e8 2a       	or	r14, r24
    13fc:	f9 2a       	or	r15, r25
    13fe:	0a 2b       	or	r16, r26
    1400:	1b 2b       	or	r17, r27
    1402:	76 95       	lsr	r23
    1404:	67 95       	ror	r22
    1406:	57 95       	ror	r21
    1408:	47 95       	ror	r20
    140a:	2f 5f       	subi	r18, 0xFF	; 255
    140c:	3f 4f       	sbci	r19, 0xFF	; 255
    140e:	77 fd       	sbrc	r23, 7
    1410:	e7 cf       	rjmp	.-50     	; 0x13e0 <__mulsf3+0x140>
    1412:	0c c0       	rjmp	.+24     	; 0x142c <__mulsf3+0x18c>
    1414:	44 0f       	add	r20, r20
    1416:	55 1f       	adc	r21, r21
    1418:	66 1f       	adc	r22, r22
    141a:	77 1f       	adc	r23, r23
    141c:	17 fd       	sbrc	r17, 7
    141e:	41 60       	ori	r20, 0x01	; 1
    1420:	ee 0c       	add	r14, r14
    1422:	ff 1c       	adc	r15, r15
    1424:	00 1f       	adc	r16, r16
    1426:	11 1f       	adc	r17, r17
    1428:	21 50       	subi	r18, 0x01	; 1
    142a:	30 40       	sbci	r19, 0x00	; 0
    142c:	40 30       	cpi	r20, 0x00	; 0
    142e:	90 e0       	ldi	r25, 0x00	; 0
    1430:	59 07       	cpc	r21, r25
    1432:	90 e0       	ldi	r25, 0x00	; 0
    1434:	69 07       	cpc	r22, r25
    1436:	90 e4       	ldi	r25, 0x40	; 64
    1438:	79 07       	cpc	r23, r25
    143a:	60 f3       	brcs	.-40     	; 0x1414 <__mulsf3+0x174>
    143c:	2b 8f       	std	Y+27, r18	; 0x1b
    143e:	3c 8f       	std	Y+28, r19	; 0x1c
    1440:	db 01       	movw	r26, r22
    1442:	ca 01       	movw	r24, r20
    1444:	8f 77       	andi	r24, 0x7F	; 127
    1446:	90 70       	andi	r25, 0x00	; 0
    1448:	a0 70       	andi	r26, 0x00	; 0
    144a:	b0 70       	andi	r27, 0x00	; 0
    144c:	80 34       	cpi	r24, 0x40	; 64
    144e:	91 05       	cpc	r25, r1
    1450:	a1 05       	cpc	r26, r1
    1452:	b1 05       	cpc	r27, r1
    1454:	61 f4       	brne	.+24     	; 0x146e <__mulsf3+0x1ce>
    1456:	47 fd       	sbrc	r20, 7
    1458:	0a c0       	rjmp	.+20     	; 0x146e <__mulsf3+0x1ce>
    145a:	e1 14       	cp	r14, r1
    145c:	f1 04       	cpc	r15, r1
    145e:	01 05       	cpc	r16, r1
    1460:	11 05       	cpc	r17, r1
    1462:	29 f0       	breq	.+10     	; 0x146e <__mulsf3+0x1ce>
    1464:	40 5c       	subi	r20, 0xC0	; 192
    1466:	5f 4f       	sbci	r21, 0xFF	; 255
    1468:	6f 4f       	sbci	r22, 0xFF	; 255
    146a:	7f 4f       	sbci	r23, 0xFF	; 255
    146c:	40 78       	andi	r20, 0x80	; 128
    146e:	1a 8e       	std	Y+26, r1	; 0x1a
    1470:	fe 17       	cp	r31, r30
    1472:	11 f0       	breq	.+4      	; 0x1478 <__mulsf3+0x1d8>
    1474:	81 e0       	ldi	r24, 0x01	; 1
    1476:	8a 8f       	std	Y+26, r24	; 0x1a
    1478:	4d 8f       	std	Y+29, r20	; 0x1d
    147a:	5e 8f       	std	Y+30, r21	; 0x1e
    147c:	6f 8f       	std	Y+31, r22	; 0x1f
    147e:	78 a3       	std	Y+32, r23	; 0x20
    1480:	83 e0       	ldi	r24, 0x03	; 3
    1482:	89 8f       	std	Y+25, r24	; 0x19
    1484:	ce 01       	movw	r24, r28
    1486:	49 96       	adiw	r24, 0x19	; 25
    1488:	0e 94 84 0c 	call	0x1908	; 0x1908 <__pack_f>
    148c:	a0 96       	adiw	r28, 0x20	; 32
    148e:	e2 e1       	ldi	r30, 0x12	; 18
    1490:	0c 94 46 0e 	jmp	0x1c8c	; 0x1c8c <__epilogue_restores__>

00001494 <__gtsf2>:
    1494:	a8 e1       	ldi	r26, 0x18	; 24
    1496:	b0 e0       	ldi	r27, 0x00	; 0
    1498:	e0 e5       	ldi	r30, 0x50	; 80
    149a:	fa e0       	ldi	r31, 0x0A	; 10
    149c:	0c 94 36 0e 	jmp	0x1c6c	; 0x1c6c <__prologue_saves__+0x18>
    14a0:	69 83       	std	Y+1, r22	; 0x01
    14a2:	7a 83       	std	Y+2, r23	; 0x02
    14a4:	8b 83       	std	Y+3, r24	; 0x03
    14a6:	9c 83       	std	Y+4, r25	; 0x04
    14a8:	2d 83       	std	Y+5, r18	; 0x05
    14aa:	3e 83       	std	Y+6, r19	; 0x06
    14ac:	4f 83       	std	Y+7, r20	; 0x07
    14ae:	58 87       	std	Y+8, r21	; 0x08
    14b0:	89 e0       	ldi	r24, 0x09	; 9
    14b2:	e8 2e       	mov	r14, r24
    14b4:	f1 2c       	mov	r15, r1
    14b6:	ec 0e       	add	r14, r28
    14b8:	fd 1e       	adc	r15, r29
    14ba:	ce 01       	movw	r24, r28
    14bc:	01 96       	adiw	r24, 0x01	; 1
    14be:	b7 01       	movw	r22, r14
    14c0:	0e 94 59 0d 	call	0x1ab2	; 0x1ab2 <__unpack_f>
    14c4:	8e 01       	movw	r16, r28
    14c6:	0f 5e       	subi	r16, 0xEF	; 239
    14c8:	1f 4f       	sbci	r17, 0xFF	; 255
    14ca:	ce 01       	movw	r24, r28
    14cc:	05 96       	adiw	r24, 0x05	; 5
    14ce:	b8 01       	movw	r22, r16
    14d0:	0e 94 59 0d 	call	0x1ab2	; 0x1ab2 <__unpack_f>
    14d4:	89 85       	ldd	r24, Y+9	; 0x09
    14d6:	82 30       	cpi	r24, 0x02	; 2
    14d8:	40 f0       	brcs	.+16     	; 0x14ea <__gtsf2+0x56>
    14da:	89 89       	ldd	r24, Y+17	; 0x11
    14dc:	82 30       	cpi	r24, 0x02	; 2
    14de:	28 f0       	brcs	.+10     	; 0x14ea <__gtsf2+0x56>
    14e0:	c7 01       	movw	r24, r14
    14e2:	b8 01       	movw	r22, r16
    14e4:	0e 94 d1 0d 	call	0x1ba2	; 0x1ba2 <__fpcmp_parts_f>
    14e8:	01 c0       	rjmp	.+2      	; 0x14ec <__gtsf2+0x58>
    14ea:	8f ef       	ldi	r24, 0xFF	; 255
    14ec:	68 96       	adiw	r28, 0x18	; 24
    14ee:	e6 e0       	ldi	r30, 0x06	; 6
    14f0:	0c 94 52 0e 	jmp	0x1ca4	; 0x1ca4 <__epilogue_restores__+0x18>

000014f4 <__gesf2>:
    14f4:	a8 e1       	ldi	r26, 0x18	; 24
    14f6:	b0 e0       	ldi	r27, 0x00	; 0
    14f8:	e0 e8       	ldi	r30, 0x80	; 128
    14fa:	fa e0       	ldi	r31, 0x0A	; 10
    14fc:	0c 94 36 0e 	jmp	0x1c6c	; 0x1c6c <__prologue_saves__+0x18>
    1500:	69 83       	std	Y+1, r22	; 0x01
    1502:	7a 83       	std	Y+2, r23	; 0x02
    1504:	8b 83       	std	Y+3, r24	; 0x03
    1506:	9c 83       	std	Y+4, r25	; 0x04
    1508:	2d 83       	std	Y+5, r18	; 0x05
    150a:	3e 83       	std	Y+6, r19	; 0x06
    150c:	4f 83       	std	Y+7, r20	; 0x07
    150e:	58 87       	std	Y+8, r21	; 0x08
    1510:	89 e0       	ldi	r24, 0x09	; 9
    1512:	e8 2e       	mov	r14, r24
    1514:	f1 2c       	mov	r15, r1
    1516:	ec 0e       	add	r14, r28
    1518:	fd 1e       	adc	r15, r29
    151a:	ce 01       	movw	r24, r28
    151c:	01 96       	adiw	r24, 0x01	; 1
    151e:	b7 01       	movw	r22, r14
    1520:	0e 94 59 0d 	call	0x1ab2	; 0x1ab2 <__unpack_f>
    1524:	8e 01       	movw	r16, r28
    1526:	0f 5e       	subi	r16, 0xEF	; 239
    1528:	1f 4f       	sbci	r17, 0xFF	; 255
    152a:	ce 01       	movw	r24, r28
    152c:	05 96       	adiw	r24, 0x05	; 5
    152e:	b8 01       	movw	r22, r16
    1530:	0e 94 59 0d 	call	0x1ab2	; 0x1ab2 <__unpack_f>
    1534:	89 85       	ldd	r24, Y+9	; 0x09
    1536:	82 30       	cpi	r24, 0x02	; 2
    1538:	40 f0       	brcs	.+16     	; 0x154a <__gesf2+0x56>
    153a:	89 89       	ldd	r24, Y+17	; 0x11
    153c:	82 30       	cpi	r24, 0x02	; 2
    153e:	28 f0       	brcs	.+10     	; 0x154a <__gesf2+0x56>
    1540:	c7 01       	movw	r24, r14
    1542:	b8 01       	movw	r22, r16
    1544:	0e 94 d1 0d 	call	0x1ba2	; 0x1ba2 <__fpcmp_parts_f>
    1548:	01 c0       	rjmp	.+2      	; 0x154c <__gesf2+0x58>
    154a:	8f ef       	ldi	r24, 0xFF	; 255
    154c:	68 96       	adiw	r28, 0x18	; 24
    154e:	e6 e0       	ldi	r30, 0x06	; 6
    1550:	0c 94 52 0e 	jmp	0x1ca4	; 0x1ca4 <__epilogue_restores__+0x18>

00001554 <__ltsf2>:
    1554:	a8 e1       	ldi	r26, 0x18	; 24
    1556:	b0 e0       	ldi	r27, 0x00	; 0
    1558:	e0 eb       	ldi	r30, 0xB0	; 176
    155a:	fa e0       	ldi	r31, 0x0A	; 10
    155c:	0c 94 36 0e 	jmp	0x1c6c	; 0x1c6c <__prologue_saves__+0x18>
    1560:	69 83       	std	Y+1, r22	; 0x01
    1562:	7a 83       	std	Y+2, r23	; 0x02
    1564:	8b 83       	std	Y+3, r24	; 0x03
    1566:	9c 83       	std	Y+4, r25	; 0x04
    1568:	2d 83       	std	Y+5, r18	; 0x05
    156a:	3e 83       	std	Y+6, r19	; 0x06
    156c:	4f 83       	std	Y+7, r20	; 0x07
    156e:	58 87       	std	Y+8, r21	; 0x08
    1570:	89 e0       	ldi	r24, 0x09	; 9
    1572:	e8 2e       	mov	r14, r24
    1574:	f1 2c       	mov	r15, r1
    1576:	ec 0e       	add	r14, r28
    1578:	fd 1e       	adc	r15, r29
    157a:	ce 01       	movw	r24, r28
    157c:	01 96       	adiw	r24, 0x01	; 1
    157e:	b7 01       	movw	r22, r14
    1580:	0e 94 59 0d 	call	0x1ab2	; 0x1ab2 <__unpack_f>
    1584:	8e 01       	movw	r16, r28
    1586:	0f 5e       	subi	r16, 0xEF	; 239
    1588:	1f 4f       	sbci	r17, 0xFF	; 255
    158a:	ce 01       	movw	r24, r28
    158c:	05 96       	adiw	r24, 0x05	; 5
    158e:	b8 01       	movw	r22, r16
    1590:	0e 94 59 0d 	call	0x1ab2	; 0x1ab2 <__unpack_f>
    1594:	89 85       	ldd	r24, Y+9	; 0x09
    1596:	82 30       	cpi	r24, 0x02	; 2
    1598:	40 f0       	brcs	.+16     	; 0x15aa <__ltsf2+0x56>
    159a:	89 89       	ldd	r24, Y+17	; 0x11
    159c:	82 30       	cpi	r24, 0x02	; 2
    159e:	28 f0       	brcs	.+10     	; 0x15aa <__ltsf2+0x56>
    15a0:	c7 01       	movw	r24, r14
    15a2:	b8 01       	movw	r22, r16
    15a4:	0e 94 d1 0d 	call	0x1ba2	; 0x1ba2 <__fpcmp_parts_f>
    15a8:	01 c0       	rjmp	.+2      	; 0x15ac <__ltsf2+0x58>
    15aa:	81 e0       	ldi	r24, 0x01	; 1
    15ac:	68 96       	adiw	r28, 0x18	; 24
    15ae:	e6 e0       	ldi	r30, 0x06	; 6
    15b0:	0c 94 52 0e 	jmp	0x1ca4	; 0x1ca4 <__epilogue_restores__+0x18>

000015b4 <__lesf2>:
    15b4:	a8 e1       	ldi	r26, 0x18	; 24
    15b6:	b0 e0       	ldi	r27, 0x00	; 0
    15b8:	e0 ee       	ldi	r30, 0xE0	; 224
    15ba:	fa e0       	ldi	r31, 0x0A	; 10
    15bc:	0c 94 36 0e 	jmp	0x1c6c	; 0x1c6c <__prologue_saves__+0x18>
    15c0:	69 83       	std	Y+1, r22	; 0x01
    15c2:	7a 83       	std	Y+2, r23	; 0x02
    15c4:	8b 83       	std	Y+3, r24	; 0x03
    15c6:	9c 83       	std	Y+4, r25	; 0x04
    15c8:	2d 83       	std	Y+5, r18	; 0x05
    15ca:	3e 83       	std	Y+6, r19	; 0x06
    15cc:	4f 83       	std	Y+7, r20	; 0x07
    15ce:	58 87       	std	Y+8, r21	; 0x08
    15d0:	89 e0       	ldi	r24, 0x09	; 9
    15d2:	e8 2e       	mov	r14, r24
    15d4:	f1 2c       	mov	r15, r1
    15d6:	ec 0e       	add	r14, r28
    15d8:	fd 1e       	adc	r15, r29
    15da:	ce 01       	movw	r24, r28
    15dc:	01 96       	adiw	r24, 0x01	; 1
    15de:	b7 01       	movw	r22, r14
    15e0:	0e 94 59 0d 	call	0x1ab2	; 0x1ab2 <__unpack_f>
    15e4:	8e 01       	movw	r16, r28
    15e6:	0f 5e       	subi	r16, 0xEF	; 239
    15e8:	1f 4f       	sbci	r17, 0xFF	; 255
    15ea:	ce 01       	movw	r24, r28
    15ec:	05 96       	adiw	r24, 0x05	; 5
    15ee:	b8 01       	movw	r22, r16
    15f0:	0e 94 59 0d 	call	0x1ab2	; 0x1ab2 <__unpack_f>
    15f4:	89 85       	ldd	r24, Y+9	; 0x09
    15f6:	82 30       	cpi	r24, 0x02	; 2
    15f8:	40 f0       	brcs	.+16     	; 0x160a <__lesf2+0x56>
    15fa:	89 89       	ldd	r24, Y+17	; 0x11
    15fc:	82 30       	cpi	r24, 0x02	; 2
    15fe:	28 f0       	brcs	.+10     	; 0x160a <__lesf2+0x56>
    1600:	c7 01       	movw	r24, r14
    1602:	b8 01       	movw	r22, r16
    1604:	0e 94 d1 0d 	call	0x1ba2	; 0x1ba2 <__fpcmp_parts_f>
    1608:	01 c0       	rjmp	.+2      	; 0x160c <__lesf2+0x58>
    160a:	81 e0       	ldi	r24, 0x01	; 1
    160c:	68 96       	adiw	r28, 0x18	; 24
    160e:	e6 e0       	ldi	r30, 0x06	; 6
    1610:	0c 94 52 0e 	jmp	0x1ca4	; 0x1ca4 <__epilogue_restores__+0x18>

00001614 <__floatsisf>:
    1614:	a8 e0       	ldi	r26, 0x08	; 8
    1616:	b0 e0       	ldi	r27, 0x00	; 0
    1618:	e0 e1       	ldi	r30, 0x10	; 16
    161a:	fb e0       	ldi	r31, 0x0B	; 11
    161c:	0c 94 33 0e 	jmp	0x1c66	; 0x1c66 <__prologue_saves__+0x12>
    1620:	9b 01       	movw	r18, r22
    1622:	ac 01       	movw	r20, r24
    1624:	83 e0       	ldi	r24, 0x03	; 3
    1626:	89 83       	std	Y+1, r24	; 0x01
    1628:	da 01       	movw	r26, r20
    162a:	c9 01       	movw	r24, r18
    162c:	88 27       	eor	r24, r24
    162e:	b7 fd       	sbrc	r27, 7
    1630:	83 95       	inc	r24
    1632:	99 27       	eor	r25, r25
    1634:	aa 27       	eor	r26, r26
    1636:	bb 27       	eor	r27, r27
    1638:	b8 2e       	mov	r11, r24
    163a:	21 15       	cp	r18, r1
    163c:	31 05       	cpc	r19, r1
    163e:	41 05       	cpc	r20, r1
    1640:	51 05       	cpc	r21, r1
    1642:	19 f4       	brne	.+6      	; 0x164a <__floatsisf+0x36>
    1644:	82 e0       	ldi	r24, 0x02	; 2
    1646:	89 83       	std	Y+1, r24	; 0x01
    1648:	3a c0       	rjmp	.+116    	; 0x16be <__floatsisf+0xaa>
    164a:	88 23       	and	r24, r24
    164c:	a9 f0       	breq	.+42     	; 0x1678 <__floatsisf+0x64>
    164e:	20 30       	cpi	r18, 0x00	; 0
    1650:	80 e0       	ldi	r24, 0x00	; 0
    1652:	38 07       	cpc	r19, r24
    1654:	80 e0       	ldi	r24, 0x00	; 0
    1656:	48 07       	cpc	r20, r24
    1658:	80 e8       	ldi	r24, 0x80	; 128
    165a:	58 07       	cpc	r21, r24
    165c:	29 f4       	brne	.+10     	; 0x1668 <__floatsisf+0x54>
    165e:	60 e0       	ldi	r22, 0x00	; 0
    1660:	70 e0       	ldi	r23, 0x00	; 0
    1662:	80 e0       	ldi	r24, 0x00	; 0
    1664:	9f ec       	ldi	r25, 0xCF	; 207
    1666:	30 c0       	rjmp	.+96     	; 0x16c8 <__floatsisf+0xb4>
    1668:	ee 24       	eor	r14, r14
    166a:	ff 24       	eor	r15, r15
    166c:	87 01       	movw	r16, r14
    166e:	e2 1a       	sub	r14, r18
    1670:	f3 0a       	sbc	r15, r19
    1672:	04 0b       	sbc	r16, r20
    1674:	15 0b       	sbc	r17, r21
    1676:	02 c0       	rjmp	.+4      	; 0x167c <__floatsisf+0x68>
    1678:	79 01       	movw	r14, r18
    167a:	8a 01       	movw	r16, r20
    167c:	8e e1       	ldi	r24, 0x1E	; 30
    167e:	c8 2e       	mov	r12, r24
    1680:	d1 2c       	mov	r13, r1
    1682:	dc 82       	std	Y+4, r13	; 0x04
    1684:	cb 82       	std	Y+3, r12	; 0x03
    1686:	ed 82       	std	Y+5, r14	; 0x05
    1688:	fe 82       	std	Y+6, r15	; 0x06
    168a:	0f 83       	std	Y+7, r16	; 0x07
    168c:	18 87       	std	Y+8, r17	; 0x08
    168e:	c8 01       	movw	r24, r16
    1690:	b7 01       	movw	r22, r14
    1692:	0e 94 35 0c 	call	0x186a	; 0x186a <__clzsi2>
    1696:	01 97       	sbiw	r24, 0x01	; 1
    1698:	18 16       	cp	r1, r24
    169a:	19 06       	cpc	r1, r25
    169c:	84 f4       	brge	.+32     	; 0x16be <__floatsisf+0xaa>
    169e:	08 2e       	mov	r0, r24
    16a0:	04 c0       	rjmp	.+8      	; 0x16aa <__floatsisf+0x96>
    16a2:	ee 0c       	add	r14, r14
    16a4:	ff 1c       	adc	r15, r15
    16a6:	00 1f       	adc	r16, r16
    16a8:	11 1f       	adc	r17, r17
    16aa:	0a 94       	dec	r0
    16ac:	d2 f7       	brpl	.-12     	; 0x16a2 <__floatsisf+0x8e>
    16ae:	ed 82       	std	Y+5, r14	; 0x05
    16b0:	fe 82       	std	Y+6, r15	; 0x06
    16b2:	0f 83       	std	Y+7, r16	; 0x07
    16b4:	18 87       	std	Y+8, r17	; 0x08
    16b6:	c8 1a       	sub	r12, r24
    16b8:	d9 0a       	sbc	r13, r25
    16ba:	dc 82       	std	Y+4, r13	; 0x04
    16bc:	cb 82       	std	Y+3, r12	; 0x03
    16be:	ba 82       	std	Y+2, r11	; 0x02
    16c0:	ce 01       	movw	r24, r28
    16c2:	01 96       	adiw	r24, 0x01	; 1
    16c4:	0e 94 84 0c 	call	0x1908	; 0x1908 <__pack_f>
    16c8:	28 96       	adiw	r28, 0x08	; 8
    16ca:	e9 e0       	ldi	r30, 0x09	; 9
    16cc:	0c 94 4f 0e 	jmp	0x1c9e	; 0x1c9e <__epilogue_restores__+0x12>

000016d0 <__fixsfsi>:
    16d0:	ac e0       	ldi	r26, 0x0C	; 12
    16d2:	b0 e0       	ldi	r27, 0x00	; 0
    16d4:	ee e6       	ldi	r30, 0x6E	; 110
    16d6:	fb e0       	ldi	r31, 0x0B	; 11
    16d8:	0c 94 3a 0e 	jmp	0x1c74	; 0x1c74 <__prologue_saves__+0x20>
    16dc:	69 83       	std	Y+1, r22	; 0x01
    16de:	7a 83       	std	Y+2, r23	; 0x02
    16e0:	8b 83       	std	Y+3, r24	; 0x03
    16e2:	9c 83       	std	Y+4, r25	; 0x04
    16e4:	ce 01       	movw	r24, r28
    16e6:	01 96       	adiw	r24, 0x01	; 1
    16e8:	be 01       	movw	r22, r28
    16ea:	6b 5f       	subi	r22, 0xFB	; 251
    16ec:	7f 4f       	sbci	r23, 0xFF	; 255
    16ee:	0e 94 59 0d 	call	0x1ab2	; 0x1ab2 <__unpack_f>
    16f2:	8d 81       	ldd	r24, Y+5	; 0x05
    16f4:	82 30       	cpi	r24, 0x02	; 2
    16f6:	61 f1       	breq	.+88     	; 0x1750 <__fixsfsi+0x80>
    16f8:	82 30       	cpi	r24, 0x02	; 2
    16fa:	50 f1       	brcs	.+84     	; 0x1750 <__fixsfsi+0x80>
    16fc:	84 30       	cpi	r24, 0x04	; 4
    16fe:	21 f4       	brne	.+8      	; 0x1708 <__fixsfsi+0x38>
    1700:	8e 81       	ldd	r24, Y+6	; 0x06
    1702:	88 23       	and	r24, r24
    1704:	51 f1       	breq	.+84     	; 0x175a <__fixsfsi+0x8a>
    1706:	2e c0       	rjmp	.+92     	; 0x1764 <__fixsfsi+0x94>
    1708:	2f 81       	ldd	r18, Y+7	; 0x07
    170a:	38 85       	ldd	r19, Y+8	; 0x08
    170c:	37 fd       	sbrc	r19, 7
    170e:	20 c0       	rjmp	.+64     	; 0x1750 <__fixsfsi+0x80>
    1710:	6e 81       	ldd	r22, Y+6	; 0x06
    1712:	2f 31       	cpi	r18, 0x1F	; 31
    1714:	31 05       	cpc	r19, r1
    1716:	1c f0       	brlt	.+6      	; 0x171e <__fixsfsi+0x4e>
    1718:	66 23       	and	r22, r22
    171a:	f9 f0       	breq	.+62     	; 0x175a <__fixsfsi+0x8a>
    171c:	23 c0       	rjmp	.+70     	; 0x1764 <__fixsfsi+0x94>
    171e:	8e e1       	ldi	r24, 0x1E	; 30
    1720:	90 e0       	ldi	r25, 0x00	; 0
    1722:	82 1b       	sub	r24, r18
    1724:	93 0b       	sbc	r25, r19
    1726:	29 85       	ldd	r18, Y+9	; 0x09
    1728:	3a 85       	ldd	r19, Y+10	; 0x0a
    172a:	4b 85       	ldd	r20, Y+11	; 0x0b
    172c:	5c 85       	ldd	r21, Y+12	; 0x0c
    172e:	04 c0       	rjmp	.+8      	; 0x1738 <__fixsfsi+0x68>
    1730:	56 95       	lsr	r21
    1732:	47 95       	ror	r20
    1734:	37 95       	ror	r19
    1736:	27 95       	ror	r18
    1738:	8a 95       	dec	r24
    173a:	d2 f7       	brpl	.-12     	; 0x1730 <__fixsfsi+0x60>
    173c:	66 23       	and	r22, r22
    173e:	b1 f0       	breq	.+44     	; 0x176c <__fixsfsi+0x9c>
    1740:	50 95       	com	r21
    1742:	40 95       	com	r20
    1744:	30 95       	com	r19
    1746:	21 95       	neg	r18
    1748:	3f 4f       	sbci	r19, 0xFF	; 255
    174a:	4f 4f       	sbci	r20, 0xFF	; 255
    174c:	5f 4f       	sbci	r21, 0xFF	; 255
    174e:	0e c0       	rjmp	.+28     	; 0x176c <__fixsfsi+0x9c>
    1750:	20 e0       	ldi	r18, 0x00	; 0
    1752:	30 e0       	ldi	r19, 0x00	; 0
    1754:	40 e0       	ldi	r20, 0x00	; 0
    1756:	50 e0       	ldi	r21, 0x00	; 0
    1758:	09 c0       	rjmp	.+18     	; 0x176c <__fixsfsi+0x9c>
    175a:	2f ef       	ldi	r18, 0xFF	; 255
    175c:	3f ef       	ldi	r19, 0xFF	; 255
    175e:	4f ef       	ldi	r20, 0xFF	; 255
    1760:	5f e7       	ldi	r21, 0x7F	; 127
    1762:	04 c0       	rjmp	.+8      	; 0x176c <__fixsfsi+0x9c>
    1764:	20 e0       	ldi	r18, 0x00	; 0
    1766:	30 e0       	ldi	r19, 0x00	; 0
    1768:	40 e0       	ldi	r20, 0x00	; 0
    176a:	50 e8       	ldi	r21, 0x80	; 128
    176c:	b9 01       	movw	r22, r18
    176e:	ca 01       	movw	r24, r20
    1770:	2c 96       	adiw	r28, 0x0c	; 12
    1772:	e2 e0       	ldi	r30, 0x02	; 2
    1774:	0c 94 56 0e 	jmp	0x1cac	; 0x1cac <__epilogue_restores__+0x20>

00001778 <__floatunsisf>:
    1778:	a8 e0       	ldi	r26, 0x08	; 8
    177a:	b0 e0       	ldi	r27, 0x00	; 0
    177c:	e2 ec       	ldi	r30, 0xC2	; 194
    177e:	fb e0       	ldi	r31, 0x0B	; 11
    1780:	0c 94 32 0e 	jmp	0x1c64	; 0x1c64 <__prologue_saves__+0x10>
    1784:	7b 01       	movw	r14, r22
    1786:	8c 01       	movw	r16, r24
    1788:	61 15       	cp	r22, r1
    178a:	71 05       	cpc	r23, r1
    178c:	81 05       	cpc	r24, r1
    178e:	91 05       	cpc	r25, r1
    1790:	19 f4       	brne	.+6      	; 0x1798 <__floatunsisf+0x20>
    1792:	82 e0       	ldi	r24, 0x02	; 2
    1794:	89 83       	std	Y+1, r24	; 0x01
    1796:	60 c0       	rjmp	.+192    	; 0x1858 <__floatunsisf+0xe0>
    1798:	83 e0       	ldi	r24, 0x03	; 3
    179a:	89 83       	std	Y+1, r24	; 0x01
    179c:	8e e1       	ldi	r24, 0x1E	; 30
    179e:	c8 2e       	mov	r12, r24
    17a0:	d1 2c       	mov	r13, r1
    17a2:	dc 82       	std	Y+4, r13	; 0x04
    17a4:	cb 82       	std	Y+3, r12	; 0x03
    17a6:	ed 82       	std	Y+5, r14	; 0x05
    17a8:	fe 82       	std	Y+6, r15	; 0x06
    17aa:	0f 83       	std	Y+7, r16	; 0x07
    17ac:	18 87       	std	Y+8, r17	; 0x08
    17ae:	c8 01       	movw	r24, r16
    17b0:	b7 01       	movw	r22, r14
    17b2:	0e 94 35 0c 	call	0x186a	; 0x186a <__clzsi2>
    17b6:	fc 01       	movw	r30, r24
    17b8:	31 97       	sbiw	r30, 0x01	; 1
    17ba:	f7 ff       	sbrs	r31, 7
    17bc:	3b c0       	rjmp	.+118    	; 0x1834 <__floatunsisf+0xbc>
    17be:	22 27       	eor	r18, r18
    17c0:	33 27       	eor	r19, r19
    17c2:	2e 1b       	sub	r18, r30
    17c4:	3f 0b       	sbc	r19, r31
    17c6:	57 01       	movw	r10, r14
    17c8:	68 01       	movw	r12, r16
    17ca:	02 2e       	mov	r0, r18
    17cc:	04 c0       	rjmp	.+8      	; 0x17d6 <__floatunsisf+0x5e>
    17ce:	d6 94       	lsr	r13
    17d0:	c7 94       	ror	r12
    17d2:	b7 94       	ror	r11
    17d4:	a7 94       	ror	r10
    17d6:	0a 94       	dec	r0
    17d8:	d2 f7       	brpl	.-12     	; 0x17ce <__floatunsisf+0x56>
    17da:	40 e0       	ldi	r20, 0x00	; 0
    17dc:	50 e0       	ldi	r21, 0x00	; 0
    17de:	60 e0       	ldi	r22, 0x00	; 0
    17e0:	70 e0       	ldi	r23, 0x00	; 0
    17e2:	81 e0       	ldi	r24, 0x01	; 1
    17e4:	90 e0       	ldi	r25, 0x00	; 0
    17e6:	a0 e0       	ldi	r26, 0x00	; 0
    17e8:	b0 e0       	ldi	r27, 0x00	; 0
    17ea:	04 c0       	rjmp	.+8      	; 0x17f4 <__floatunsisf+0x7c>
    17ec:	88 0f       	add	r24, r24
    17ee:	99 1f       	adc	r25, r25
    17f0:	aa 1f       	adc	r26, r26
    17f2:	bb 1f       	adc	r27, r27
    17f4:	2a 95       	dec	r18
    17f6:	d2 f7       	brpl	.-12     	; 0x17ec <__floatunsisf+0x74>
    17f8:	01 97       	sbiw	r24, 0x01	; 1
    17fa:	a1 09       	sbc	r26, r1
    17fc:	b1 09       	sbc	r27, r1
    17fe:	8e 21       	and	r24, r14
    1800:	9f 21       	and	r25, r15
    1802:	a0 23       	and	r26, r16
    1804:	b1 23       	and	r27, r17
    1806:	00 97       	sbiw	r24, 0x00	; 0
    1808:	a1 05       	cpc	r26, r1
    180a:	b1 05       	cpc	r27, r1
    180c:	21 f0       	breq	.+8      	; 0x1816 <__floatunsisf+0x9e>
    180e:	41 e0       	ldi	r20, 0x01	; 1
    1810:	50 e0       	ldi	r21, 0x00	; 0
    1812:	60 e0       	ldi	r22, 0x00	; 0
    1814:	70 e0       	ldi	r23, 0x00	; 0
    1816:	4a 29       	or	r20, r10
    1818:	5b 29       	or	r21, r11
    181a:	6c 29       	or	r22, r12
    181c:	7d 29       	or	r23, r13
    181e:	4d 83       	std	Y+5, r20	; 0x05
    1820:	5e 83       	std	Y+6, r21	; 0x06
    1822:	6f 83       	std	Y+7, r22	; 0x07
    1824:	78 87       	std	Y+8, r23	; 0x08
    1826:	8e e1       	ldi	r24, 0x1E	; 30
    1828:	90 e0       	ldi	r25, 0x00	; 0
    182a:	8e 1b       	sub	r24, r30
    182c:	9f 0b       	sbc	r25, r31
    182e:	9c 83       	std	Y+4, r25	; 0x04
    1830:	8b 83       	std	Y+3, r24	; 0x03
    1832:	12 c0       	rjmp	.+36     	; 0x1858 <__floatunsisf+0xe0>
    1834:	30 97       	sbiw	r30, 0x00	; 0
    1836:	81 f0       	breq	.+32     	; 0x1858 <__floatunsisf+0xe0>
    1838:	0e 2e       	mov	r0, r30
    183a:	04 c0       	rjmp	.+8      	; 0x1844 <__floatunsisf+0xcc>
    183c:	ee 0c       	add	r14, r14
    183e:	ff 1c       	adc	r15, r15
    1840:	00 1f       	adc	r16, r16
    1842:	11 1f       	adc	r17, r17
    1844:	0a 94       	dec	r0
    1846:	d2 f7       	brpl	.-12     	; 0x183c <__floatunsisf+0xc4>
    1848:	ed 82       	std	Y+5, r14	; 0x05
    184a:	fe 82       	std	Y+6, r15	; 0x06
    184c:	0f 83       	std	Y+7, r16	; 0x07
    184e:	18 87       	std	Y+8, r17	; 0x08
    1850:	ce 1a       	sub	r12, r30
    1852:	df 0a       	sbc	r13, r31
    1854:	dc 82       	std	Y+4, r13	; 0x04
    1856:	cb 82       	std	Y+3, r12	; 0x03
    1858:	1a 82       	std	Y+2, r1	; 0x02
    185a:	ce 01       	movw	r24, r28
    185c:	01 96       	adiw	r24, 0x01	; 1
    185e:	0e 94 84 0c 	call	0x1908	; 0x1908 <__pack_f>
    1862:	28 96       	adiw	r28, 0x08	; 8
    1864:	ea e0       	ldi	r30, 0x0A	; 10
    1866:	0c 94 4e 0e 	jmp	0x1c9c	; 0x1c9c <__epilogue_restores__+0x10>

0000186a <__clzsi2>:
    186a:	ef 92       	push	r14
    186c:	ff 92       	push	r15
    186e:	0f 93       	push	r16
    1870:	1f 93       	push	r17
    1872:	7b 01       	movw	r14, r22
    1874:	8c 01       	movw	r16, r24
    1876:	80 e0       	ldi	r24, 0x00	; 0
    1878:	e8 16       	cp	r14, r24
    187a:	80 e0       	ldi	r24, 0x00	; 0
    187c:	f8 06       	cpc	r15, r24
    187e:	81 e0       	ldi	r24, 0x01	; 1
    1880:	08 07       	cpc	r16, r24
    1882:	80 e0       	ldi	r24, 0x00	; 0
    1884:	18 07       	cpc	r17, r24
    1886:	88 f4       	brcc	.+34     	; 0x18aa <__clzsi2+0x40>
    1888:	8f ef       	ldi	r24, 0xFF	; 255
    188a:	e8 16       	cp	r14, r24
    188c:	f1 04       	cpc	r15, r1
    188e:	01 05       	cpc	r16, r1
    1890:	11 05       	cpc	r17, r1
    1892:	31 f0       	breq	.+12     	; 0x18a0 <__clzsi2+0x36>
    1894:	28 f0       	brcs	.+10     	; 0x18a0 <__clzsi2+0x36>
    1896:	88 e0       	ldi	r24, 0x08	; 8
    1898:	90 e0       	ldi	r25, 0x00	; 0
    189a:	a0 e0       	ldi	r26, 0x00	; 0
    189c:	b0 e0       	ldi	r27, 0x00	; 0
    189e:	17 c0       	rjmp	.+46     	; 0x18ce <__clzsi2+0x64>
    18a0:	80 e0       	ldi	r24, 0x00	; 0
    18a2:	90 e0       	ldi	r25, 0x00	; 0
    18a4:	a0 e0       	ldi	r26, 0x00	; 0
    18a6:	b0 e0       	ldi	r27, 0x00	; 0
    18a8:	12 c0       	rjmp	.+36     	; 0x18ce <__clzsi2+0x64>
    18aa:	80 e0       	ldi	r24, 0x00	; 0
    18ac:	e8 16       	cp	r14, r24
    18ae:	80 e0       	ldi	r24, 0x00	; 0
    18b0:	f8 06       	cpc	r15, r24
    18b2:	80 e0       	ldi	r24, 0x00	; 0
    18b4:	08 07       	cpc	r16, r24
    18b6:	81 e0       	ldi	r24, 0x01	; 1
    18b8:	18 07       	cpc	r17, r24
    18ba:	28 f0       	brcs	.+10     	; 0x18c6 <__clzsi2+0x5c>
    18bc:	88 e1       	ldi	r24, 0x18	; 24
    18be:	90 e0       	ldi	r25, 0x00	; 0
    18c0:	a0 e0       	ldi	r26, 0x00	; 0
    18c2:	b0 e0       	ldi	r27, 0x00	; 0
    18c4:	04 c0       	rjmp	.+8      	; 0x18ce <__clzsi2+0x64>
    18c6:	80 e1       	ldi	r24, 0x10	; 16
    18c8:	90 e0       	ldi	r25, 0x00	; 0
    18ca:	a0 e0       	ldi	r26, 0x00	; 0
    18cc:	b0 e0       	ldi	r27, 0x00	; 0
    18ce:	20 e2       	ldi	r18, 0x20	; 32
    18d0:	30 e0       	ldi	r19, 0x00	; 0
    18d2:	40 e0       	ldi	r20, 0x00	; 0
    18d4:	50 e0       	ldi	r21, 0x00	; 0
    18d6:	28 1b       	sub	r18, r24
    18d8:	39 0b       	sbc	r19, r25
    18da:	4a 0b       	sbc	r20, r26
    18dc:	5b 0b       	sbc	r21, r27
    18de:	04 c0       	rjmp	.+8      	; 0x18e8 <__clzsi2+0x7e>
    18e0:	16 95       	lsr	r17
    18e2:	07 95       	ror	r16
    18e4:	f7 94       	ror	r15
    18e6:	e7 94       	ror	r14
    18e8:	8a 95       	dec	r24
    18ea:	d2 f7       	brpl	.-12     	; 0x18e0 <__clzsi2+0x76>
    18ec:	f7 01       	movw	r30, r14
    18ee:	e8 5f       	subi	r30, 0xF8	; 248
    18f0:	fd 4f       	sbci	r31, 0xFD	; 253
    18f2:	80 81       	ld	r24, Z
    18f4:	28 1b       	sub	r18, r24
    18f6:	31 09       	sbc	r19, r1
    18f8:	41 09       	sbc	r20, r1
    18fa:	51 09       	sbc	r21, r1
    18fc:	c9 01       	movw	r24, r18
    18fe:	1f 91       	pop	r17
    1900:	0f 91       	pop	r16
    1902:	ff 90       	pop	r15
    1904:	ef 90       	pop	r14
    1906:	08 95       	ret

00001908 <__pack_f>:
    1908:	df 92       	push	r13
    190a:	ef 92       	push	r14
    190c:	ff 92       	push	r15
    190e:	0f 93       	push	r16
    1910:	1f 93       	push	r17
    1912:	fc 01       	movw	r30, r24
    1914:	e4 80       	ldd	r14, Z+4	; 0x04
    1916:	f5 80       	ldd	r15, Z+5	; 0x05
    1918:	06 81       	ldd	r16, Z+6	; 0x06
    191a:	17 81       	ldd	r17, Z+7	; 0x07
    191c:	d1 80       	ldd	r13, Z+1	; 0x01
    191e:	80 81       	ld	r24, Z
    1920:	82 30       	cpi	r24, 0x02	; 2
    1922:	48 f4       	brcc	.+18     	; 0x1936 <__pack_f+0x2e>
    1924:	80 e0       	ldi	r24, 0x00	; 0
    1926:	90 e0       	ldi	r25, 0x00	; 0
    1928:	a0 e1       	ldi	r26, 0x10	; 16
    192a:	b0 e0       	ldi	r27, 0x00	; 0
    192c:	e8 2a       	or	r14, r24
    192e:	f9 2a       	or	r15, r25
    1930:	0a 2b       	or	r16, r26
    1932:	1b 2b       	or	r17, r27
    1934:	a5 c0       	rjmp	.+330    	; 0x1a80 <__pack_f+0x178>
    1936:	84 30       	cpi	r24, 0x04	; 4
    1938:	09 f4       	brne	.+2      	; 0x193c <__pack_f+0x34>
    193a:	9f c0       	rjmp	.+318    	; 0x1a7a <__pack_f+0x172>
    193c:	82 30       	cpi	r24, 0x02	; 2
    193e:	21 f4       	brne	.+8      	; 0x1948 <__pack_f+0x40>
    1940:	ee 24       	eor	r14, r14
    1942:	ff 24       	eor	r15, r15
    1944:	87 01       	movw	r16, r14
    1946:	05 c0       	rjmp	.+10     	; 0x1952 <__pack_f+0x4a>
    1948:	e1 14       	cp	r14, r1
    194a:	f1 04       	cpc	r15, r1
    194c:	01 05       	cpc	r16, r1
    194e:	11 05       	cpc	r17, r1
    1950:	19 f4       	brne	.+6      	; 0x1958 <__pack_f+0x50>
    1952:	e0 e0       	ldi	r30, 0x00	; 0
    1954:	f0 e0       	ldi	r31, 0x00	; 0
    1956:	96 c0       	rjmp	.+300    	; 0x1a84 <__pack_f+0x17c>
    1958:	62 81       	ldd	r22, Z+2	; 0x02
    195a:	73 81       	ldd	r23, Z+3	; 0x03
    195c:	9f ef       	ldi	r25, 0xFF	; 255
    195e:	62 38       	cpi	r22, 0x82	; 130
    1960:	79 07       	cpc	r23, r25
    1962:	0c f0       	brlt	.+2      	; 0x1966 <__pack_f+0x5e>
    1964:	5b c0       	rjmp	.+182    	; 0x1a1c <__pack_f+0x114>
    1966:	22 e8       	ldi	r18, 0x82	; 130
    1968:	3f ef       	ldi	r19, 0xFF	; 255
    196a:	26 1b       	sub	r18, r22
    196c:	37 0b       	sbc	r19, r23
    196e:	2a 31       	cpi	r18, 0x1A	; 26
    1970:	31 05       	cpc	r19, r1
    1972:	2c f0       	brlt	.+10     	; 0x197e <__pack_f+0x76>
    1974:	20 e0       	ldi	r18, 0x00	; 0
    1976:	30 e0       	ldi	r19, 0x00	; 0
    1978:	40 e0       	ldi	r20, 0x00	; 0
    197a:	50 e0       	ldi	r21, 0x00	; 0
    197c:	2a c0       	rjmp	.+84     	; 0x19d2 <__pack_f+0xca>
    197e:	b8 01       	movw	r22, r16
    1980:	a7 01       	movw	r20, r14
    1982:	02 2e       	mov	r0, r18
    1984:	04 c0       	rjmp	.+8      	; 0x198e <__pack_f+0x86>
    1986:	76 95       	lsr	r23
    1988:	67 95       	ror	r22
    198a:	57 95       	ror	r21
    198c:	47 95       	ror	r20
    198e:	0a 94       	dec	r0
    1990:	d2 f7       	brpl	.-12     	; 0x1986 <__pack_f+0x7e>
    1992:	81 e0       	ldi	r24, 0x01	; 1
    1994:	90 e0       	ldi	r25, 0x00	; 0
    1996:	a0 e0       	ldi	r26, 0x00	; 0
    1998:	b0 e0       	ldi	r27, 0x00	; 0
    199a:	04 c0       	rjmp	.+8      	; 0x19a4 <__pack_f+0x9c>
    199c:	88 0f       	add	r24, r24
    199e:	99 1f       	adc	r25, r25
    19a0:	aa 1f       	adc	r26, r26
    19a2:	bb 1f       	adc	r27, r27
    19a4:	2a 95       	dec	r18
    19a6:	d2 f7       	brpl	.-12     	; 0x199c <__pack_f+0x94>
    19a8:	01 97       	sbiw	r24, 0x01	; 1
    19aa:	a1 09       	sbc	r26, r1
    19ac:	b1 09       	sbc	r27, r1
    19ae:	8e 21       	and	r24, r14
    19b0:	9f 21       	and	r25, r15
    19b2:	a0 23       	and	r26, r16
    19b4:	b1 23       	and	r27, r17
    19b6:	00 97       	sbiw	r24, 0x00	; 0
    19b8:	a1 05       	cpc	r26, r1
    19ba:	b1 05       	cpc	r27, r1
    19bc:	21 f0       	breq	.+8      	; 0x19c6 <__pack_f+0xbe>
    19be:	81 e0       	ldi	r24, 0x01	; 1
    19c0:	90 e0       	ldi	r25, 0x00	; 0
    19c2:	a0 e0       	ldi	r26, 0x00	; 0
    19c4:	b0 e0       	ldi	r27, 0x00	; 0
    19c6:	9a 01       	movw	r18, r20
    19c8:	ab 01       	movw	r20, r22
    19ca:	28 2b       	or	r18, r24
    19cc:	39 2b       	or	r19, r25
    19ce:	4a 2b       	or	r20, r26
    19d0:	5b 2b       	or	r21, r27
    19d2:	da 01       	movw	r26, r20
    19d4:	c9 01       	movw	r24, r18
    19d6:	8f 77       	andi	r24, 0x7F	; 127
    19d8:	90 70       	andi	r25, 0x00	; 0
    19da:	a0 70       	andi	r26, 0x00	; 0
    19dc:	b0 70       	andi	r27, 0x00	; 0
    19de:	80 34       	cpi	r24, 0x40	; 64
    19e0:	91 05       	cpc	r25, r1
    19e2:	a1 05       	cpc	r26, r1
    19e4:	b1 05       	cpc	r27, r1
    19e6:	39 f4       	brne	.+14     	; 0x19f6 <__pack_f+0xee>
    19e8:	27 ff       	sbrs	r18, 7
    19ea:	09 c0       	rjmp	.+18     	; 0x19fe <__pack_f+0xf6>
    19ec:	20 5c       	subi	r18, 0xC0	; 192
    19ee:	3f 4f       	sbci	r19, 0xFF	; 255
    19f0:	4f 4f       	sbci	r20, 0xFF	; 255
    19f2:	5f 4f       	sbci	r21, 0xFF	; 255
    19f4:	04 c0       	rjmp	.+8      	; 0x19fe <__pack_f+0xf6>
    19f6:	21 5c       	subi	r18, 0xC1	; 193
    19f8:	3f 4f       	sbci	r19, 0xFF	; 255
    19fa:	4f 4f       	sbci	r20, 0xFF	; 255
    19fc:	5f 4f       	sbci	r21, 0xFF	; 255
    19fe:	e0 e0       	ldi	r30, 0x00	; 0
    1a00:	f0 e0       	ldi	r31, 0x00	; 0
    1a02:	20 30       	cpi	r18, 0x00	; 0
    1a04:	a0 e0       	ldi	r26, 0x00	; 0
    1a06:	3a 07       	cpc	r19, r26
    1a08:	a0 e0       	ldi	r26, 0x00	; 0
    1a0a:	4a 07       	cpc	r20, r26
    1a0c:	a0 e4       	ldi	r26, 0x40	; 64
    1a0e:	5a 07       	cpc	r21, r26
    1a10:	10 f0       	brcs	.+4      	; 0x1a16 <__pack_f+0x10e>
    1a12:	e1 e0       	ldi	r30, 0x01	; 1
    1a14:	f0 e0       	ldi	r31, 0x00	; 0
    1a16:	79 01       	movw	r14, r18
    1a18:	8a 01       	movw	r16, r20
    1a1a:	27 c0       	rjmp	.+78     	; 0x1a6a <__pack_f+0x162>
    1a1c:	60 38       	cpi	r22, 0x80	; 128
    1a1e:	71 05       	cpc	r23, r1
    1a20:	64 f5       	brge	.+88     	; 0x1a7a <__pack_f+0x172>
    1a22:	fb 01       	movw	r30, r22
    1a24:	e1 58       	subi	r30, 0x81	; 129
    1a26:	ff 4f       	sbci	r31, 0xFF	; 255
    1a28:	d8 01       	movw	r26, r16
    1a2a:	c7 01       	movw	r24, r14
    1a2c:	8f 77       	andi	r24, 0x7F	; 127
    1a2e:	90 70       	andi	r25, 0x00	; 0
    1a30:	a0 70       	andi	r26, 0x00	; 0
    1a32:	b0 70       	andi	r27, 0x00	; 0
    1a34:	80 34       	cpi	r24, 0x40	; 64
    1a36:	91 05       	cpc	r25, r1
    1a38:	a1 05       	cpc	r26, r1
    1a3a:	b1 05       	cpc	r27, r1
    1a3c:	39 f4       	brne	.+14     	; 0x1a4c <__pack_f+0x144>
    1a3e:	e7 fe       	sbrs	r14, 7
    1a40:	0d c0       	rjmp	.+26     	; 0x1a5c <__pack_f+0x154>
    1a42:	80 e4       	ldi	r24, 0x40	; 64
    1a44:	90 e0       	ldi	r25, 0x00	; 0
    1a46:	a0 e0       	ldi	r26, 0x00	; 0
    1a48:	b0 e0       	ldi	r27, 0x00	; 0
    1a4a:	04 c0       	rjmp	.+8      	; 0x1a54 <__pack_f+0x14c>
    1a4c:	8f e3       	ldi	r24, 0x3F	; 63
    1a4e:	90 e0       	ldi	r25, 0x00	; 0
    1a50:	a0 e0       	ldi	r26, 0x00	; 0
    1a52:	b0 e0       	ldi	r27, 0x00	; 0
    1a54:	e8 0e       	add	r14, r24
    1a56:	f9 1e       	adc	r15, r25
    1a58:	0a 1f       	adc	r16, r26
    1a5a:	1b 1f       	adc	r17, r27
    1a5c:	17 ff       	sbrs	r17, 7
    1a5e:	05 c0       	rjmp	.+10     	; 0x1a6a <__pack_f+0x162>
    1a60:	16 95       	lsr	r17
    1a62:	07 95       	ror	r16
    1a64:	f7 94       	ror	r15
    1a66:	e7 94       	ror	r14
    1a68:	31 96       	adiw	r30, 0x01	; 1
    1a6a:	87 e0       	ldi	r24, 0x07	; 7
    1a6c:	16 95       	lsr	r17
    1a6e:	07 95       	ror	r16
    1a70:	f7 94       	ror	r15
    1a72:	e7 94       	ror	r14
    1a74:	8a 95       	dec	r24
    1a76:	d1 f7       	brne	.-12     	; 0x1a6c <__pack_f+0x164>
    1a78:	05 c0       	rjmp	.+10     	; 0x1a84 <__pack_f+0x17c>
    1a7a:	ee 24       	eor	r14, r14
    1a7c:	ff 24       	eor	r15, r15
    1a7e:	87 01       	movw	r16, r14
    1a80:	ef ef       	ldi	r30, 0xFF	; 255
    1a82:	f0 e0       	ldi	r31, 0x00	; 0
    1a84:	6e 2f       	mov	r22, r30
    1a86:	67 95       	ror	r22
    1a88:	66 27       	eor	r22, r22
    1a8a:	67 95       	ror	r22
    1a8c:	90 2f       	mov	r25, r16
    1a8e:	9f 77       	andi	r25, 0x7F	; 127
    1a90:	d7 94       	ror	r13
    1a92:	dd 24       	eor	r13, r13
    1a94:	d7 94       	ror	r13
    1a96:	8e 2f       	mov	r24, r30
    1a98:	86 95       	lsr	r24
    1a9a:	49 2f       	mov	r20, r25
    1a9c:	46 2b       	or	r20, r22
    1a9e:	58 2f       	mov	r21, r24
    1aa0:	5d 29       	or	r21, r13
    1aa2:	b7 01       	movw	r22, r14
    1aa4:	ca 01       	movw	r24, r20
    1aa6:	1f 91       	pop	r17
    1aa8:	0f 91       	pop	r16
    1aaa:	ff 90       	pop	r15
    1aac:	ef 90       	pop	r14
    1aae:	df 90       	pop	r13
    1ab0:	08 95       	ret

00001ab2 <__unpack_f>:
    1ab2:	fc 01       	movw	r30, r24
    1ab4:	db 01       	movw	r26, r22
    1ab6:	40 81       	ld	r20, Z
    1ab8:	51 81       	ldd	r21, Z+1	; 0x01
    1aba:	22 81       	ldd	r18, Z+2	; 0x02
    1abc:	62 2f       	mov	r22, r18
    1abe:	6f 77       	andi	r22, 0x7F	; 127
    1ac0:	70 e0       	ldi	r23, 0x00	; 0
    1ac2:	22 1f       	adc	r18, r18
    1ac4:	22 27       	eor	r18, r18
    1ac6:	22 1f       	adc	r18, r18
    1ac8:	93 81       	ldd	r25, Z+3	; 0x03
    1aca:	89 2f       	mov	r24, r25
    1acc:	88 0f       	add	r24, r24
    1ace:	82 2b       	or	r24, r18
    1ad0:	28 2f       	mov	r18, r24
    1ad2:	30 e0       	ldi	r19, 0x00	; 0
    1ad4:	99 1f       	adc	r25, r25
    1ad6:	99 27       	eor	r25, r25
    1ad8:	99 1f       	adc	r25, r25
    1ada:	11 96       	adiw	r26, 0x01	; 1
    1adc:	9c 93       	st	X, r25
    1ade:	11 97       	sbiw	r26, 0x01	; 1
    1ae0:	21 15       	cp	r18, r1
    1ae2:	31 05       	cpc	r19, r1
    1ae4:	a9 f5       	brne	.+106    	; 0x1b50 <__unpack_f+0x9e>
    1ae6:	41 15       	cp	r20, r1
    1ae8:	51 05       	cpc	r21, r1
    1aea:	61 05       	cpc	r22, r1
    1aec:	71 05       	cpc	r23, r1
    1aee:	11 f4       	brne	.+4      	; 0x1af4 <__unpack_f+0x42>
    1af0:	82 e0       	ldi	r24, 0x02	; 2
    1af2:	37 c0       	rjmp	.+110    	; 0x1b62 <__unpack_f+0xb0>
    1af4:	82 e8       	ldi	r24, 0x82	; 130
    1af6:	9f ef       	ldi	r25, 0xFF	; 255
    1af8:	13 96       	adiw	r26, 0x03	; 3
    1afa:	9c 93       	st	X, r25
    1afc:	8e 93       	st	-X, r24
    1afe:	12 97       	sbiw	r26, 0x02	; 2
    1b00:	9a 01       	movw	r18, r20
    1b02:	ab 01       	movw	r20, r22
    1b04:	67 e0       	ldi	r22, 0x07	; 7
    1b06:	22 0f       	add	r18, r18
    1b08:	33 1f       	adc	r19, r19
    1b0a:	44 1f       	adc	r20, r20
    1b0c:	55 1f       	adc	r21, r21
    1b0e:	6a 95       	dec	r22
    1b10:	d1 f7       	brne	.-12     	; 0x1b06 <__unpack_f+0x54>
    1b12:	83 e0       	ldi	r24, 0x03	; 3
    1b14:	8c 93       	st	X, r24
    1b16:	0d c0       	rjmp	.+26     	; 0x1b32 <__unpack_f+0x80>
    1b18:	22 0f       	add	r18, r18
    1b1a:	33 1f       	adc	r19, r19
    1b1c:	44 1f       	adc	r20, r20
    1b1e:	55 1f       	adc	r21, r21
    1b20:	12 96       	adiw	r26, 0x02	; 2
    1b22:	8d 91       	ld	r24, X+
    1b24:	9c 91       	ld	r25, X
    1b26:	13 97       	sbiw	r26, 0x03	; 3
    1b28:	01 97       	sbiw	r24, 0x01	; 1
    1b2a:	13 96       	adiw	r26, 0x03	; 3
    1b2c:	9c 93       	st	X, r25
    1b2e:	8e 93       	st	-X, r24
    1b30:	12 97       	sbiw	r26, 0x02	; 2
    1b32:	20 30       	cpi	r18, 0x00	; 0
    1b34:	80 e0       	ldi	r24, 0x00	; 0
    1b36:	38 07       	cpc	r19, r24
    1b38:	80 e0       	ldi	r24, 0x00	; 0
    1b3a:	48 07       	cpc	r20, r24
    1b3c:	80 e4       	ldi	r24, 0x40	; 64
    1b3e:	58 07       	cpc	r21, r24
    1b40:	58 f3       	brcs	.-42     	; 0x1b18 <__unpack_f+0x66>
    1b42:	14 96       	adiw	r26, 0x04	; 4
    1b44:	2d 93       	st	X+, r18
    1b46:	3d 93       	st	X+, r19
    1b48:	4d 93       	st	X+, r20
    1b4a:	5c 93       	st	X, r21
    1b4c:	17 97       	sbiw	r26, 0x07	; 7
    1b4e:	08 95       	ret
    1b50:	2f 3f       	cpi	r18, 0xFF	; 255
    1b52:	31 05       	cpc	r19, r1
    1b54:	79 f4       	brne	.+30     	; 0x1b74 <__unpack_f+0xc2>
    1b56:	41 15       	cp	r20, r1
    1b58:	51 05       	cpc	r21, r1
    1b5a:	61 05       	cpc	r22, r1
    1b5c:	71 05       	cpc	r23, r1
    1b5e:	19 f4       	brne	.+6      	; 0x1b66 <__unpack_f+0xb4>
    1b60:	84 e0       	ldi	r24, 0x04	; 4
    1b62:	8c 93       	st	X, r24
    1b64:	08 95       	ret
    1b66:	64 ff       	sbrs	r22, 4
    1b68:	03 c0       	rjmp	.+6      	; 0x1b70 <__unpack_f+0xbe>
    1b6a:	81 e0       	ldi	r24, 0x01	; 1
    1b6c:	8c 93       	st	X, r24
    1b6e:	12 c0       	rjmp	.+36     	; 0x1b94 <__unpack_f+0xe2>
    1b70:	1c 92       	st	X, r1
    1b72:	10 c0       	rjmp	.+32     	; 0x1b94 <__unpack_f+0xe2>
    1b74:	2f 57       	subi	r18, 0x7F	; 127
    1b76:	30 40       	sbci	r19, 0x00	; 0
    1b78:	13 96       	adiw	r26, 0x03	; 3
    1b7a:	3c 93       	st	X, r19
    1b7c:	2e 93       	st	-X, r18
    1b7e:	12 97       	sbiw	r26, 0x02	; 2
    1b80:	83 e0       	ldi	r24, 0x03	; 3
    1b82:	8c 93       	st	X, r24
    1b84:	87 e0       	ldi	r24, 0x07	; 7
    1b86:	44 0f       	add	r20, r20
    1b88:	55 1f       	adc	r21, r21
    1b8a:	66 1f       	adc	r22, r22
    1b8c:	77 1f       	adc	r23, r23
    1b8e:	8a 95       	dec	r24
    1b90:	d1 f7       	brne	.-12     	; 0x1b86 <__unpack_f+0xd4>
    1b92:	70 64       	ori	r23, 0x40	; 64
    1b94:	14 96       	adiw	r26, 0x04	; 4
    1b96:	4d 93       	st	X+, r20
    1b98:	5d 93       	st	X+, r21
    1b9a:	6d 93       	st	X+, r22
    1b9c:	7c 93       	st	X, r23
    1b9e:	17 97       	sbiw	r26, 0x07	; 7
    1ba0:	08 95       	ret

00001ba2 <__fpcmp_parts_f>:
    1ba2:	1f 93       	push	r17
    1ba4:	dc 01       	movw	r26, r24
    1ba6:	fb 01       	movw	r30, r22
    1ba8:	9c 91       	ld	r25, X
    1baa:	92 30       	cpi	r25, 0x02	; 2
    1bac:	08 f4       	brcc	.+2      	; 0x1bb0 <__fpcmp_parts_f+0xe>
    1bae:	47 c0       	rjmp	.+142    	; 0x1c3e <__fpcmp_parts_f+0x9c>
    1bb0:	80 81       	ld	r24, Z
    1bb2:	82 30       	cpi	r24, 0x02	; 2
    1bb4:	08 f4       	brcc	.+2      	; 0x1bb8 <__fpcmp_parts_f+0x16>
    1bb6:	43 c0       	rjmp	.+134    	; 0x1c3e <__fpcmp_parts_f+0x9c>
    1bb8:	94 30       	cpi	r25, 0x04	; 4
    1bba:	51 f4       	brne	.+20     	; 0x1bd0 <__fpcmp_parts_f+0x2e>
    1bbc:	11 96       	adiw	r26, 0x01	; 1
    1bbe:	1c 91       	ld	r17, X
    1bc0:	84 30       	cpi	r24, 0x04	; 4
    1bc2:	99 f5       	brne	.+102    	; 0x1c2a <__fpcmp_parts_f+0x88>
    1bc4:	81 81       	ldd	r24, Z+1	; 0x01
    1bc6:	68 2f       	mov	r22, r24
    1bc8:	70 e0       	ldi	r23, 0x00	; 0
    1bca:	61 1b       	sub	r22, r17
    1bcc:	71 09       	sbc	r23, r1
    1bce:	3f c0       	rjmp	.+126    	; 0x1c4e <__fpcmp_parts_f+0xac>
    1bd0:	84 30       	cpi	r24, 0x04	; 4
    1bd2:	21 f0       	breq	.+8      	; 0x1bdc <__fpcmp_parts_f+0x3a>
    1bd4:	92 30       	cpi	r25, 0x02	; 2
    1bd6:	31 f4       	brne	.+12     	; 0x1be4 <__fpcmp_parts_f+0x42>
    1bd8:	82 30       	cpi	r24, 0x02	; 2
    1bda:	b9 f1       	breq	.+110    	; 0x1c4a <__fpcmp_parts_f+0xa8>
    1bdc:	81 81       	ldd	r24, Z+1	; 0x01
    1bde:	88 23       	and	r24, r24
    1be0:	89 f1       	breq	.+98     	; 0x1c44 <__fpcmp_parts_f+0xa2>
    1be2:	2d c0       	rjmp	.+90     	; 0x1c3e <__fpcmp_parts_f+0x9c>
    1be4:	11 96       	adiw	r26, 0x01	; 1
    1be6:	1c 91       	ld	r17, X
    1be8:	11 97       	sbiw	r26, 0x01	; 1
    1bea:	82 30       	cpi	r24, 0x02	; 2
    1bec:	f1 f0       	breq	.+60     	; 0x1c2a <__fpcmp_parts_f+0x88>
    1bee:	81 81       	ldd	r24, Z+1	; 0x01
    1bf0:	18 17       	cp	r17, r24
    1bf2:	d9 f4       	brne	.+54     	; 0x1c2a <__fpcmp_parts_f+0x88>
    1bf4:	12 96       	adiw	r26, 0x02	; 2
    1bf6:	2d 91       	ld	r18, X+
    1bf8:	3c 91       	ld	r19, X
    1bfa:	13 97       	sbiw	r26, 0x03	; 3
    1bfc:	82 81       	ldd	r24, Z+2	; 0x02
    1bfe:	93 81       	ldd	r25, Z+3	; 0x03
    1c00:	82 17       	cp	r24, r18
    1c02:	93 07       	cpc	r25, r19
    1c04:	94 f0       	brlt	.+36     	; 0x1c2a <__fpcmp_parts_f+0x88>
    1c06:	28 17       	cp	r18, r24
    1c08:	39 07       	cpc	r19, r25
    1c0a:	bc f0       	brlt	.+46     	; 0x1c3a <__fpcmp_parts_f+0x98>
    1c0c:	14 96       	adiw	r26, 0x04	; 4
    1c0e:	8d 91       	ld	r24, X+
    1c10:	9d 91       	ld	r25, X+
    1c12:	0d 90       	ld	r0, X+
    1c14:	bc 91       	ld	r27, X
    1c16:	a0 2d       	mov	r26, r0
    1c18:	24 81       	ldd	r18, Z+4	; 0x04
    1c1a:	35 81       	ldd	r19, Z+5	; 0x05
    1c1c:	46 81       	ldd	r20, Z+6	; 0x06
    1c1e:	57 81       	ldd	r21, Z+7	; 0x07
    1c20:	28 17       	cp	r18, r24
    1c22:	39 07       	cpc	r19, r25
    1c24:	4a 07       	cpc	r20, r26
    1c26:	5b 07       	cpc	r21, r27
    1c28:	18 f4       	brcc	.+6      	; 0x1c30 <__fpcmp_parts_f+0x8e>
    1c2a:	11 23       	and	r17, r17
    1c2c:	41 f0       	breq	.+16     	; 0x1c3e <__fpcmp_parts_f+0x9c>
    1c2e:	0a c0       	rjmp	.+20     	; 0x1c44 <__fpcmp_parts_f+0xa2>
    1c30:	82 17       	cp	r24, r18
    1c32:	93 07       	cpc	r25, r19
    1c34:	a4 07       	cpc	r26, r20
    1c36:	b5 07       	cpc	r27, r21
    1c38:	40 f4       	brcc	.+16     	; 0x1c4a <__fpcmp_parts_f+0xa8>
    1c3a:	11 23       	and	r17, r17
    1c3c:	19 f0       	breq	.+6      	; 0x1c44 <__fpcmp_parts_f+0xa2>
    1c3e:	61 e0       	ldi	r22, 0x01	; 1
    1c40:	70 e0       	ldi	r23, 0x00	; 0
    1c42:	05 c0       	rjmp	.+10     	; 0x1c4e <__fpcmp_parts_f+0xac>
    1c44:	6f ef       	ldi	r22, 0xFF	; 255
    1c46:	7f ef       	ldi	r23, 0xFF	; 255
    1c48:	02 c0       	rjmp	.+4      	; 0x1c4e <__fpcmp_parts_f+0xac>
    1c4a:	60 e0       	ldi	r22, 0x00	; 0
    1c4c:	70 e0       	ldi	r23, 0x00	; 0
    1c4e:	cb 01       	movw	r24, r22
    1c50:	1f 91       	pop	r17
    1c52:	08 95       	ret

00001c54 <__prologue_saves__>:
    1c54:	2f 92       	push	r2
    1c56:	3f 92       	push	r3
    1c58:	4f 92       	push	r4
    1c5a:	5f 92       	push	r5
    1c5c:	6f 92       	push	r6
    1c5e:	7f 92       	push	r7
    1c60:	8f 92       	push	r8
    1c62:	9f 92       	push	r9
    1c64:	af 92       	push	r10
    1c66:	bf 92       	push	r11
    1c68:	cf 92       	push	r12
    1c6a:	df 92       	push	r13
    1c6c:	ef 92       	push	r14
    1c6e:	ff 92       	push	r15
    1c70:	0f 93       	push	r16
    1c72:	1f 93       	push	r17
    1c74:	cf 93       	push	r28
    1c76:	df 93       	push	r29
    1c78:	cd b7       	in	r28, 0x3d	; 61
    1c7a:	de b7       	in	r29, 0x3e	; 62
    1c7c:	ca 1b       	sub	r28, r26
    1c7e:	db 0b       	sbc	r29, r27
    1c80:	0f b6       	in	r0, 0x3f	; 63
    1c82:	f8 94       	cli
    1c84:	de bf       	out	0x3e, r29	; 62
    1c86:	0f be       	out	0x3f, r0	; 63
    1c88:	cd bf       	out	0x3d, r28	; 61
    1c8a:	19 94       	eijmp

00001c8c <__epilogue_restores__>:
    1c8c:	2a 88       	ldd	r2, Y+18	; 0x12
    1c8e:	39 88       	ldd	r3, Y+17	; 0x11
    1c90:	48 88       	ldd	r4, Y+16	; 0x10
    1c92:	5f 84       	ldd	r5, Y+15	; 0x0f
    1c94:	6e 84       	ldd	r6, Y+14	; 0x0e
    1c96:	7d 84       	ldd	r7, Y+13	; 0x0d
    1c98:	8c 84       	ldd	r8, Y+12	; 0x0c
    1c9a:	9b 84       	ldd	r9, Y+11	; 0x0b
    1c9c:	aa 84       	ldd	r10, Y+10	; 0x0a
    1c9e:	b9 84       	ldd	r11, Y+9	; 0x09
    1ca0:	c8 84       	ldd	r12, Y+8	; 0x08
    1ca2:	df 80       	ldd	r13, Y+7	; 0x07
    1ca4:	ee 80       	ldd	r14, Y+6	; 0x06
    1ca6:	fd 80       	ldd	r15, Y+5	; 0x05
    1ca8:	0c 81       	ldd	r16, Y+4	; 0x04
    1caa:	1b 81       	ldd	r17, Y+3	; 0x03
    1cac:	aa 81       	ldd	r26, Y+2	; 0x02
    1cae:	b9 81       	ldd	r27, Y+1	; 0x01
    1cb0:	ce 0f       	add	r28, r30
    1cb2:	d1 1d       	adc	r29, r1
    1cb4:	0f b6       	in	r0, 0x3f	; 63
    1cb6:	f8 94       	cli
    1cb8:	de bf       	out	0x3e, r29	; 62
    1cba:	0f be       	out	0x3f, r0	; 63
    1cbc:	cd bf       	out	0x3d, r28	; 61
    1cbe:	ed 01       	movw	r28, r26
    1cc0:	08 95       	ret

00001cc2 <_exit>:
    1cc2:	f8 94       	cli

00001cc4 <__stop_program>:
    1cc4:	ff cf       	rjmp	.-2      	; 0x1cc4 <__stop_program>
