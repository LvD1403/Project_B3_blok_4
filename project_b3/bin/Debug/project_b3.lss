
bin\Debug\project_b3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000108  00800200  0000193e  000019f2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000193e  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000c  00800308  00800308  00001afa  2**0
                  ALLOC
  3 .fuse         00000003  00820000  00820000  00001afa  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .debug_aranges 00000200  00000000  00000000  00001afd  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 0000036d  00000000  00000000  00001cfd  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002820  00000000  00000000  0000206a  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000014fb  00000000  00000000  0000488a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001860  00000000  00000000  00005d85  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002e0  00000000  00000000  000075e8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000449  00000000  00000000  000078c8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000008ea  00000000  00000000  00007d11  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  000085fb  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__ctors_end>
       4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
       8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
       c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      10:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      14:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      18:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      1c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      20:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      24:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      28:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      2c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      30:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      34:	0c 94 b6 04 	jmp	0x96c	; 0x96c <__vector_13>
      38:	0c 94 c6 04 	jmp	0x98c	; 0x98c <__vector_14>
      3c:	0c 94 7f 04 	jmp	0x8fe	; 0x8fe <__vector_15>
      40:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      44:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      48:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      4c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      50:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      54:	0c 94 36 05 	jmp	0xa6c	; 0xa6c <__vector_21>
      58:	0c 94 5d 05 	jmp	0xaba	; 0xaba <__vector_22>
      5c:	0c 94 d6 04 	jmp	0x9ac	; 0x9ac <__vector_23>
      60:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      64:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      68:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      6c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      70:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      74:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      78:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      7c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      80:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      84:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      88:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      8c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      90:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      94:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      98:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      9c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      a0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      a4:	0c 94 ae 03 	jmp	0x75c	; 0x75c <__vector_41>
      a8:	0c 94 4d 04 	jmp	0x89a	; 0x89a <__vector_42>
      ac:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      b0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      b4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      b8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      bc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      c0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      c4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      c8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      cc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      d0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      d4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      d8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      dc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      e0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	13 e0       	ldi	r17, 0x03	; 3
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b2 e0       	ldi	r27, 0x02	; 2
      fa:	ee e3       	ldi	r30, 0x3E	; 62
      fc:	f9 e1       	ldi	r31, 0x19	; 25
      fe:	00 e0       	ldi	r16, 0x00	; 0
     100:	0b bf       	out	0x3b, r16	; 59
     102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
     104:	07 90       	elpm	r0, Z+
     106:	0d 92       	st	X+, r0
     108:	a8 30       	cpi	r26, 0x08	; 8
     10a:	b1 07       	cpc	r27, r17
     10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
     10e:	13 e0       	ldi	r17, 0x03	; 3
     110:	a8 e0       	ldi	r26, 0x08	; 8
     112:	b3 e0       	ldi	r27, 0x03	; 3
     114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
     116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
     118:	a4 31       	cpi	r26, 0x14	; 20
     11a:	b1 07       	cpc	r27, r17
     11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
     11e:	0e 94 95 00 	call	0x12a	; 0x12a <main>
     122:	0c 94 9d 0c 	jmp	0x193a	; 0x193a <_exit>

00000126 <__bad_interrupt>:
     126:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000012a <main>:
#include "Header.h"



int main(void)
{
     12a:	df 93       	push	r29
     12c:	cf 93       	push	r28
     12e:	cd b7       	in	r28, 0x3d	; 61
     130:	de b7       	in	r29, 0x3e	; 62
    init();
     132:	0e 94 a6 00 	call	0x14c	; 0x14c <init>
    init_motor();
     136:	0e 94 84 05 	call	0xb08	; 0xb08 <init_motor>
    while(1)
    {
        rechte_lijn();
     13a:	0e 94 e5 00 	call	0x1ca	; 0x1ca <rechte_lijn>
		bocht_links();
     13e:	0e 94 3e 02 	call	0x47c	; 0x47c <bocht_links>
		rechte_lijn();
     142:	0e 94 e5 00 	call	0x1ca	; 0x1ca <rechte_lijn>
        bocht_rechts();
     146:	0e 94 a7 03 	call	0x74e	; 0x74e <bocht_rechts>
     14a:	f7 cf       	rjmp	.-18     	; 0x13a <main+0x10>

0000014c <init>:
#include <avr/io.h>
#include <avr/interrupt.h>
#include "Header.h"

void init (void)
{
     14c:	df 93       	push	r29
     14e:	cf 93       	push	r28
     150:	cd b7       	in	r28, 0x3d	; 61
     152:	de b7       	in	r29, 0x3e	; 62
    DDRE |= (1 << PE5); //pwm links
     154:	ad e2       	ldi	r26, 0x2D	; 45
     156:	b0 e0       	ldi	r27, 0x00	; 0
     158:	ed e2       	ldi	r30, 0x2D	; 45
     15a:	f0 e0       	ldi	r31, 0x00	; 0
     15c:	80 81       	ld	r24, Z
     15e:	80 62       	ori	r24, 0x20	; 32
     160:	8c 93       	st	X, r24
    DDRE |= (1 << PE4); //pwm rechts
     162:	ad e2       	ldi	r26, 0x2D	; 45
     164:	b0 e0       	ldi	r27, 0x00	; 0
     166:	ed e2       	ldi	r30, 0x2D	; 45
     168:	f0 e0       	ldi	r31, 0x00	; 0
     16a:	80 81       	ld	r24, Z
     16c:	80 61       	ori	r24, 0x10	; 16
     16e:	8c 93       	st	X, r24
	DDRE |= (1 << PJ1); //motorrichting links
     170:	ad e2       	ldi	r26, 0x2D	; 45
     172:	b0 e0       	ldi	r27, 0x00	; 0
     174:	ed e2       	ldi	r30, 0x2D	; 45
     176:	f0 e0       	ldi	r31, 0x00	; 0
     178:	80 81       	ld	r24, Z
     17a:	82 60       	ori	r24, 0x02	; 2
     17c:	8c 93       	st	X, r24
	DDRE |= (1 << PJ0); //motorrichting rechts
     17e:	ad e2       	ldi	r26, 0x2D	; 45
     180:	b0 e0       	ldi	r27, 0x00	; 0
     182:	ed e2       	ldi	r30, 0x2D	; 45
     184:	f0 e0       	ldi	r31, 0x00	; 0
     186:	80 81       	ld	r24, Z
     188:	81 60       	ori	r24, 0x01	; 1
     18a:	8c 93       	st	X, r24
    DDRA &= ~(1 << PA0); //nadering links
     18c:	a1 e2       	ldi	r26, 0x21	; 33
     18e:	b0 e0       	ldi	r27, 0x00	; 0
     190:	e1 e2       	ldi	r30, 0x21	; 33
     192:	f0 e0       	ldi	r31, 0x00	; 0
     194:	80 81       	ld	r24, Z
     196:	8e 7f       	andi	r24, 0xFE	; 254
     198:	8c 93       	st	X, r24
    DDRA &= ~(1 << PA1); //nadering rechts
     19a:	a1 e2       	ldi	r26, 0x21	; 33
     19c:	b0 e0       	ldi	r27, 0x00	; 0
     19e:	e1 e2       	ldi	r30, 0x21	; 33
     1a0:	f0 e0       	ldi	r31, 0x00	; 0
     1a2:	80 81       	ld	r24, Z
     1a4:	8d 7f       	andi	r24, 0xFD	; 253
     1a6:	8c 93       	st	X, r24
	DDRL &= ~(1 << PL0); //Ultrasoon echopin
     1a8:	aa e0       	ldi	r26, 0x0A	; 10
     1aa:	b1 e0       	ldi	r27, 0x01	; 1
     1ac:	ea e0       	ldi	r30, 0x0A	; 10
     1ae:	f1 e0       	ldi	r31, 0x01	; 1
     1b0:	80 81       	ld	r24, Z
     1b2:	8e 7f       	andi	r24, 0xFE	; 254
     1b4:	8c 93       	st	X, r24
	DDRA |= (1 << PA3); //Ultrasoon trigger
     1b6:	a1 e2       	ldi	r26, 0x21	; 33
     1b8:	b0 e0       	ldi	r27, 0x00	; 0
     1ba:	e1 e2       	ldi	r30, 0x21	; 33
     1bc:	f0 e0       	ldi	r31, 0x00	; 0
     1be:	80 81       	ld	r24, Z
     1c0:	88 60       	ori	r24, 0x08	; 8
     1c2:	8c 93       	st	X, r24
}
     1c4:	cf 91       	pop	r28
     1c6:	df 91       	pop	r29
     1c8:	08 95       	ret

000001ca <rechte_lijn>:

void rechte_lijn(void)
{
     1ca:	df 93       	push	r29
     1cc:	cf 93       	push	r28
     1ce:	cd b7       	in	r28, 0x3d	; 61
     1d0:	de b7       	in	r29, 0x3e	; 62
     1d2:	a0 97       	sbiw	r28, 0x20	; 32
     1d4:	0f b6       	in	r0, 0x3f	; 63
     1d6:	f8 94       	cli
     1d8:	de bf       	out	0x3e, r29	; 62
     1da:	0f be       	out	0x3f, r0	; 63
     1dc:	cd bf       	out	0x3d, r28	; 61
     1de:	32 c1       	rjmp	.+612    	; 0x444 <rechte_lijn+0x27a>
    while (ultrasoon <= 37)
    {
        motor(122,122);
     1e0:	8a e7       	ldi	r24, 0x7A	; 122
     1e2:	90 e0       	ldi	r25, 0x00	; 0
     1e4:	6a e7       	ldi	r22, 0x7A	; 122
     1e6:	70 e0       	ldi	r23, 0x00	; 0
     1e8:	0e 94 c5 05 	call	0xb8a	; 0xb8a <motor>
        if (PINA &(1 << PA0))
     1ec:	e0 e2       	ldi	r30, 0x20	; 32
     1ee:	f0 e0       	ldi	r31, 0x00	; 0
     1f0:	80 81       	ld	r24, Z
     1f2:	88 2f       	mov	r24, r24
     1f4:	90 e0       	ldi	r25, 0x00	; 0
     1f6:	81 70       	andi	r24, 0x01	; 1
     1f8:	90 70       	andi	r25, 0x00	; 0
     1fa:	88 23       	and	r24, r24
     1fc:	09 f4       	brne	.+2      	; 0x200 <rechte_lijn+0x36>
     1fe:	8c c0       	rjmp	.+280    	; 0x318 <rechte_lijn+0x14e>
        {
            for (int a = 120;PINA &(1 << PA0); a++)
     200:	88 e7       	ldi	r24, 0x78	; 120
     202:	90 e0       	ldi	r25, 0x00	; 0
     204:	98 a3       	std	Y+32, r25	; 0x20
     206:	8f 8f       	std	Y+31, r24	; 0x1f
     208:	7d c0       	rjmp	.+250    	; 0x304 <rechte_lijn+0x13a>
            {
                motor (a,100);
     20a:	8f 8d       	ldd	r24, Y+31	; 0x1f
     20c:	98 a1       	ldd	r25, Y+32	; 0x20
     20e:	64 e6       	ldi	r22, 0x64	; 100
     210:	70 e0       	ldi	r23, 0x00	; 0
     212:	0e 94 c5 05 	call	0xb8a	; 0xb8a <motor>
     216:	80 e0       	ldi	r24, 0x00	; 0
     218:	90 e0       	ldi	r25, 0x00	; 0
     21a:	a0 ea       	ldi	r26, 0xA0	; 160
     21c:	b1 e4       	ldi	r27, 0x41	; 65
     21e:	89 8f       	std	Y+25, r24	; 0x19
     220:	9a 8f       	std	Y+26, r25	; 0x1a
     222:	ab 8f       	std	Y+27, r26	; 0x1b
     224:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     226:	69 8d       	ldd	r22, Y+25	; 0x19
     228:	7a 8d       	ldd	r23, Y+26	; 0x1a
     22a:	8b 8d       	ldd	r24, Y+27	; 0x1b
     22c:	9c 8d       	ldd	r25, Y+28	; 0x1c
     22e:	20 e0       	ldi	r18, 0x00	; 0
     230:	30 e0       	ldi	r19, 0x00	; 0
     232:	4a e7       	ldi	r20, 0x7A	; 122
     234:	55 e4       	ldi	r21, 0x45	; 69
     236:	0e 94 ea 07 	call	0xfd4	; 0xfd4 <__mulsf3>
     23a:	dc 01       	movw	r26, r24
     23c:	cb 01       	movw	r24, r22
     23e:	8d 8b       	std	Y+21, r24	; 0x15
     240:	9e 8b       	std	Y+22, r25	; 0x16
     242:	af 8b       	std	Y+23, r26	; 0x17
     244:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
     246:	6d 89       	ldd	r22, Y+21	; 0x15
     248:	7e 89       	ldd	r23, Y+22	; 0x16
     24a:	8f 89       	ldd	r24, Y+23	; 0x17
     24c:	98 8d       	ldd	r25, Y+24	; 0x18
     24e:	20 e0       	ldi	r18, 0x00	; 0
     250:	30 e0       	ldi	r19, 0x00	; 0
     252:	40 e8       	ldi	r20, 0x80	; 128
     254:	5f e3       	ldi	r21, 0x3F	; 63
     256:	0e 94 44 09 	call	0x1288	; 0x1288 <__ltsf2>
     25a:	88 23       	and	r24, r24
     25c:	2c f4       	brge	.+10     	; 0x268 <rechte_lijn+0x9e>
		__ticks = 1;
     25e:	81 e0       	ldi	r24, 0x01	; 1
     260:	90 e0       	ldi	r25, 0x00	; 0
     262:	9c 8b       	std	Y+20, r25	; 0x14
     264:	8b 8b       	std	Y+19, r24	; 0x13
     266:	3f c0       	rjmp	.+126    	; 0x2e6 <rechte_lijn+0x11c>
	else if (__tmp > 65535)
     268:	6d 89       	ldd	r22, Y+21	; 0x15
     26a:	7e 89       	ldd	r23, Y+22	; 0x16
     26c:	8f 89       	ldd	r24, Y+23	; 0x17
     26e:	98 8d       	ldd	r25, Y+24	; 0x18
     270:	20 e0       	ldi	r18, 0x00	; 0
     272:	3f ef       	ldi	r19, 0xFF	; 255
     274:	4f e7       	ldi	r20, 0x7F	; 127
     276:	57 e4       	ldi	r21, 0x47	; 71
     278:	0e 94 e4 08 	call	0x11c8	; 0x11c8 <__gtsf2>
     27c:	18 16       	cp	r1, r24
     27e:	4c f5       	brge	.+82     	; 0x2d2 <rechte_lijn+0x108>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     280:	69 8d       	ldd	r22, Y+25	; 0x19
     282:	7a 8d       	ldd	r23, Y+26	; 0x1a
     284:	8b 8d       	ldd	r24, Y+27	; 0x1b
     286:	9c 8d       	ldd	r25, Y+28	; 0x1c
     288:	20 e0       	ldi	r18, 0x00	; 0
     28a:	30 e0       	ldi	r19, 0x00	; 0
     28c:	40 e2       	ldi	r20, 0x20	; 32
     28e:	51 e4       	ldi	r21, 0x41	; 65
     290:	0e 94 ea 07 	call	0xfd4	; 0xfd4 <__mulsf3>
     294:	dc 01       	movw	r26, r24
     296:	cb 01       	movw	r24, r22
     298:	bc 01       	movw	r22, r24
     29a:	cd 01       	movw	r24, r26
     29c:	0e 94 14 06 	call	0xc28	; 0xc28 <__fixunssfsi>
     2a0:	dc 01       	movw	r26, r24
     2a2:	cb 01       	movw	r24, r22
     2a4:	9c 8b       	std	Y+20, r25	; 0x14
     2a6:	8b 8b       	std	Y+19, r24	; 0x13
     2a8:	0f c0       	rjmp	.+30     	; 0x2c8 <rechte_lijn+0xfe>
     2aa:	80 e9       	ldi	r24, 0x90	; 144
     2ac:	91 e0       	ldi	r25, 0x01	; 1
     2ae:	9a 8b       	std	Y+18, r25	; 0x12
     2b0:	89 8b       	std	Y+17, r24	; 0x11
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     2b2:	89 89       	ldd	r24, Y+17	; 0x11
     2b4:	9a 89       	ldd	r25, Y+18	; 0x12
     2b6:	01 97       	sbiw	r24, 0x01	; 1
     2b8:	f1 f7       	brne	.-4      	; 0x2b6 <rechte_lijn+0xec>
     2ba:	9a 8b       	std	Y+18, r25	; 0x12
     2bc:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     2be:	8b 89       	ldd	r24, Y+19	; 0x13
     2c0:	9c 89       	ldd	r25, Y+20	; 0x14
     2c2:	01 97       	sbiw	r24, 0x01	; 1
     2c4:	9c 8b       	std	Y+20, r25	; 0x14
     2c6:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     2c8:	8b 89       	ldd	r24, Y+19	; 0x13
     2ca:	9c 89       	ldd	r25, Y+20	; 0x14
     2cc:	00 97       	sbiw	r24, 0x00	; 0
     2ce:	69 f7       	brne	.-38     	; 0x2aa <rechte_lijn+0xe0>
     2d0:	14 c0       	rjmp	.+40     	; 0x2fa <rechte_lijn+0x130>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     2d2:	6d 89       	ldd	r22, Y+21	; 0x15
     2d4:	7e 89       	ldd	r23, Y+22	; 0x16
     2d6:	8f 89       	ldd	r24, Y+23	; 0x17
     2d8:	98 8d       	ldd	r25, Y+24	; 0x18
     2da:	0e 94 14 06 	call	0xc28	; 0xc28 <__fixunssfsi>
     2de:	dc 01       	movw	r26, r24
     2e0:	cb 01       	movw	r24, r22
     2e2:	9c 8b       	std	Y+20, r25	; 0x14
     2e4:	8b 8b       	std	Y+19, r24	; 0x13
     2e6:	8b 89       	ldd	r24, Y+19	; 0x13
     2e8:	9c 89       	ldd	r25, Y+20	; 0x14
     2ea:	98 8b       	std	Y+16, r25	; 0x10
     2ec:	8f 87       	std	Y+15, r24	; 0x0f
     2ee:	8f 85       	ldd	r24, Y+15	; 0x0f
     2f0:	98 89       	ldd	r25, Y+16	; 0x10
     2f2:	01 97       	sbiw	r24, 0x01	; 1
     2f4:	f1 f7       	brne	.-4      	; 0x2f2 <rechte_lijn+0x128>
     2f6:	98 8b       	std	Y+16, r25	; 0x10
     2f8:	8f 87       	std	Y+15, r24	; 0x0f
    while (ultrasoon <= 37)
    {
        motor(122,122);
        if (PINA &(1 << PA0))
        {
            for (int a = 120;PINA &(1 << PA0); a++)
     2fa:	8f 8d       	ldd	r24, Y+31	; 0x1f
     2fc:	98 a1       	ldd	r25, Y+32	; 0x20
     2fe:	01 96       	adiw	r24, 0x01	; 1
     300:	98 a3       	std	Y+32, r25	; 0x20
     302:	8f 8f       	std	Y+31, r24	; 0x1f
     304:	e0 e2       	ldi	r30, 0x20	; 32
     306:	f0 e0       	ldi	r31, 0x00	; 0
     308:	80 81       	ld	r24, Z
     30a:	88 2f       	mov	r24, r24
     30c:	90 e0       	ldi	r25, 0x00	; 0
     30e:	81 70       	andi	r24, 0x01	; 1
     310:	90 70       	andi	r25, 0x00	; 0
     312:	88 23       	and	r24, r24
     314:	09 f0       	breq	.+2      	; 0x318 <rechte_lijn+0x14e>
     316:	79 cf       	rjmp	.-270    	; 0x20a <rechte_lijn+0x40>
            {
                motor (a,100);
                _delay_ms(20);
            }
        }
        if (PINA &(1 << PA1))
     318:	e0 e2       	ldi	r30, 0x20	; 32
     31a:	f0 e0       	ldi	r31, 0x00	; 0
     31c:	80 81       	ld	r24, Z
     31e:	88 2f       	mov	r24, r24
     320:	90 e0       	ldi	r25, 0x00	; 0
     322:	82 70       	andi	r24, 0x02	; 2
     324:	90 70       	andi	r25, 0x00	; 0
     326:	00 97       	sbiw	r24, 0x00	; 0
     328:	09 f4       	brne	.+2      	; 0x32c <rechte_lijn+0x162>
     32a:	8c c0       	rjmp	.+280    	; 0x444 <rechte_lijn+0x27a>
        {
            for (int a = 120;(PINA &(1 << PA1)); a++)
     32c:	88 e7       	ldi	r24, 0x78	; 120
     32e:	90 e0       	ldi	r25, 0x00	; 0
     330:	9e 8f       	std	Y+30, r25	; 0x1e
     332:	8d 8f       	std	Y+29, r24	; 0x1d
     334:	7d c0       	rjmp	.+250    	; 0x430 <rechte_lijn+0x266>
            {
                motor (a,100);
     336:	8d 8d       	ldd	r24, Y+29	; 0x1d
     338:	9e 8d       	ldd	r25, Y+30	; 0x1e
     33a:	64 e6       	ldi	r22, 0x64	; 100
     33c:	70 e0       	ldi	r23, 0x00	; 0
     33e:	0e 94 c5 05 	call	0xb8a	; 0xb8a <motor>
     342:	80 e0       	ldi	r24, 0x00	; 0
     344:	90 e0       	ldi	r25, 0x00	; 0
     346:	a0 ea       	ldi	r26, 0xA0	; 160
     348:	b1 e4       	ldi	r27, 0x41	; 65
     34a:	8b 87       	std	Y+11, r24	; 0x0b
     34c:	9c 87       	std	Y+12, r25	; 0x0c
     34e:	ad 87       	std	Y+13, r26	; 0x0d
     350:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     352:	6b 85       	ldd	r22, Y+11	; 0x0b
     354:	7c 85       	ldd	r23, Y+12	; 0x0c
     356:	8d 85       	ldd	r24, Y+13	; 0x0d
     358:	9e 85       	ldd	r25, Y+14	; 0x0e
     35a:	20 e0       	ldi	r18, 0x00	; 0
     35c:	30 e0       	ldi	r19, 0x00	; 0
     35e:	4a e7       	ldi	r20, 0x7A	; 122
     360:	55 e4       	ldi	r21, 0x45	; 69
     362:	0e 94 ea 07 	call	0xfd4	; 0xfd4 <__mulsf3>
     366:	dc 01       	movw	r26, r24
     368:	cb 01       	movw	r24, r22
     36a:	8f 83       	std	Y+7, r24	; 0x07
     36c:	98 87       	std	Y+8, r25	; 0x08
     36e:	a9 87       	std	Y+9, r26	; 0x09
     370:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     372:	6f 81       	ldd	r22, Y+7	; 0x07
     374:	78 85       	ldd	r23, Y+8	; 0x08
     376:	89 85       	ldd	r24, Y+9	; 0x09
     378:	9a 85       	ldd	r25, Y+10	; 0x0a
     37a:	20 e0       	ldi	r18, 0x00	; 0
     37c:	30 e0       	ldi	r19, 0x00	; 0
     37e:	40 e8       	ldi	r20, 0x80	; 128
     380:	5f e3       	ldi	r21, 0x3F	; 63
     382:	0e 94 44 09 	call	0x1288	; 0x1288 <__ltsf2>
     386:	88 23       	and	r24, r24
     388:	2c f4       	brge	.+10     	; 0x394 <rechte_lijn+0x1ca>
		__ticks = 1;
     38a:	81 e0       	ldi	r24, 0x01	; 1
     38c:	90 e0       	ldi	r25, 0x00	; 0
     38e:	9e 83       	std	Y+6, r25	; 0x06
     390:	8d 83       	std	Y+5, r24	; 0x05
     392:	3f c0       	rjmp	.+126    	; 0x412 <rechte_lijn+0x248>
	else if (__tmp > 65535)
     394:	6f 81       	ldd	r22, Y+7	; 0x07
     396:	78 85       	ldd	r23, Y+8	; 0x08
     398:	89 85       	ldd	r24, Y+9	; 0x09
     39a:	9a 85       	ldd	r25, Y+10	; 0x0a
     39c:	20 e0       	ldi	r18, 0x00	; 0
     39e:	3f ef       	ldi	r19, 0xFF	; 255
     3a0:	4f e7       	ldi	r20, 0x7F	; 127
     3a2:	57 e4       	ldi	r21, 0x47	; 71
     3a4:	0e 94 e4 08 	call	0x11c8	; 0x11c8 <__gtsf2>
     3a8:	18 16       	cp	r1, r24
     3aa:	4c f5       	brge	.+82     	; 0x3fe <rechte_lijn+0x234>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     3ac:	6b 85       	ldd	r22, Y+11	; 0x0b
     3ae:	7c 85       	ldd	r23, Y+12	; 0x0c
     3b0:	8d 85       	ldd	r24, Y+13	; 0x0d
     3b2:	9e 85       	ldd	r25, Y+14	; 0x0e
     3b4:	20 e0       	ldi	r18, 0x00	; 0
     3b6:	30 e0       	ldi	r19, 0x00	; 0
     3b8:	40 e2       	ldi	r20, 0x20	; 32
     3ba:	51 e4       	ldi	r21, 0x41	; 65
     3bc:	0e 94 ea 07 	call	0xfd4	; 0xfd4 <__mulsf3>
     3c0:	dc 01       	movw	r26, r24
     3c2:	cb 01       	movw	r24, r22
     3c4:	bc 01       	movw	r22, r24
     3c6:	cd 01       	movw	r24, r26
     3c8:	0e 94 14 06 	call	0xc28	; 0xc28 <__fixunssfsi>
     3cc:	dc 01       	movw	r26, r24
     3ce:	cb 01       	movw	r24, r22
     3d0:	9e 83       	std	Y+6, r25	; 0x06
     3d2:	8d 83       	std	Y+5, r24	; 0x05
     3d4:	0f c0       	rjmp	.+30     	; 0x3f4 <rechte_lijn+0x22a>
     3d6:	80 e9       	ldi	r24, 0x90	; 144
     3d8:	91 e0       	ldi	r25, 0x01	; 1
     3da:	9c 83       	std	Y+4, r25	; 0x04
     3dc:	8b 83       	std	Y+3, r24	; 0x03
     3de:	8b 81       	ldd	r24, Y+3	; 0x03
     3e0:	9c 81       	ldd	r25, Y+4	; 0x04
     3e2:	01 97       	sbiw	r24, 0x01	; 1
     3e4:	f1 f7       	brne	.-4      	; 0x3e2 <rechte_lijn+0x218>
     3e6:	9c 83       	std	Y+4, r25	; 0x04
     3e8:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     3ea:	8d 81       	ldd	r24, Y+5	; 0x05
     3ec:	9e 81       	ldd	r25, Y+6	; 0x06
     3ee:	01 97       	sbiw	r24, 0x01	; 1
     3f0:	9e 83       	std	Y+6, r25	; 0x06
     3f2:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     3f4:	8d 81       	ldd	r24, Y+5	; 0x05
     3f6:	9e 81       	ldd	r25, Y+6	; 0x06
     3f8:	00 97       	sbiw	r24, 0x00	; 0
     3fa:	69 f7       	brne	.-38     	; 0x3d6 <rechte_lijn+0x20c>
     3fc:	14 c0       	rjmp	.+40     	; 0x426 <rechte_lijn+0x25c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     3fe:	6f 81       	ldd	r22, Y+7	; 0x07
     400:	78 85       	ldd	r23, Y+8	; 0x08
     402:	89 85       	ldd	r24, Y+9	; 0x09
     404:	9a 85       	ldd	r25, Y+10	; 0x0a
     406:	0e 94 14 06 	call	0xc28	; 0xc28 <__fixunssfsi>
     40a:	dc 01       	movw	r26, r24
     40c:	cb 01       	movw	r24, r22
     40e:	9e 83       	std	Y+6, r25	; 0x06
     410:	8d 83       	std	Y+5, r24	; 0x05
     412:	8d 81       	ldd	r24, Y+5	; 0x05
     414:	9e 81       	ldd	r25, Y+6	; 0x06
     416:	9a 83       	std	Y+2, r25	; 0x02
     418:	89 83       	std	Y+1, r24	; 0x01
     41a:	89 81       	ldd	r24, Y+1	; 0x01
     41c:	9a 81       	ldd	r25, Y+2	; 0x02
     41e:	01 97       	sbiw	r24, 0x01	; 1
     420:	f1 f7       	brne	.-4      	; 0x41e <rechte_lijn+0x254>
     422:	9a 83       	std	Y+2, r25	; 0x02
     424:	89 83       	std	Y+1, r24	; 0x01
                _delay_ms(20);
            }
        }
        if (PINA &(1 << PA1))
        {
            for (int a = 120;(PINA &(1 << PA1)); a++)
     426:	8d 8d       	ldd	r24, Y+29	; 0x1d
     428:	9e 8d       	ldd	r25, Y+30	; 0x1e
     42a:	01 96       	adiw	r24, 0x01	; 1
     42c:	9e 8f       	std	Y+30, r25	; 0x1e
     42e:	8d 8f       	std	Y+29, r24	; 0x1d
     430:	e0 e2       	ldi	r30, 0x20	; 32
     432:	f0 e0       	ldi	r31, 0x00	; 0
     434:	80 81       	ld	r24, Z
     436:	88 2f       	mov	r24, r24
     438:	90 e0       	ldi	r25, 0x00	; 0
     43a:	82 70       	andi	r24, 0x02	; 2
     43c:	90 70       	andi	r25, 0x00	; 0
     43e:	00 97       	sbiw	r24, 0x00	; 0
     440:	09 f0       	breq	.+2      	; 0x444 <rechte_lijn+0x27a>
     442:	79 cf       	rjmp	.-270    	; 0x336 <rechte_lijn+0x16c>
	DDRA |= (1 << PA3); //Ultrasoon trigger
}

void rechte_lijn(void)
{
    while (ultrasoon <= 37)
     444:	80 91 08 03 	lds	r24, 0x0308
     448:	90 91 09 03 	lds	r25, 0x0309
     44c:	a0 91 0a 03 	lds	r26, 0x030A
     450:	b0 91 0b 03 	lds	r27, 0x030B
     454:	bc 01       	movw	r22, r24
     456:	cd 01       	movw	r24, r26
     458:	20 e0       	ldi	r18, 0x00	; 0
     45a:	30 e0       	ldi	r19, 0x00	; 0
     45c:	44 e1       	ldi	r20, 0x14	; 20
     45e:	52 e4       	ldi	r21, 0x42	; 66
     460:	0e 94 74 09 	call	0x12e8	; 0x12e8 <__lesf2>
     464:	18 16       	cp	r1, r24
     466:	0c f0       	brlt	.+2      	; 0x46a <rechte_lijn+0x2a0>
     468:	bb ce       	rjmp	.-650    	; 0x1e0 <rechte_lijn+0x16>
                motor (a,100);
                _delay_ms(20);
            }
        }
    }
}
     46a:	a0 96       	adiw	r28, 0x20	; 32
     46c:	0f b6       	in	r0, 0x3f	; 63
     46e:	f8 94       	cli
     470:	de bf       	out	0x3e, r29	; 62
     472:	0f be       	out	0x3f, r0	; 63
     474:	cd bf       	out	0x3d, r28	; 61
     476:	cf 91       	pop	r28
     478:	df 91       	pop	r29
     47a:	08 95       	ret

0000047c <bocht_links>:

void bocht_links (void)
{
     47c:	df 93       	push	r29
     47e:	cf 93       	push	r28
     480:	cd b7       	in	r28, 0x3d	; 61
     482:	de b7       	in	r29, 0x3e	; 62
     484:	a0 97       	sbiw	r28, 0x20	; 32
     486:	0f b6       	in	r0, 0x3f	; 63
     488:	f8 94       	cli
     48a:	de bf       	out	0x3e, r29	; 62
     48c:	0f be       	out	0x3f, r0	; 63
     48e:	cd bf       	out	0x3d, r28	; 61
     490:	32 c1       	rjmp	.+612    	; 0x6f6 <bocht_links+0x27a>
	    while (ultrasoon <= 19) //rij door totdat we op +/-
    {
        motor(20,20);
     492:	84 e1       	ldi	r24, 0x14	; 20
     494:	90 e0       	ldi	r25, 0x00	; 0
     496:	64 e1       	ldi	r22, 0x14	; 20
     498:	70 e0       	ldi	r23, 0x00	; 0
     49a:	0e 94 c5 05 	call	0xb8a	; 0xb8a <motor>
        if (PINA &(1 << PA0))
     49e:	e0 e2       	ldi	r30, 0x20	; 32
     4a0:	f0 e0       	ldi	r31, 0x00	; 0
     4a2:	80 81       	ld	r24, Z
     4a4:	88 2f       	mov	r24, r24
     4a6:	90 e0       	ldi	r25, 0x00	; 0
     4a8:	81 70       	andi	r24, 0x01	; 1
     4aa:	90 70       	andi	r25, 0x00	; 0
     4ac:	88 23       	and	r24, r24
     4ae:	09 f4       	brne	.+2      	; 0x4b2 <bocht_links+0x36>
     4b0:	8c c0       	rjmp	.+280    	; 0x5ca <bocht_links+0x14e>
        {
            for (int a = 20;PINA &(1 << PA0); a++)
     4b2:	84 e1       	ldi	r24, 0x14	; 20
     4b4:	90 e0       	ldi	r25, 0x00	; 0
     4b6:	98 a3       	std	Y+32, r25	; 0x20
     4b8:	8f 8f       	std	Y+31, r24	; 0x1f
     4ba:	7d c0       	rjmp	.+250    	; 0x5b6 <bocht_links+0x13a>
            {
                motor (a,15);
     4bc:	8f 8d       	ldd	r24, Y+31	; 0x1f
     4be:	98 a1       	ldd	r25, Y+32	; 0x20
     4c0:	6f e0       	ldi	r22, 0x0F	; 15
     4c2:	70 e0       	ldi	r23, 0x00	; 0
     4c4:	0e 94 c5 05 	call	0xb8a	; 0xb8a <motor>
     4c8:	80 e0       	ldi	r24, 0x00	; 0
     4ca:	90 e0       	ldi	r25, 0x00	; 0
     4cc:	a0 ea       	ldi	r26, 0xA0	; 160
     4ce:	b1 e4       	ldi	r27, 0x41	; 65
     4d0:	89 8f       	std	Y+25, r24	; 0x19
     4d2:	9a 8f       	std	Y+26, r25	; 0x1a
     4d4:	ab 8f       	std	Y+27, r26	; 0x1b
     4d6:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     4d8:	69 8d       	ldd	r22, Y+25	; 0x19
     4da:	7a 8d       	ldd	r23, Y+26	; 0x1a
     4dc:	8b 8d       	ldd	r24, Y+27	; 0x1b
     4de:	9c 8d       	ldd	r25, Y+28	; 0x1c
     4e0:	20 e0       	ldi	r18, 0x00	; 0
     4e2:	30 e0       	ldi	r19, 0x00	; 0
     4e4:	4a e7       	ldi	r20, 0x7A	; 122
     4e6:	55 e4       	ldi	r21, 0x45	; 69
     4e8:	0e 94 ea 07 	call	0xfd4	; 0xfd4 <__mulsf3>
     4ec:	dc 01       	movw	r26, r24
     4ee:	cb 01       	movw	r24, r22
     4f0:	8d 8b       	std	Y+21, r24	; 0x15
     4f2:	9e 8b       	std	Y+22, r25	; 0x16
     4f4:	af 8b       	std	Y+23, r26	; 0x17
     4f6:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
     4f8:	6d 89       	ldd	r22, Y+21	; 0x15
     4fa:	7e 89       	ldd	r23, Y+22	; 0x16
     4fc:	8f 89       	ldd	r24, Y+23	; 0x17
     4fe:	98 8d       	ldd	r25, Y+24	; 0x18
     500:	20 e0       	ldi	r18, 0x00	; 0
     502:	30 e0       	ldi	r19, 0x00	; 0
     504:	40 e8       	ldi	r20, 0x80	; 128
     506:	5f e3       	ldi	r21, 0x3F	; 63
     508:	0e 94 44 09 	call	0x1288	; 0x1288 <__ltsf2>
     50c:	88 23       	and	r24, r24
     50e:	2c f4       	brge	.+10     	; 0x51a <bocht_links+0x9e>
		__ticks = 1;
     510:	81 e0       	ldi	r24, 0x01	; 1
     512:	90 e0       	ldi	r25, 0x00	; 0
     514:	9c 8b       	std	Y+20, r25	; 0x14
     516:	8b 8b       	std	Y+19, r24	; 0x13
     518:	3f c0       	rjmp	.+126    	; 0x598 <bocht_links+0x11c>
	else if (__tmp > 65535)
     51a:	6d 89       	ldd	r22, Y+21	; 0x15
     51c:	7e 89       	ldd	r23, Y+22	; 0x16
     51e:	8f 89       	ldd	r24, Y+23	; 0x17
     520:	98 8d       	ldd	r25, Y+24	; 0x18
     522:	20 e0       	ldi	r18, 0x00	; 0
     524:	3f ef       	ldi	r19, 0xFF	; 255
     526:	4f e7       	ldi	r20, 0x7F	; 127
     528:	57 e4       	ldi	r21, 0x47	; 71
     52a:	0e 94 e4 08 	call	0x11c8	; 0x11c8 <__gtsf2>
     52e:	18 16       	cp	r1, r24
     530:	4c f5       	brge	.+82     	; 0x584 <bocht_links+0x108>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     532:	69 8d       	ldd	r22, Y+25	; 0x19
     534:	7a 8d       	ldd	r23, Y+26	; 0x1a
     536:	8b 8d       	ldd	r24, Y+27	; 0x1b
     538:	9c 8d       	ldd	r25, Y+28	; 0x1c
     53a:	20 e0       	ldi	r18, 0x00	; 0
     53c:	30 e0       	ldi	r19, 0x00	; 0
     53e:	40 e2       	ldi	r20, 0x20	; 32
     540:	51 e4       	ldi	r21, 0x41	; 65
     542:	0e 94 ea 07 	call	0xfd4	; 0xfd4 <__mulsf3>
     546:	dc 01       	movw	r26, r24
     548:	cb 01       	movw	r24, r22
     54a:	bc 01       	movw	r22, r24
     54c:	cd 01       	movw	r24, r26
     54e:	0e 94 14 06 	call	0xc28	; 0xc28 <__fixunssfsi>
     552:	dc 01       	movw	r26, r24
     554:	cb 01       	movw	r24, r22
     556:	9c 8b       	std	Y+20, r25	; 0x14
     558:	8b 8b       	std	Y+19, r24	; 0x13
     55a:	0f c0       	rjmp	.+30     	; 0x57a <bocht_links+0xfe>
     55c:	80 e9       	ldi	r24, 0x90	; 144
     55e:	91 e0       	ldi	r25, 0x01	; 1
     560:	9a 8b       	std	Y+18, r25	; 0x12
     562:	89 8b       	std	Y+17, r24	; 0x11
     564:	89 89       	ldd	r24, Y+17	; 0x11
     566:	9a 89       	ldd	r25, Y+18	; 0x12
     568:	01 97       	sbiw	r24, 0x01	; 1
     56a:	f1 f7       	brne	.-4      	; 0x568 <bocht_links+0xec>
     56c:	9a 8b       	std	Y+18, r25	; 0x12
     56e:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     570:	8b 89       	ldd	r24, Y+19	; 0x13
     572:	9c 89       	ldd	r25, Y+20	; 0x14
     574:	01 97       	sbiw	r24, 0x01	; 1
     576:	9c 8b       	std	Y+20, r25	; 0x14
     578:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     57a:	8b 89       	ldd	r24, Y+19	; 0x13
     57c:	9c 89       	ldd	r25, Y+20	; 0x14
     57e:	00 97       	sbiw	r24, 0x00	; 0
     580:	69 f7       	brne	.-38     	; 0x55c <bocht_links+0xe0>
     582:	14 c0       	rjmp	.+40     	; 0x5ac <bocht_links+0x130>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     584:	6d 89       	ldd	r22, Y+21	; 0x15
     586:	7e 89       	ldd	r23, Y+22	; 0x16
     588:	8f 89       	ldd	r24, Y+23	; 0x17
     58a:	98 8d       	ldd	r25, Y+24	; 0x18
     58c:	0e 94 14 06 	call	0xc28	; 0xc28 <__fixunssfsi>
     590:	dc 01       	movw	r26, r24
     592:	cb 01       	movw	r24, r22
     594:	9c 8b       	std	Y+20, r25	; 0x14
     596:	8b 8b       	std	Y+19, r24	; 0x13
     598:	8b 89       	ldd	r24, Y+19	; 0x13
     59a:	9c 89       	ldd	r25, Y+20	; 0x14
     59c:	98 8b       	std	Y+16, r25	; 0x10
     59e:	8f 87       	std	Y+15, r24	; 0x0f
     5a0:	8f 85       	ldd	r24, Y+15	; 0x0f
     5a2:	98 89       	ldd	r25, Y+16	; 0x10
     5a4:	01 97       	sbiw	r24, 0x01	; 1
     5a6:	f1 f7       	brne	.-4      	; 0x5a4 <bocht_links+0x128>
     5a8:	98 8b       	std	Y+16, r25	; 0x10
     5aa:	8f 87       	std	Y+15, r24	; 0x0f
	    while (ultrasoon <= 19) //rij door totdat we op +/-
    {
        motor(20,20);
        if (PINA &(1 << PA0))
        {
            for (int a = 20;PINA &(1 << PA0); a++)
     5ac:	8f 8d       	ldd	r24, Y+31	; 0x1f
     5ae:	98 a1       	ldd	r25, Y+32	; 0x20
     5b0:	01 96       	adiw	r24, 0x01	; 1
     5b2:	98 a3       	std	Y+32, r25	; 0x20
     5b4:	8f 8f       	std	Y+31, r24	; 0x1f
     5b6:	e0 e2       	ldi	r30, 0x20	; 32
     5b8:	f0 e0       	ldi	r31, 0x00	; 0
     5ba:	80 81       	ld	r24, Z
     5bc:	88 2f       	mov	r24, r24
     5be:	90 e0       	ldi	r25, 0x00	; 0
     5c0:	81 70       	andi	r24, 0x01	; 1
     5c2:	90 70       	andi	r25, 0x00	; 0
     5c4:	88 23       	and	r24, r24
     5c6:	09 f0       	breq	.+2      	; 0x5ca <bocht_links+0x14e>
     5c8:	79 cf       	rjmp	.-270    	; 0x4bc <bocht_links+0x40>
            {
                motor (a,15);
                _delay_ms(20);
            }
        }
        if (PINA &(1 << PA1))
     5ca:	e0 e2       	ldi	r30, 0x20	; 32
     5cc:	f0 e0       	ldi	r31, 0x00	; 0
     5ce:	80 81       	ld	r24, Z
     5d0:	88 2f       	mov	r24, r24
     5d2:	90 e0       	ldi	r25, 0x00	; 0
     5d4:	82 70       	andi	r24, 0x02	; 2
     5d6:	90 70       	andi	r25, 0x00	; 0
     5d8:	00 97       	sbiw	r24, 0x00	; 0
     5da:	09 f4       	brne	.+2      	; 0x5de <bocht_links+0x162>
     5dc:	8c c0       	rjmp	.+280    	; 0x6f6 <bocht_links+0x27a>
        {
            for (int a = 20;(PINA &(1 << PA1)); a++)
     5de:	84 e1       	ldi	r24, 0x14	; 20
     5e0:	90 e0       	ldi	r25, 0x00	; 0
     5e2:	9e 8f       	std	Y+30, r25	; 0x1e
     5e4:	8d 8f       	std	Y+29, r24	; 0x1d
     5e6:	7d c0       	rjmp	.+250    	; 0x6e2 <bocht_links+0x266>
            {
                motor (a,15);
     5e8:	8d 8d       	ldd	r24, Y+29	; 0x1d
     5ea:	9e 8d       	ldd	r25, Y+30	; 0x1e
     5ec:	6f e0       	ldi	r22, 0x0F	; 15
     5ee:	70 e0       	ldi	r23, 0x00	; 0
     5f0:	0e 94 c5 05 	call	0xb8a	; 0xb8a <motor>
     5f4:	80 e0       	ldi	r24, 0x00	; 0
     5f6:	90 e0       	ldi	r25, 0x00	; 0
     5f8:	a0 ea       	ldi	r26, 0xA0	; 160
     5fa:	b1 e4       	ldi	r27, 0x41	; 65
     5fc:	8b 87       	std	Y+11, r24	; 0x0b
     5fe:	9c 87       	std	Y+12, r25	; 0x0c
     600:	ad 87       	std	Y+13, r26	; 0x0d
     602:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     604:	6b 85       	ldd	r22, Y+11	; 0x0b
     606:	7c 85       	ldd	r23, Y+12	; 0x0c
     608:	8d 85       	ldd	r24, Y+13	; 0x0d
     60a:	9e 85       	ldd	r25, Y+14	; 0x0e
     60c:	20 e0       	ldi	r18, 0x00	; 0
     60e:	30 e0       	ldi	r19, 0x00	; 0
     610:	4a e7       	ldi	r20, 0x7A	; 122
     612:	55 e4       	ldi	r21, 0x45	; 69
     614:	0e 94 ea 07 	call	0xfd4	; 0xfd4 <__mulsf3>
     618:	dc 01       	movw	r26, r24
     61a:	cb 01       	movw	r24, r22
     61c:	8f 83       	std	Y+7, r24	; 0x07
     61e:	98 87       	std	Y+8, r25	; 0x08
     620:	a9 87       	std	Y+9, r26	; 0x09
     622:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     624:	6f 81       	ldd	r22, Y+7	; 0x07
     626:	78 85       	ldd	r23, Y+8	; 0x08
     628:	89 85       	ldd	r24, Y+9	; 0x09
     62a:	9a 85       	ldd	r25, Y+10	; 0x0a
     62c:	20 e0       	ldi	r18, 0x00	; 0
     62e:	30 e0       	ldi	r19, 0x00	; 0
     630:	40 e8       	ldi	r20, 0x80	; 128
     632:	5f e3       	ldi	r21, 0x3F	; 63
     634:	0e 94 44 09 	call	0x1288	; 0x1288 <__ltsf2>
     638:	88 23       	and	r24, r24
     63a:	2c f4       	brge	.+10     	; 0x646 <bocht_links+0x1ca>
		__ticks = 1;
     63c:	81 e0       	ldi	r24, 0x01	; 1
     63e:	90 e0       	ldi	r25, 0x00	; 0
     640:	9e 83       	std	Y+6, r25	; 0x06
     642:	8d 83       	std	Y+5, r24	; 0x05
     644:	3f c0       	rjmp	.+126    	; 0x6c4 <bocht_links+0x248>
	else if (__tmp > 65535)
     646:	6f 81       	ldd	r22, Y+7	; 0x07
     648:	78 85       	ldd	r23, Y+8	; 0x08
     64a:	89 85       	ldd	r24, Y+9	; 0x09
     64c:	9a 85       	ldd	r25, Y+10	; 0x0a
     64e:	20 e0       	ldi	r18, 0x00	; 0
     650:	3f ef       	ldi	r19, 0xFF	; 255
     652:	4f e7       	ldi	r20, 0x7F	; 127
     654:	57 e4       	ldi	r21, 0x47	; 71
     656:	0e 94 e4 08 	call	0x11c8	; 0x11c8 <__gtsf2>
     65a:	18 16       	cp	r1, r24
     65c:	4c f5       	brge	.+82     	; 0x6b0 <bocht_links+0x234>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     65e:	6b 85       	ldd	r22, Y+11	; 0x0b
     660:	7c 85       	ldd	r23, Y+12	; 0x0c
     662:	8d 85       	ldd	r24, Y+13	; 0x0d
     664:	9e 85       	ldd	r25, Y+14	; 0x0e
     666:	20 e0       	ldi	r18, 0x00	; 0
     668:	30 e0       	ldi	r19, 0x00	; 0
     66a:	40 e2       	ldi	r20, 0x20	; 32
     66c:	51 e4       	ldi	r21, 0x41	; 65
     66e:	0e 94 ea 07 	call	0xfd4	; 0xfd4 <__mulsf3>
     672:	dc 01       	movw	r26, r24
     674:	cb 01       	movw	r24, r22
     676:	bc 01       	movw	r22, r24
     678:	cd 01       	movw	r24, r26
     67a:	0e 94 14 06 	call	0xc28	; 0xc28 <__fixunssfsi>
     67e:	dc 01       	movw	r26, r24
     680:	cb 01       	movw	r24, r22
     682:	9e 83       	std	Y+6, r25	; 0x06
     684:	8d 83       	std	Y+5, r24	; 0x05
     686:	0f c0       	rjmp	.+30     	; 0x6a6 <bocht_links+0x22a>
     688:	80 e9       	ldi	r24, 0x90	; 144
     68a:	91 e0       	ldi	r25, 0x01	; 1
     68c:	9c 83       	std	Y+4, r25	; 0x04
     68e:	8b 83       	std	Y+3, r24	; 0x03
     690:	8b 81       	ldd	r24, Y+3	; 0x03
     692:	9c 81       	ldd	r25, Y+4	; 0x04
     694:	01 97       	sbiw	r24, 0x01	; 1
     696:	f1 f7       	brne	.-4      	; 0x694 <bocht_links+0x218>
     698:	9c 83       	std	Y+4, r25	; 0x04
     69a:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     69c:	8d 81       	ldd	r24, Y+5	; 0x05
     69e:	9e 81       	ldd	r25, Y+6	; 0x06
     6a0:	01 97       	sbiw	r24, 0x01	; 1
     6a2:	9e 83       	std	Y+6, r25	; 0x06
     6a4:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     6a6:	8d 81       	ldd	r24, Y+5	; 0x05
     6a8:	9e 81       	ldd	r25, Y+6	; 0x06
     6aa:	00 97       	sbiw	r24, 0x00	; 0
     6ac:	69 f7       	brne	.-38     	; 0x688 <bocht_links+0x20c>
     6ae:	14 c0       	rjmp	.+40     	; 0x6d8 <bocht_links+0x25c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     6b0:	6f 81       	ldd	r22, Y+7	; 0x07
     6b2:	78 85       	ldd	r23, Y+8	; 0x08
     6b4:	89 85       	ldd	r24, Y+9	; 0x09
     6b6:	9a 85       	ldd	r25, Y+10	; 0x0a
     6b8:	0e 94 14 06 	call	0xc28	; 0xc28 <__fixunssfsi>
     6bc:	dc 01       	movw	r26, r24
     6be:	cb 01       	movw	r24, r22
     6c0:	9e 83       	std	Y+6, r25	; 0x06
     6c2:	8d 83       	std	Y+5, r24	; 0x05
     6c4:	8d 81       	ldd	r24, Y+5	; 0x05
     6c6:	9e 81       	ldd	r25, Y+6	; 0x06
     6c8:	9a 83       	std	Y+2, r25	; 0x02
     6ca:	89 83       	std	Y+1, r24	; 0x01
     6cc:	89 81       	ldd	r24, Y+1	; 0x01
     6ce:	9a 81       	ldd	r25, Y+2	; 0x02
     6d0:	01 97       	sbiw	r24, 0x01	; 1
     6d2:	f1 f7       	brne	.-4      	; 0x6d0 <bocht_links+0x254>
     6d4:	9a 83       	std	Y+2, r25	; 0x02
     6d6:	89 83       	std	Y+1, r24	; 0x01
                _delay_ms(20);
            }
        }
        if (PINA &(1 << PA1))
        {
            for (int a = 20;(PINA &(1 << PA1)); a++)
     6d8:	8d 8d       	ldd	r24, Y+29	; 0x1d
     6da:	9e 8d       	ldd	r25, Y+30	; 0x1e
     6dc:	01 96       	adiw	r24, 0x01	; 1
     6de:	9e 8f       	std	Y+30, r25	; 0x1e
     6e0:	8d 8f       	std	Y+29, r24	; 0x1d
     6e2:	e0 e2       	ldi	r30, 0x20	; 32
     6e4:	f0 e0       	ldi	r31, 0x00	; 0
     6e6:	80 81       	ld	r24, Z
     6e8:	88 2f       	mov	r24, r24
     6ea:	90 e0       	ldi	r25, 0x00	; 0
     6ec:	82 70       	andi	r24, 0x02	; 2
     6ee:	90 70       	andi	r25, 0x00	; 0
     6f0:	00 97       	sbiw	r24, 0x00	; 0
     6f2:	09 f0       	breq	.+2      	; 0x6f6 <bocht_links+0x27a>
     6f4:	79 cf       	rjmp	.-270    	; 0x5e8 <bocht_links+0x16c>
    }
}

void bocht_links (void)
{
	    while (ultrasoon <= 19) //rij door totdat we op +/-
     6f6:	80 91 08 03 	lds	r24, 0x0308
     6fa:	90 91 09 03 	lds	r25, 0x0309
     6fe:	a0 91 0a 03 	lds	r26, 0x030A
     702:	b0 91 0b 03 	lds	r27, 0x030B
     706:	bc 01       	movw	r22, r24
     708:	cd 01       	movw	r24, r26
     70a:	20 e0       	ldi	r18, 0x00	; 0
     70c:	30 e0       	ldi	r19, 0x00	; 0
     70e:	48 e9       	ldi	r20, 0x98	; 152
     710:	51 e4       	ldi	r21, 0x41	; 65
     712:	0e 94 74 09 	call	0x12e8	; 0x12e8 <__lesf2>
     716:	18 16       	cp	r1, r24
     718:	0c f0       	brlt	.+2      	; 0x71c <bocht_links+0x2a0>
     71a:	bb ce       	rjmp	.-650    	; 0x492 <bocht_links+0x16>
     71c:	06 c0       	rjmp	.+12     	; 0x72a <bocht_links+0x2ae>
            }
        }
    }
	while (PINA &(1 << PA0))
	{
		motor(10,20); //bocht naar links maken
     71e:	8a e0       	ldi	r24, 0x0A	; 10
     720:	90 e0       	ldi	r25, 0x00	; 0
     722:	64 e1       	ldi	r22, 0x14	; 20
     724:	70 e0       	ldi	r23, 0x00	; 0
     726:	0e 94 c5 05 	call	0xb8a	; 0xb8a <motor>
                motor (a,15);
                _delay_ms(20);
            }
        }
    }
	while (PINA &(1 << PA0))
     72a:	e0 e2       	ldi	r30, 0x20	; 32
     72c:	f0 e0       	ldi	r31, 0x00	; 0
     72e:	80 81       	ld	r24, Z
     730:	88 2f       	mov	r24, r24
     732:	90 e0       	ldi	r25, 0x00	; 0
     734:	81 70       	andi	r24, 0x01	; 1
     736:	90 70       	andi	r25, 0x00	; 0
     738:	88 23       	and	r24, r24
     73a:	89 f7       	brne	.-30     	; 0x71e <bocht_links+0x2a2>
	}
	if(ultrasoon <= 24)
	{
	}

}
     73c:	a0 96       	adiw	r28, 0x20	; 32
     73e:	0f b6       	in	r0, 0x3f	; 63
     740:	f8 94       	cli
     742:	de bf       	out	0x3e, r29	; 62
     744:	0f be       	out	0x3f, r0	; 63
     746:	cd bf       	out	0x3d, r28	; 61
     748:	cf 91       	pop	r28
     74a:	df 91       	pop	r29
     74c:	08 95       	ret

0000074e <bocht_rechts>:

void bocht_rechts (void)
{
     74e:	df 93       	push	r29
     750:	cf 93       	push	r28
     752:	cd b7       	in	r28, 0x3d	; 61
     754:	de b7       	in	r29, 0x3e	; 62



}
     756:	cf 91       	pop	r28
     758:	df 91       	pop	r29
     75a:	08 95       	ret

0000075c <__vector_41>:
uint16_t waarde1;
uint16_t waarde2;
uint32_t counts;

ISR (TIMER4_CAPT_vect)
{
     75c:	1f 92       	push	r1
     75e:	0f 92       	push	r0
     760:	0f b6       	in	r0, 0x3f	; 63
     762:	0f 92       	push	r0
     764:	00 90 5b 00 	lds	r0, 0x005B
     768:	0f 92       	push	r0
     76a:	11 24       	eor	r1, r1
     76c:	ef 92       	push	r14
     76e:	ff 92       	push	r15
     770:	0f 93       	push	r16
     772:	1f 93       	push	r17
     774:	2f 93       	push	r18
     776:	3f 93       	push	r19
     778:	4f 93       	push	r20
     77a:	5f 93       	push	r21
     77c:	6f 93       	push	r22
     77e:	7f 93       	push	r23
     780:	8f 93       	push	r24
     782:	9f 93       	push	r25
     784:	af 93       	push	r26
     786:	bf 93       	push	r27
     788:	ef 93       	push	r30
     78a:	ff 93       	push	r31
     78c:	df 93       	push	r29
     78e:	cf 93       	push	r28
     790:	cd b7       	in	r28, 0x3d	; 61
     792:	de b7       	in	r29, 0x3e	; 62
	if (TCCR4B & (1<<ICES4)) // On rising edge
     794:	e1 ea       	ldi	r30, 0xA1	; 161
     796:	f0 e0       	ldi	r31, 0x00	; 0
     798:	80 81       	ld	r24, Z
     79a:	88 2f       	mov	r24, r24
     79c:	90 e0       	ldi	r25, 0x00	; 0
     79e:	80 74       	andi	r24, 0x40	; 64
     7a0:	90 70       	andi	r25, 0x00	; 0
     7a2:	00 97       	sbiw	r24, 0x00	; 0
     7a4:	81 f0       	breq	.+32     	; 0x7c6 <__vector_41+0x6a>
  {
    TCCR4B &= ~(1<<ICES4); // Next time detect falling edge
     7a6:	a1 ea       	ldi	r26, 0xA1	; 161
     7a8:	b0 e0       	ldi	r27, 0x00	; 0
     7aa:	e1 ea       	ldi	r30, 0xA1	; 161
     7ac:	f0 e0       	ldi	r31, 0x00	; 0
     7ae:	80 81       	ld	r24, Z
     7b0:	8f 7b       	andi	r24, 0xBF	; 191
     7b2:	8c 93       	st	X, r24
    waarde1 = TCNT4; // Save current count
     7b4:	e4 ea       	ldi	r30, 0xA4	; 164
     7b6:	f0 e0       	ldi	r31, 0x00	; 0
     7b8:	80 81       	ld	r24, Z
     7ba:	91 81       	ldd	r25, Z+1	; 0x01
     7bc:	90 93 13 03 	sts	0x0313, r25
     7c0:	80 93 12 03 	sts	0x0312, r24
     7c4:	50 c0       	rjmp	.+160    	; 0x866 <__vector_41+0x10a>
  }
  else // On falling edge
  {
    TCCR4B |= 0; // geen interrupts meer
     7c6:	a1 ea       	ldi	r26, 0xA1	; 161
     7c8:	b0 e0       	ldi	r27, 0x00	; 0
     7ca:	e1 ea       	ldi	r30, 0xA1	; 161
     7cc:	f0 e0       	ldi	r31, 0x00	; 0
     7ce:	80 81       	ld	r24, Z
     7d0:	8c 93       	st	X, r24
    waarde2 = TCNT4; // Save current count
     7d2:	e4 ea       	ldi	r30, 0xA4	; 164
     7d4:	f0 e0       	ldi	r31, 0x00	; 0
     7d6:	80 81       	ld	r24, Z
     7d8:	91 81       	ldd	r25, Z+1	; 0x01
     7da:	90 93 0d 03 	sts	0x030D, r25
     7de:	80 93 0c 03 	sts	0x030C, r24
    counts = (uint32_t)waarde1 - (uint32_t)waarde2;
     7e2:	80 91 12 03 	lds	r24, 0x0312
     7e6:	90 91 13 03 	lds	r25, 0x0313
     7ea:	9c 01       	movw	r18, r24
     7ec:	40 e0       	ldi	r20, 0x00	; 0
     7ee:	50 e0       	ldi	r21, 0x00	; 0
     7f0:	80 91 0c 03 	lds	r24, 0x030C
     7f4:	90 91 0d 03 	lds	r25, 0x030D
     7f8:	cc 01       	movw	r24, r24
     7fa:	a0 e0       	ldi	r26, 0x00	; 0
     7fc:	b0 e0       	ldi	r27, 0x00	; 0
     7fe:	79 01       	movw	r14, r18
     800:	8a 01       	movw	r16, r20
     802:	e8 1a       	sub	r14, r24
     804:	f9 0a       	sbc	r15, r25
     806:	0a 0b       	sbc	r16, r26
     808:	1b 0b       	sbc	r17, r27
     80a:	d8 01       	movw	r26, r16
     80c:	c7 01       	movw	r24, r14
     80e:	80 93 0e 03 	sts	0x030E, r24
     812:	90 93 0f 03 	sts	0x030F, r25
     816:	a0 93 10 03 	sts	0x0310, r26
     81a:	b0 93 11 03 	sts	0x0311, r27
	ultrasoon = (counts/2)*0.01715; //snelheid van geluid keer de tijd die de klok vertegenwoordigd (16/8 = 2 1/2E6= 5E-7)
     81e:	80 91 0e 03 	lds	r24, 0x030E
     822:	90 91 0f 03 	lds	r25, 0x030F
     826:	a0 91 10 03 	lds	r26, 0x0310
     82a:	b0 91 11 03 	lds	r27, 0x0311
     82e:	b6 95       	lsr	r27
     830:	a7 95       	ror	r26
     832:	97 95       	ror	r25
     834:	87 95       	ror	r24
     836:	bc 01       	movw	r22, r24
     838:	cd 01       	movw	r24, r26
     83a:	0e 94 f8 09 	call	0x13f0	; 0x13f0 <__floatunsisf>
     83e:	dc 01       	movw	r26, r24
     840:	cb 01       	movw	r24, r22
     842:	bc 01       	movw	r22, r24
     844:	cd 01       	movw	r24, r26
     846:	28 e2       	ldi	r18, 0x28	; 40
     848:	3e e7       	ldi	r19, 0x7E	; 126
     84a:	4c e8       	ldi	r20, 0x8C	; 140
     84c:	5c e3       	ldi	r21, 0x3C	; 60
     84e:	0e 94 ea 07 	call	0xfd4	; 0xfd4 <__mulsf3>
     852:	dc 01       	movw	r26, r24
     854:	cb 01       	movw	r24, r22
     856:	80 93 08 03 	sts	0x0308, r24
     85a:	90 93 09 03 	sts	0x0309, r25
     85e:	a0 93 0a 03 	sts	0x030A, r26
     862:	b0 93 0b 03 	sts	0x030B, r27
  }
}
     866:	cf 91       	pop	r28
     868:	df 91       	pop	r29
     86a:	ff 91       	pop	r31
     86c:	ef 91       	pop	r30
     86e:	bf 91       	pop	r27
     870:	af 91       	pop	r26
     872:	9f 91       	pop	r25
     874:	8f 91       	pop	r24
     876:	7f 91       	pop	r23
     878:	6f 91       	pop	r22
     87a:	5f 91       	pop	r21
     87c:	4f 91       	pop	r20
     87e:	3f 91       	pop	r19
     880:	2f 91       	pop	r18
     882:	1f 91       	pop	r17
     884:	0f 91       	pop	r16
     886:	ff 90       	pop	r15
     888:	ef 90       	pop	r14
     88a:	0f 90       	pop	r0
     88c:	00 92 5b 00 	sts	0x005B, r0
     890:	0f 90       	pop	r0
     892:	0f be       	out	0x3f, r0	; 63
     894:	0f 90       	pop	r0
     896:	1f 90       	pop	r1
     898:	18 95       	reti

0000089a <__vector_42>:

ISR(TIMER4_COMPA_vect)
{
     89a:	1f 92       	push	r1
     89c:	0f 92       	push	r0
     89e:	0f b6       	in	r0, 0x3f	; 63
     8a0:	0f 92       	push	r0
     8a2:	00 90 5b 00 	lds	r0, 0x005B
     8a6:	0f 92       	push	r0
     8a8:	11 24       	eor	r1, r1
     8aa:	8f 93       	push	r24
     8ac:	af 93       	push	r26
     8ae:	bf 93       	push	r27
     8b0:	ef 93       	push	r30
     8b2:	ff 93       	push	r31
     8b4:	df 93       	push	r29
     8b6:	cf 93       	push	r28
     8b8:	cd b7       	in	r28, 0x3d	; 61
     8ba:	de b7       	in	r29, 0x3e	; 62
	PORTA &= ~(1<<PA3);
     8bc:	a2 e2       	ldi	r26, 0x22	; 34
     8be:	b0 e0       	ldi	r27, 0x00	; 0
     8c0:	e2 e2       	ldi	r30, 0x22	; 34
     8c2:	f0 e0       	ldi	r31, 0x00	; 0
     8c4:	80 81       	ld	r24, Z
     8c6:	87 7f       	andi	r24, 0xF7	; 247
     8c8:	8c 93       	st	X, r24
	TIMSK4 = (1 << ICIE4);
     8ca:	e2 e7       	ldi	r30, 0x72	; 114
     8cc:	f0 e0       	ldi	r31, 0x00	; 0
     8ce:	80 e2       	ldi	r24, 0x20	; 32
     8d0:	80 83       	st	Z, r24
	TCCR4B |= (1 << ICES4);
     8d2:	a1 ea       	ldi	r26, 0xA1	; 161
     8d4:	b0 e0       	ldi	r27, 0x00	; 0
     8d6:	e1 ea       	ldi	r30, 0xA1	; 161
     8d8:	f0 e0       	ldi	r31, 0x00	; 0
     8da:	80 81       	ld	r24, Z
     8dc:	80 64       	ori	r24, 0x40	; 64
     8de:	8c 93       	st	X, r24
}
     8e0:	cf 91       	pop	r28
     8e2:	df 91       	pop	r29
     8e4:	ff 91       	pop	r31
     8e6:	ef 91       	pop	r30
     8e8:	bf 91       	pop	r27
     8ea:	af 91       	pop	r26
     8ec:	8f 91       	pop	r24
     8ee:	0f 90       	pop	r0
     8f0:	00 92 5b 00 	sts	0x005B, r0
     8f4:	0f 90       	pop	r0
     8f6:	0f be       	out	0x3f, r0	; 63
     8f8:	0f 90       	pop	r0
     8fa:	1f 90       	pop	r1
     8fc:	18 95       	reti

000008fe <__vector_15>:

ISR(TIMER2_OVF_vect)
{
     8fe:	1f 92       	push	r1
     900:	0f 92       	push	r0
     902:	0f b6       	in	r0, 0x3f	; 63
     904:	0f 92       	push	r0
     906:	00 90 5b 00 	lds	r0, 0x005B
     90a:	0f 92       	push	r0
     90c:	11 24       	eor	r1, r1
     90e:	8f 93       	push	r24
     910:	9f 93       	push	r25
     912:	af 93       	push	r26
     914:	bf 93       	push	r27
     916:	ef 93       	push	r30
     918:	ff 93       	push	r31
     91a:	df 93       	push	r29
     91c:	cf 93       	push	r28
     91e:	cd b7       	in	r28, 0x3d	; 61
     920:	de b7       	in	r29, 0x3e	; 62
	TIMSK4 = (1<<OCIE4A);
     922:	e2 e7       	ldi	r30, 0x72	; 114
     924:	f0 e0       	ldi	r31, 0x00	; 0
     926:	82 e0       	ldi	r24, 0x02	; 2
     928:	80 83       	st	Z, r24
	PORTA |= (1<<PA3);
     92a:	a2 e2       	ldi	r26, 0x22	; 34
     92c:	b0 e0       	ldi	r27, 0x00	; 0
     92e:	e2 e2       	ldi	r30, 0x22	; 34
     930:	f0 e0       	ldi	r31, 0x00	; 0
     932:	80 81       	ld	r24, Z
     934:	88 60       	ori	r24, 0x08	; 8
     936:	8c 93       	st	X, r24
	TCNT4 =0;
     938:	e4 ea       	ldi	r30, 0xA4	; 164
     93a:	f0 e0       	ldi	r31, 0x00	; 0
     93c:	11 82       	std	Z+1, r1	; 0x01
     93e:	10 82       	st	Z, r1
	OCR4A = 20000;
     940:	e8 ea       	ldi	r30, 0xA8	; 168
     942:	f0 e0       	ldi	r31, 0x00	; 0
     944:	80 e2       	ldi	r24, 0x20	; 32
     946:	9e e4       	ldi	r25, 0x4E	; 78
     948:	91 83       	std	Z+1, r25	; 0x01
     94a:	80 83       	st	Z, r24
}
     94c:	cf 91       	pop	r28
     94e:	df 91       	pop	r29
     950:	ff 91       	pop	r31
     952:	ef 91       	pop	r30
     954:	bf 91       	pop	r27
     956:	af 91       	pop	r26
     958:	9f 91       	pop	r25
     95a:	8f 91       	pop	r24
     95c:	0f 90       	pop	r0
     95e:	00 92 5b 00 	sts	0x005B, r0
     962:	0f 90       	pop	r0
     964:	0f be       	out	0x3f, r0	; 63
     966:	0f 90       	pop	r0
     968:	1f 90       	pop	r1
     96a:	18 95       	reti

0000096c <__vector_13>:

ISR(TIMER2_COMPA_vect)
{
     96c:	1f 92       	push	r1
     96e:	0f 92       	push	r0
     970:	0f b6       	in	r0, 0x3f	; 63
     972:	0f 92       	push	r0
     974:	11 24       	eor	r1, r1
     976:	df 93       	push	r29
     978:	cf 93       	push	r28
     97a:	cd b7       	in	r28, 0x3d	; 61
     97c:	de b7       	in	r29, 0x3e	; 62
//Ir
}
     97e:	cf 91       	pop	r28
     980:	df 91       	pop	r29
     982:	0f 90       	pop	r0
     984:	0f be       	out	0x3f, r0	; 63
     986:	0f 90       	pop	r0
     988:	1f 90       	pop	r1
     98a:	18 95       	reti

0000098c <__vector_14>:

ISR(TIMER2_COMPB_vect)
{
     98c:	1f 92       	push	r1
     98e:	0f 92       	push	r0
     990:	0f b6       	in	r0, 0x3f	; 63
     992:	0f 92       	push	r0
     994:	11 24       	eor	r1, r1
     996:	df 93       	push	r29
     998:	cf 93       	push	r28
     99a:	cd b7       	in	r28, 0x3d	; 61
     99c:	de b7       	in	r29, 0x3e	; 62
//Ir
}
     99e:	cf 91       	pop	r28
     9a0:	df 91       	pop	r29
     9a2:	0f 90       	pop	r0
     9a4:	0f be       	out	0x3f, r0	; 63
     9a6:	0f 90       	pop	r0
     9a8:	1f 90       	pop	r1
     9aa:	18 95       	reti

000009ac <__vector_23>:

ISR(TIMER0_OVF_vect)
{
     9ac:	1f 92       	push	r1
     9ae:	0f 92       	push	r0
     9b0:	0f b6       	in	r0, 0x3f	; 63
     9b2:	0f 92       	push	r0
     9b4:	00 90 5b 00 	lds	r0, 0x005B
     9b8:	0f 92       	push	r0
     9ba:	11 24       	eor	r1, r1
     9bc:	8f 93       	push	r24
     9be:	af 93       	push	r26
     9c0:	bf 93       	push	r27
     9c2:	ef 93       	push	r30
     9c4:	ff 93       	push	r31
     9c6:	df 93       	push	r29
     9c8:	cf 93       	push	r28
     9ca:	cd b7       	in	r28, 0x3d	; 61
     9cc:	de b7       	in	r29, 0x3e	; 62
    if (OCR0A == 0 && OCR0B == 0)
     9ce:	e7 e4       	ldi	r30, 0x47	; 71
     9d0:	f0 e0       	ldi	r31, 0x00	; 0
     9d2:	80 81       	ld	r24, Z
     9d4:	88 23       	and	r24, r24
     9d6:	a1 f4       	brne	.+40     	; 0xa00 <__vector_23+0x54>
     9d8:	e8 e4       	ldi	r30, 0x48	; 72
     9da:	f0 e0       	ldi	r31, 0x00	; 0
     9dc:	80 81       	ld	r24, Z
     9de:	88 23       	and	r24, r24
     9e0:	79 f4       	brne	.+30     	; 0xa00 <__vector_23+0x54>
    {
        PORTE &= ~(1<<PE4);
     9e2:	ae e2       	ldi	r26, 0x2E	; 46
     9e4:	b0 e0       	ldi	r27, 0x00	; 0
     9e6:	ee e2       	ldi	r30, 0x2E	; 46
     9e8:	f0 e0       	ldi	r31, 0x00	; 0
     9ea:	80 81       	ld	r24, Z
     9ec:	8f 7e       	andi	r24, 0xEF	; 239
     9ee:	8c 93       	st	X, r24
        PORTE &= ~(1<<PE5);
     9f0:	ae e2       	ldi	r26, 0x2E	; 46
     9f2:	b0 e0       	ldi	r27, 0x00	; 0
     9f4:	ee e2       	ldi	r30, 0x2E	; 46
     9f6:	f0 e0       	ldi	r31, 0x00	; 0
     9f8:	80 81       	ld	r24, Z
     9fa:	8f 7d       	andi	r24, 0xDF	; 223
     9fc:	8c 93       	st	X, r24
     9fe:	27 c0       	rjmp	.+78     	; 0xa4e <__vector_23+0xa2>
    }
    else if (OCR0A != 0)
     a00:	e7 e4       	ldi	r30, 0x47	; 71
     a02:	f0 e0       	ldi	r31, 0x00	; 0
     a04:	80 81       	ld	r24, Z
     a06:	88 23       	and	r24, r24
     a08:	79 f0       	breq	.+30     	; 0xa28 <__vector_23+0x7c>
    {
        PORTE &= ~(1<<PE5);
     a0a:	ae e2       	ldi	r26, 0x2E	; 46
     a0c:	b0 e0       	ldi	r27, 0x00	; 0
     a0e:	ee e2       	ldi	r30, 0x2E	; 46
     a10:	f0 e0       	ldi	r31, 0x00	; 0
     a12:	80 81       	ld	r24, Z
     a14:	8f 7d       	andi	r24, 0xDF	; 223
     a16:	8c 93       	st	X, r24
        PORTE |= (1<<PE4);
     a18:	ae e2       	ldi	r26, 0x2E	; 46
     a1a:	b0 e0       	ldi	r27, 0x00	; 0
     a1c:	ee e2       	ldi	r30, 0x2E	; 46
     a1e:	f0 e0       	ldi	r31, 0x00	; 0
     a20:	80 81       	ld	r24, Z
     a22:	80 61       	ori	r24, 0x10	; 16
     a24:	8c 93       	st	X, r24
     a26:	13 c0       	rjmp	.+38     	; 0xa4e <__vector_23+0xa2>
    }
    else if (OCR0B != 0)
     a28:	e8 e4       	ldi	r30, 0x48	; 72
     a2a:	f0 e0       	ldi	r31, 0x00	; 0
     a2c:	80 81       	ld	r24, Z
     a2e:	88 23       	and	r24, r24
     a30:	71 f0       	breq	.+28     	; 0xa4e <__vector_23+0xa2>
    {
        PORTE &= ~(1<<PE4);
     a32:	ae e2       	ldi	r26, 0x2E	; 46
     a34:	b0 e0       	ldi	r27, 0x00	; 0
     a36:	ee e2       	ldi	r30, 0x2E	; 46
     a38:	f0 e0       	ldi	r31, 0x00	; 0
     a3a:	80 81       	ld	r24, Z
     a3c:	8f 7e       	andi	r24, 0xEF	; 239
     a3e:	8c 93       	st	X, r24
        PORTE |= (1<<PE5);
     a40:	ae e2       	ldi	r26, 0x2E	; 46
     a42:	b0 e0       	ldi	r27, 0x00	; 0
     a44:	ee e2       	ldi	r30, 0x2E	; 46
     a46:	f0 e0       	ldi	r31, 0x00	; 0
     a48:	80 81       	ld	r24, Z
     a4a:	80 62       	ori	r24, 0x20	; 32
     a4c:	8c 93       	st	X, r24
    }
}
     a4e:	cf 91       	pop	r28
     a50:	df 91       	pop	r29
     a52:	ff 91       	pop	r31
     a54:	ef 91       	pop	r30
     a56:	bf 91       	pop	r27
     a58:	af 91       	pop	r26
     a5a:	8f 91       	pop	r24
     a5c:	0f 90       	pop	r0
     a5e:	00 92 5b 00 	sts	0x005B, r0
     a62:	0f 90       	pop	r0
     a64:	0f be       	out	0x3f, r0	; 63
     a66:	0f 90       	pop	r0
     a68:	1f 90       	pop	r1
     a6a:	18 95       	reti

00000a6c <__vector_21>:

ISR(TIMER0_COMPA_vect)
{
     a6c:	1f 92       	push	r1
     a6e:	0f 92       	push	r0
     a70:	0f b6       	in	r0, 0x3f	; 63
     a72:	0f 92       	push	r0
     a74:	00 90 5b 00 	lds	r0, 0x005B
     a78:	0f 92       	push	r0
     a7a:	11 24       	eor	r1, r1
     a7c:	8f 93       	push	r24
     a7e:	af 93       	push	r26
     a80:	bf 93       	push	r27
     a82:	ef 93       	push	r30
     a84:	ff 93       	push	r31
     a86:	df 93       	push	r29
     a88:	cf 93       	push	r28
     a8a:	cd b7       	in	r28, 0x3d	; 61
     a8c:	de b7       	in	r29, 0x3e	; 62
    PORTE &= ~(1<<PE4);
     a8e:	ae e2       	ldi	r26, 0x2E	; 46
     a90:	b0 e0       	ldi	r27, 0x00	; 0
     a92:	ee e2       	ldi	r30, 0x2E	; 46
     a94:	f0 e0       	ldi	r31, 0x00	; 0
     a96:	80 81       	ld	r24, Z
     a98:	8f 7e       	andi	r24, 0xEF	; 239
     a9a:	8c 93       	st	X, r24
}
     a9c:	cf 91       	pop	r28
     a9e:	df 91       	pop	r29
     aa0:	ff 91       	pop	r31
     aa2:	ef 91       	pop	r30
     aa4:	bf 91       	pop	r27
     aa6:	af 91       	pop	r26
     aa8:	8f 91       	pop	r24
     aaa:	0f 90       	pop	r0
     aac:	00 92 5b 00 	sts	0x005B, r0
     ab0:	0f 90       	pop	r0
     ab2:	0f be       	out	0x3f, r0	; 63
     ab4:	0f 90       	pop	r0
     ab6:	1f 90       	pop	r1
     ab8:	18 95       	reti

00000aba <__vector_22>:

ISR(TIMER0_COMPB_vect)
{
     aba:	1f 92       	push	r1
     abc:	0f 92       	push	r0
     abe:	0f b6       	in	r0, 0x3f	; 63
     ac0:	0f 92       	push	r0
     ac2:	00 90 5b 00 	lds	r0, 0x005B
     ac6:	0f 92       	push	r0
     ac8:	11 24       	eor	r1, r1
     aca:	8f 93       	push	r24
     acc:	af 93       	push	r26
     ace:	bf 93       	push	r27
     ad0:	ef 93       	push	r30
     ad2:	ff 93       	push	r31
     ad4:	df 93       	push	r29
     ad6:	cf 93       	push	r28
     ad8:	cd b7       	in	r28, 0x3d	; 61
     ada:	de b7       	in	r29, 0x3e	; 62
    PORTE &= ~(1<<PE5);
     adc:	ae e2       	ldi	r26, 0x2E	; 46
     ade:	b0 e0       	ldi	r27, 0x00	; 0
     ae0:	ee e2       	ldi	r30, 0x2E	; 46
     ae2:	f0 e0       	ldi	r31, 0x00	; 0
     ae4:	80 81       	ld	r24, Z
     ae6:	8f 7d       	andi	r24, 0xDF	; 223
     ae8:	8c 93       	st	X, r24
}
     aea:	cf 91       	pop	r28
     aec:	df 91       	pop	r29
     aee:	ff 91       	pop	r31
     af0:	ef 91       	pop	r30
     af2:	bf 91       	pop	r27
     af4:	af 91       	pop	r26
     af6:	8f 91       	pop	r24
     af8:	0f 90       	pop	r0
     afa:	00 92 5b 00 	sts	0x005B, r0
     afe:	0f 90       	pop	r0
     b00:	0f be       	out	0x3f, r0	; 63
     b02:	0f 90       	pop	r0
     b04:	1f 90       	pop	r1
     b06:	18 95       	reti

00000b08 <init_motor>:

void init_motor (void)
{
     b08:	df 93       	push	r29
     b0a:	cf 93       	push	r28
     b0c:	cd b7       	in	r28, 0x3d	; 61
     b0e:	de b7       	in	r29, 0x3e	; 62
    // Output low
    PORTE &= ~(1<<PE4);
     b10:	ae e2       	ldi	r26, 0x2E	; 46
     b12:	b0 e0       	ldi	r27, 0x00	; 0
     b14:	ee e2       	ldi	r30, 0x2E	; 46
     b16:	f0 e0       	ldi	r31, 0x00	; 0
     b18:	80 81       	ld	r24, Z
     b1a:	8f 7e       	andi	r24, 0xEF	; 239
     b1c:	8c 93       	st	X, r24
    PORTE &= ~(1<<PE5);
     b1e:	ae e2       	ldi	r26, 0x2E	; 46
     b20:	b0 e0       	ldi	r27, 0x00	; 0
     b22:	ee e2       	ldi	r30, 0x2E	; 46
     b24:	f0 e0       	ldi	r31, 0x00	; 0
     b26:	80 81       	ld	r24, Z
     b28:	8f 7d       	andi	r24, 0xDF	; 223
     b2a:	8c 93       	st	X, r24

    // Use mode 0, clkdiv = 64 klok 0 Pwm signalen
    TCCR0A = 0;
     b2c:	e4 e4       	ldi	r30, 0x44	; 68
     b2e:	f0 e0       	ldi	r31, 0x00	; 0
     b30:	10 82       	st	Z, r1
    TCCR0B = (0<<CS02) | (1<<CS01) | (1<<CS00);
     b32:	e5 e4       	ldi	r30, 0x45	; 69
     b34:	f0 e0       	ldi	r31, 0x00	; 0
     b36:	83 e0       	ldi	r24, 0x03	; 3
     b38:	80 83       	st	Z, r24

	// Use mode 0, clkdiv = 128   klok 2 globale trigger
    TCCR2A = 0;
     b3a:	e0 eb       	ldi	r30, 0xB0	; 176
     b3c:	f0 e0       	ldi	r31, 0x00	; 0
     b3e:	10 82       	st	Z, r1
    TCCR2B = (1<<CS22) | (0<<CS21) | (1<<CS20);
     b40:	e1 eb       	ldi	r30, 0xB1	; 177
     b42:	f0 e0       	ldi	r31, 0x00	; 0
     b44:	85 e0       	ldi	r24, 0x05	; 5
     b46:	80 83       	st	Z, r24
	OCR2A = 85;
     b48:	e3 eb       	ldi	r30, 0xB3	; 179
     b4a:	f0 e0       	ldi	r31, 0x00	; 0
     b4c:	85 e5       	ldi	r24, 0x55	; 85
     b4e:	80 83       	st	Z, r24
    OCR2B = 170;
     b50:	e4 eb       	ldi	r30, 0xB4	; 180
     b52:	f0 e0       	ldi	r31, 0x00	; 0
     b54:	8a ea       	ldi	r24, 0xAA	; 170
     b56:	80 83       	st	Z, r24
	TIMSK2 = (1<<OCIE2B) | (1<<OCIE2A) | (1<<TOIE2);
     b58:	e0 e7       	ldi	r30, 0x70	; 112
     b5a:	f0 e0       	ldi	r31, 0x00	; 0
     b5c:	87 e0       	ldi	r24, 0x07	; 7
     b5e:	80 83       	st	Z, r24

	// Use mode 0, clkdiv = 8 klok 4 ultrasoon
	TCCR4A = 0;
     b60:	e0 ea       	ldi	r30, 0xA0	; 160
     b62:	f0 e0       	ldi	r31, 0x00	; 0
     b64:	10 82       	st	Z, r1
    TCCR4B = (0<<CS42) | (1<<CS41) | (0<<CS40);
     b66:	e1 ea       	ldi	r30, 0xA1	; 161
     b68:	f0 e0       	ldi	r31, 0x00	; 0
     b6a:	82 e0       	ldi	r24, 0x02	; 2
     b6c:	80 83       	st	Z, r24

    // Disable PWM output
    OCR0A = 0;
     b6e:	e7 e4       	ldi	r30, 0x47	; 71
     b70:	f0 e0       	ldi	r31, 0x00	; 0
     b72:	10 82       	st	Z, r1
    OCR0B = 0;
     b74:	e8 e4       	ldi	r30, 0x48	; 72
     b76:	f0 e0       	ldi	r31, 0x00	; 0
     b78:	10 82       	st	Z, r1

    // Interrupts on OCA, OCB and OVF
    TIMSK0 = (1<<OCIE0B) | (1<<OCIE0A) | (1<<TOIE0);
     b7a:	ee e6       	ldi	r30, 0x6E	; 110
     b7c:	f0 e0       	ldi	r31, 0x00	; 0
     b7e:	87 e0       	ldi	r24, 0x07	; 7
     b80:	80 83       	st	Z, r24

    sei();
     b82:	78 94       	sei
}
     b84:	cf 91       	pop	r28
     b86:	df 91       	pop	r29
     b88:	08 95       	ret

00000b8a <motor>:

void motor (signed int Af, signed int Bf)
{
     b8a:	df 93       	push	r29
     b8c:	cf 93       	push	r28
     b8e:	00 d0       	rcall	.+0      	; 0xb90 <motor+0x6>
     b90:	0f 92       	push	r0
     b92:	cd b7       	in	r28, 0x3d	; 61
     b94:	de b7       	in	r29, 0x3e	; 62
     b96:	9a 83       	std	Y+2, r25	; 0x02
     b98:	89 83       	std	Y+1, r24	; 0x01
     b9a:	7c 83       	std	Y+4, r23	; 0x04
     b9c:	6b 83       	std	Y+3, r22	; 0x03
	if(Af < 0)
     b9e:	89 81       	ldd	r24, Y+1	; 0x01
     ba0:	9a 81       	ldd	r25, Y+2	; 0x02
     ba2:	99 23       	and	r25, r25
     ba4:	5c f4       	brge	.+22     	; 0xbbc <motor+0x32>
	{
		PORTJ |= (1<<PJ0);
     ba6:	a5 e0       	ldi	r26, 0x05	; 5
     ba8:	b1 e0       	ldi	r27, 0x01	; 1
     baa:	e5 e0       	ldi	r30, 0x05	; 5
     bac:	f1 e0       	ldi	r31, 0x01	; 1
     bae:	80 81       	ld	r24, Z
     bb0:	81 60       	ori	r24, 0x01	; 1
     bb2:	8c 93       	st	X, r24
		OCR0A = Af;
     bb4:	e7 e4       	ldi	r30, 0x47	; 71
     bb6:	f0 e0       	ldi	r31, 0x00	; 0
     bb8:	89 81       	ldd	r24, Y+1	; 0x01
     bba:	80 83       	st	Z, r24
	}
	if (Bf < 0)
     bbc:	8b 81       	ldd	r24, Y+3	; 0x03
     bbe:	9c 81       	ldd	r25, Y+4	; 0x04
     bc0:	99 23       	and	r25, r25
     bc2:	5c f4       	brge	.+22     	; 0xbda <motor+0x50>
	{
		PORTJ |= (1<<PJ1);
     bc4:	a5 e0       	ldi	r26, 0x05	; 5
     bc6:	b1 e0       	ldi	r27, 0x01	; 1
     bc8:	e5 e0       	ldi	r30, 0x05	; 5
     bca:	f1 e0       	ldi	r31, 0x01	; 1
     bcc:	80 81       	ld	r24, Z
     bce:	82 60       	ori	r24, 0x02	; 2
     bd0:	8c 93       	st	X, r24
		OCR0B = Bf;
     bd2:	e8 e4       	ldi	r30, 0x48	; 72
     bd4:	f0 e0       	ldi	r31, 0x00	; 0
     bd6:	8b 81       	ldd	r24, Y+3	; 0x03
     bd8:	80 83       	st	Z, r24
	}
	if (Af > 0)
     bda:	89 81       	ldd	r24, Y+1	; 0x01
     bdc:	9a 81       	ldd	r25, Y+2	; 0x02
     bde:	18 16       	cp	r1, r24
     be0:	19 06       	cpc	r1, r25
     be2:	5c f4       	brge	.+22     	; 0xbfa <motor+0x70>
	{
		PORTJ &= ~(1<<PJ0);
     be4:	a5 e0       	ldi	r26, 0x05	; 5
     be6:	b1 e0       	ldi	r27, 0x01	; 1
     be8:	e5 e0       	ldi	r30, 0x05	; 5
     bea:	f1 e0       	ldi	r31, 0x01	; 1
     bec:	80 81       	ld	r24, Z
     bee:	8e 7f       	andi	r24, 0xFE	; 254
     bf0:	8c 93       	st	X, r24
		OCR0A = Af;
     bf2:	e7 e4       	ldi	r30, 0x47	; 71
     bf4:	f0 e0       	ldi	r31, 0x00	; 0
     bf6:	89 81       	ldd	r24, Y+1	; 0x01
     bf8:	80 83       	st	Z, r24
	}
	if (Bf > 0)
     bfa:	8b 81       	ldd	r24, Y+3	; 0x03
     bfc:	9c 81       	ldd	r25, Y+4	; 0x04
     bfe:	18 16       	cp	r1, r24
     c00:	19 06       	cpc	r1, r25
     c02:	5c f4       	brge	.+22     	; 0xc1a <motor+0x90>
	{
		PORTJ &= ~(1<<PJ1);
     c04:	a5 e0       	ldi	r26, 0x05	; 5
     c06:	b1 e0       	ldi	r27, 0x01	; 1
     c08:	e5 e0       	ldi	r30, 0x05	; 5
     c0a:	f1 e0       	ldi	r31, 0x01	; 1
     c0c:	80 81       	ld	r24, Z
     c0e:	8d 7f       	andi	r24, 0xFD	; 253
     c10:	8c 93       	st	X, r24
		OCR0B = Bf;
     c12:	e8 e4       	ldi	r30, 0x48	; 72
     c14:	f0 e0       	ldi	r31, 0x00	; 0
     c16:	8b 81       	ldd	r24, Y+3	; 0x03
     c18:	80 83       	st	Z, r24
	}
}
     c1a:	0f 90       	pop	r0
     c1c:	0f 90       	pop	r0
     c1e:	0f 90       	pop	r0
     c20:	0f 90       	pop	r0
     c22:	cf 91       	pop	r28
     c24:	df 91       	pop	r29
     c26:	08 95       	ret

00000c28 <__fixunssfsi>:
     c28:	ef 92       	push	r14
     c2a:	ff 92       	push	r15
     c2c:	0f 93       	push	r16
     c2e:	1f 93       	push	r17
     c30:	7b 01       	movw	r14, r22
     c32:	8c 01       	movw	r16, r24
     c34:	20 e0       	ldi	r18, 0x00	; 0
     c36:	30 e0       	ldi	r19, 0x00	; 0
     c38:	40 e0       	ldi	r20, 0x00	; 0
     c3a:	5f e4       	ldi	r21, 0x4F	; 79
     c3c:	0e 94 14 09 	call	0x1228	; 0x1228 <__gesf2>
     c40:	88 23       	and	r24, r24
     c42:	8c f0       	brlt	.+34     	; 0xc66 <__fixunssfsi+0x3e>
     c44:	c8 01       	movw	r24, r16
     c46:	b7 01       	movw	r22, r14
     c48:	20 e0       	ldi	r18, 0x00	; 0
     c4a:	30 e0       	ldi	r19, 0x00	; 0
     c4c:	40 e0       	ldi	r20, 0x00	; 0
     c4e:	5f e4       	ldi	r21, 0x4F	; 79
     c50:	0e 94 8c 07 	call	0xf18	; 0xf18 <__subsf3>
     c54:	0e 94 a4 09 	call	0x1348	; 0x1348 <__fixsfsi>
     c58:	9b 01       	movw	r18, r22
     c5a:	ac 01       	movw	r20, r24
     c5c:	20 50       	subi	r18, 0x00	; 0
     c5e:	30 40       	sbci	r19, 0x00	; 0
     c60:	40 40       	sbci	r20, 0x00	; 0
     c62:	50 48       	sbci	r21, 0x80	; 128
     c64:	06 c0       	rjmp	.+12     	; 0xc72 <__fixunssfsi+0x4a>
     c66:	c8 01       	movw	r24, r16
     c68:	b7 01       	movw	r22, r14
     c6a:	0e 94 a4 09 	call	0x1348	; 0x1348 <__fixsfsi>
     c6e:	9b 01       	movw	r18, r22
     c70:	ac 01       	movw	r20, r24
     c72:	b9 01       	movw	r22, r18
     c74:	ca 01       	movw	r24, r20
     c76:	1f 91       	pop	r17
     c78:	0f 91       	pop	r16
     c7a:	ff 90       	pop	r15
     c7c:	ef 90       	pop	r14
     c7e:	08 95       	ret

00000c80 <_fpadd_parts>:
     c80:	a0 e0       	ldi	r26, 0x00	; 0
     c82:	b0 e0       	ldi	r27, 0x00	; 0
     c84:	e6 e4       	ldi	r30, 0x46	; 70
     c86:	f6 e0       	ldi	r31, 0x06	; 6
     c88:	0c 94 66 0c 	jmp	0x18cc	; 0x18cc <__prologue_saves__>
     c8c:	dc 01       	movw	r26, r24
     c8e:	2b 01       	movw	r4, r22
     c90:	fa 01       	movw	r30, r20
     c92:	9c 91       	ld	r25, X
     c94:	92 30       	cpi	r25, 0x02	; 2
     c96:	08 f4       	brcc	.+2      	; 0xc9a <_fpadd_parts+0x1a>
     c98:	39 c1       	rjmp	.+626    	; 0xf0c <_fpadd_parts+0x28c>
     c9a:	eb 01       	movw	r28, r22
     c9c:	88 81       	ld	r24, Y
     c9e:	82 30       	cpi	r24, 0x02	; 2
     ca0:	08 f4       	brcc	.+2      	; 0xca4 <_fpadd_parts+0x24>
     ca2:	33 c1       	rjmp	.+614    	; 0xf0a <_fpadd_parts+0x28a>
     ca4:	94 30       	cpi	r25, 0x04	; 4
     ca6:	69 f4       	brne	.+26     	; 0xcc2 <_fpadd_parts+0x42>
     ca8:	84 30       	cpi	r24, 0x04	; 4
     caa:	09 f0       	breq	.+2      	; 0xcae <_fpadd_parts+0x2e>
     cac:	2f c1       	rjmp	.+606    	; 0xf0c <_fpadd_parts+0x28c>
     cae:	11 96       	adiw	r26, 0x01	; 1
     cb0:	9c 91       	ld	r25, X
     cb2:	11 97       	sbiw	r26, 0x01	; 1
     cb4:	89 81       	ldd	r24, Y+1	; 0x01
     cb6:	98 17       	cp	r25, r24
     cb8:	09 f4       	brne	.+2      	; 0xcbc <_fpadd_parts+0x3c>
     cba:	28 c1       	rjmp	.+592    	; 0xf0c <_fpadd_parts+0x28c>
     cbc:	a0 e0       	ldi	r26, 0x00	; 0
     cbe:	b2 e0       	ldi	r27, 0x02	; 2
     cc0:	25 c1       	rjmp	.+586    	; 0xf0c <_fpadd_parts+0x28c>
     cc2:	84 30       	cpi	r24, 0x04	; 4
     cc4:	09 f4       	brne	.+2      	; 0xcc8 <_fpadd_parts+0x48>
     cc6:	21 c1       	rjmp	.+578    	; 0xf0a <_fpadd_parts+0x28a>
     cc8:	82 30       	cpi	r24, 0x02	; 2
     cca:	a9 f4       	brne	.+42     	; 0xcf6 <_fpadd_parts+0x76>
     ccc:	92 30       	cpi	r25, 0x02	; 2
     cce:	09 f0       	breq	.+2      	; 0xcd2 <_fpadd_parts+0x52>
     cd0:	1d c1       	rjmp	.+570    	; 0xf0c <_fpadd_parts+0x28c>
     cd2:	9a 01       	movw	r18, r20
     cd4:	ad 01       	movw	r20, r26
     cd6:	88 e0       	ldi	r24, 0x08	; 8
     cd8:	ea 01       	movw	r28, r20
     cda:	09 90       	ld	r0, Y+
     cdc:	ae 01       	movw	r20, r28
     cde:	e9 01       	movw	r28, r18
     ce0:	09 92       	st	Y+, r0
     ce2:	9e 01       	movw	r18, r28
     ce4:	81 50       	subi	r24, 0x01	; 1
     ce6:	c1 f7       	brne	.-16     	; 0xcd8 <_fpadd_parts+0x58>
     ce8:	e2 01       	movw	r28, r4
     cea:	89 81       	ldd	r24, Y+1	; 0x01
     cec:	11 96       	adiw	r26, 0x01	; 1
     cee:	9c 91       	ld	r25, X
     cf0:	89 23       	and	r24, r25
     cf2:	81 83       	std	Z+1, r24	; 0x01
     cf4:	08 c1       	rjmp	.+528    	; 0xf06 <_fpadd_parts+0x286>
     cf6:	92 30       	cpi	r25, 0x02	; 2
     cf8:	09 f4       	brne	.+2      	; 0xcfc <_fpadd_parts+0x7c>
     cfa:	07 c1       	rjmp	.+526    	; 0xf0a <_fpadd_parts+0x28a>
     cfc:	12 96       	adiw	r26, 0x02	; 2
     cfe:	2d 90       	ld	r2, X+
     d00:	3c 90       	ld	r3, X
     d02:	13 97       	sbiw	r26, 0x03	; 3
     d04:	eb 01       	movw	r28, r22
     d06:	8a 81       	ldd	r24, Y+2	; 0x02
     d08:	9b 81       	ldd	r25, Y+3	; 0x03
     d0a:	14 96       	adiw	r26, 0x04	; 4
     d0c:	ad 90       	ld	r10, X+
     d0e:	bd 90       	ld	r11, X+
     d10:	cd 90       	ld	r12, X+
     d12:	dc 90       	ld	r13, X
     d14:	17 97       	sbiw	r26, 0x07	; 7
     d16:	ec 80       	ldd	r14, Y+4	; 0x04
     d18:	fd 80       	ldd	r15, Y+5	; 0x05
     d1a:	0e 81       	ldd	r16, Y+6	; 0x06
     d1c:	1f 81       	ldd	r17, Y+7	; 0x07
     d1e:	91 01       	movw	r18, r2
     d20:	28 1b       	sub	r18, r24
     d22:	39 0b       	sbc	r19, r25
     d24:	b9 01       	movw	r22, r18
     d26:	37 ff       	sbrs	r19, 7
     d28:	04 c0       	rjmp	.+8      	; 0xd32 <_fpadd_parts+0xb2>
     d2a:	66 27       	eor	r22, r22
     d2c:	77 27       	eor	r23, r23
     d2e:	62 1b       	sub	r22, r18
     d30:	73 0b       	sbc	r23, r19
     d32:	60 32       	cpi	r22, 0x20	; 32
     d34:	71 05       	cpc	r23, r1
     d36:	0c f0       	brlt	.+2      	; 0xd3a <_fpadd_parts+0xba>
     d38:	61 c0       	rjmp	.+194    	; 0xdfc <_fpadd_parts+0x17c>
     d3a:	12 16       	cp	r1, r18
     d3c:	13 06       	cpc	r1, r19
     d3e:	6c f5       	brge	.+90     	; 0xd9a <_fpadd_parts+0x11a>
     d40:	37 01       	movw	r6, r14
     d42:	48 01       	movw	r8, r16
     d44:	06 2e       	mov	r0, r22
     d46:	04 c0       	rjmp	.+8      	; 0xd50 <_fpadd_parts+0xd0>
     d48:	96 94       	lsr	r9
     d4a:	87 94       	ror	r8
     d4c:	77 94       	ror	r7
     d4e:	67 94       	ror	r6
     d50:	0a 94       	dec	r0
     d52:	d2 f7       	brpl	.-12     	; 0xd48 <_fpadd_parts+0xc8>
     d54:	21 e0       	ldi	r18, 0x01	; 1
     d56:	30 e0       	ldi	r19, 0x00	; 0
     d58:	40 e0       	ldi	r20, 0x00	; 0
     d5a:	50 e0       	ldi	r21, 0x00	; 0
     d5c:	04 c0       	rjmp	.+8      	; 0xd66 <_fpadd_parts+0xe6>
     d5e:	22 0f       	add	r18, r18
     d60:	33 1f       	adc	r19, r19
     d62:	44 1f       	adc	r20, r20
     d64:	55 1f       	adc	r21, r21
     d66:	6a 95       	dec	r22
     d68:	d2 f7       	brpl	.-12     	; 0xd5e <_fpadd_parts+0xde>
     d6a:	21 50       	subi	r18, 0x01	; 1
     d6c:	30 40       	sbci	r19, 0x00	; 0
     d6e:	40 40       	sbci	r20, 0x00	; 0
     d70:	50 40       	sbci	r21, 0x00	; 0
     d72:	2e 21       	and	r18, r14
     d74:	3f 21       	and	r19, r15
     d76:	40 23       	and	r20, r16
     d78:	51 23       	and	r21, r17
     d7a:	21 15       	cp	r18, r1
     d7c:	31 05       	cpc	r19, r1
     d7e:	41 05       	cpc	r20, r1
     d80:	51 05       	cpc	r21, r1
     d82:	21 f0       	breq	.+8      	; 0xd8c <_fpadd_parts+0x10c>
     d84:	21 e0       	ldi	r18, 0x01	; 1
     d86:	30 e0       	ldi	r19, 0x00	; 0
     d88:	40 e0       	ldi	r20, 0x00	; 0
     d8a:	50 e0       	ldi	r21, 0x00	; 0
     d8c:	79 01       	movw	r14, r18
     d8e:	8a 01       	movw	r16, r20
     d90:	e6 28       	or	r14, r6
     d92:	f7 28       	or	r15, r7
     d94:	08 29       	or	r16, r8
     d96:	19 29       	or	r17, r9
     d98:	3c c0       	rjmp	.+120    	; 0xe12 <_fpadd_parts+0x192>
     d9a:	23 2b       	or	r18, r19
     d9c:	d1 f1       	breq	.+116    	; 0xe12 <_fpadd_parts+0x192>
     d9e:	26 0e       	add	r2, r22
     da0:	37 1e       	adc	r3, r23
     da2:	35 01       	movw	r6, r10
     da4:	46 01       	movw	r8, r12
     da6:	06 2e       	mov	r0, r22
     da8:	04 c0       	rjmp	.+8      	; 0xdb2 <_fpadd_parts+0x132>
     daa:	96 94       	lsr	r9
     dac:	87 94       	ror	r8
     dae:	77 94       	ror	r7
     db0:	67 94       	ror	r6
     db2:	0a 94       	dec	r0
     db4:	d2 f7       	brpl	.-12     	; 0xdaa <_fpadd_parts+0x12a>
     db6:	21 e0       	ldi	r18, 0x01	; 1
     db8:	30 e0       	ldi	r19, 0x00	; 0
     dba:	40 e0       	ldi	r20, 0x00	; 0
     dbc:	50 e0       	ldi	r21, 0x00	; 0
     dbe:	04 c0       	rjmp	.+8      	; 0xdc8 <_fpadd_parts+0x148>
     dc0:	22 0f       	add	r18, r18
     dc2:	33 1f       	adc	r19, r19
     dc4:	44 1f       	adc	r20, r20
     dc6:	55 1f       	adc	r21, r21
     dc8:	6a 95       	dec	r22
     dca:	d2 f7       	brpl	.-12     	; 0xdc0 <_fpadd_parts+0x140>
     dcc:	21 50       	subi	r18, 0x01	; 1
     dce:	30 40       	sbci	r19, 0x00	; 0
     dd0:	40 40       	sbci	r20, 0x00	; 0
     dd2:	50 40       	sbci	r21, 0x00	; 0
     dd4:	2a 21       	and	r18, r10
     dd6:	3b 21       	and	r19, r11
     dd8:	4c 21       	and	r20, r12
     dda:	5d 21       	and	r21, r13
     ddc:	21 15       	cp	r18, r1
     dde:	31 05       	cpc	r19, r1
     de0:	41 05       	cpc	r20, r1
     de2:	51 05       	cpc	r21, r1
     de4:	21 f0       	breq	.+8      	; 0xdee <_fpadd_parts+0x16e>
     de6:	21 e0       	ldi	r18, 0x01	; 1
     de8:	30 e0       	ldi	r19, 0x00	; 0
     dea:	40 e0       	ldi	r20, 0x00	; 0
     dec:	50 e0       	ldi	r21, 0x00	; 0
     dee:	59 01       	movw	r10, r18
     df0:	6a 01       	movw	r12, r20
     df2:	a6 28       	or	r10, r6
     df4:	b7 28       	or	r11, r7
     df6:	c8 28       	or	r12, r8
     df8:	d9 28       	or	r13, r9
     dfa:	0b c0       	rjmp	.+22     	; 0xe12 <_fpadd_parts+0x192>
     dfc:	82 15       	cp	r24, r2
     dfe:	93 05       	cpc	r25, r3
     e00:	2c f0       	brlt	.+10     	; 0xe0c <_fpadd_parts+0x18c>
     e02:	1c 01       	movw	r2, r24
     e04:	aa 24       	eor	r10, r10
     e06:	bb 24       	eor	r11, r11
     e08:	65 01       	movw	r12, r10
     e0a:	03 c0       	rjmp	.+6      	; 0xe12 <_fpadd_parts+0x192>
     e0c:	ee 24       	eor	r14, r14
     e0e:	ff 24       	eor	r15, r15
     e10:	87 01       	movw	r16, r14
     e12:	11 96       	adiw	r26, 0x01	; 1
     e14:	9c 91       	ld	r25, X
     e16:	d2 01       	movw	r26, r4
     e18:	11 96       	adiw	r26, 0x01	; 1
     e1a:	8c 91       	ld	r24, X
     e1c:	98 17       	cp	r25, r24
     e1e:	09 f4       	brne	.+2      	; 0xe22 <_fpadd_parts+0x1a2>
     e20:	45 c0       	rjmp	.+138    	; 0xeac <_fpadd_parts+0x22c>
     e22:	99 23       	and	r25, r25
     e24:	39 f0       	breq	.+14     	; 0xe34 <_fpadd_parts+0x1b4>
     e26:	a8 01       	movw	r20, r16
     e28:	97 01       	movw	r18, r14
     e2a:	2a 19       	sub	r18, r10
     e2c:	3b 09       	sbc	r19, r11
     e2e:	4c 09       	sbc	r20, r12
     e30:	5d 09       	sbc	r21, r13
     e32:	06 c0       	rjmp	.+12     	; 0xe40 <_fpadd_parts+0x1c0>
     e34:	a6 01       	movw	r20, r12
     e36:	95 01       	movw	r18, r10
     e38:	2e 19       	sub	r18, r14
     e3a:	3f 09       	sbc	r19, r15
     e3c:	40 0b       	sbc	r20, r16
     e3e:	51 0b       	sbc	r21, r17
     e40:	57 fd       	sbrc	r21, 7
     e42:	08 c0       	rjmp	.+16     	; 0xe54 <_fpadd_parts+0x1d4>
     e44:	11 82       	std	Z+1, r1	; 0x01
     e46:	33 82       	std	Z+3, r3	; 0x03
     e48:	22 82       	std	Z+2, r2	; 0x02
     e4a:	24 83       	std	Z+4, r18	; 0x04
     e4c:	35 83       	std	Z+5, r19	; 0x05
     e4e:	46 83       	std	Z+6, r20	; 0x06
     e50:	57 83       	std	Z+7, r21	; 0x07
     e52:	1d c0       	rjmp	.+58     	; 0xe8e <_fpadd_parts+0x20e>
     e54:	81 e0       	ldi	r24, 0x01	; 1
     e56:	81 83       	std	Z+1, r24	; 0x01
     e58:	33 82       	std	Z+3, r3	; 0x03
     e5a:	22 82       	std	Z+2, r2	; 0x02
     e5c:	88 27       	eor	r24, r24
     e5e:	99 27       	eor	r25, r25
     e60:	dc 01       	movw	r26, r24
     e62:	82 1b       	sub	r24, r18
     e64:	93 0b       	sbc	r25, r19
     e66:	a4 0b       	sbc	r26, r20
     e68:	b5 0b       	sbc	r27, r21
     e6a:	84 83       	std	Z+4, r24	; 0x04
     e6c:	95 83       	std	Z+5, r25	; 0x05
     e6e:	a6 83       	std	Z+6, r26	; 0x06
     e70:	b7 83       	std	Z+7, r27	; 0x07
     e72:	0d c0       	rjmp	.+26     	; 0xe8e <_fpadd_parts+0x20e>
     e74:	22 0f       	add	r18, r18
     e76:	33 1f       	adc	r19, r19
     e78:	44 1f       	adc	r20, r20
     e7a:	55 1f       	adc	r21, r21
     e7c:	24 83       	std	Z+4, r18	; 0x04
     e7e:	35 83       	std	Z+5, r19	; 0x05
     e80:	46 83       	std	Z+6, r20	; 0x06
     e82:	57 83       	std	Z+7, r21	; 0x07
     e84:	82 81       	ldd	r24, Z+2	; 0x02
     e86:	93 81       	ldd	r25, Z+3	; 0x03
     e88:	01 97       	sbiw	r24, 0x01	; 1
     e8a:	93 83       	std	Z+3, r25	; 0x03
     e8c:	82 83       	std	Z+2, r24	; 0x02
     e8e:	24 81       	ldd	r18, Z+4	; 0x04
     e90:	35 81       	ldd	r19, Z+5	; 0x05
     e92:	46 81       	ldd	r20, Z+6	; 0x06
     e94:	57 81       	ldd	r21, Z+7	; 0x07
     e96:	da 01       	movw	r26, r20
     e98:	c9 01       	movw	r24, r18
     e9a:	01 97       	sbiw	r24, 0x01	; 1
     e9c:	a1 09       	sbc	r26, r1
     e9e:	b1 09       	sbc	r27, r1
     ea0:	8f 5f       	subi	r24, 0xFF	; 255
     ea2:	9f 4f       	sbci	r25, 0xFF	; 255
     ea4:	af 4f       	sbci	r26, 0xFF	; 255
     ea6:	bf 43       	sbci	r27, 0x3F	; 63
     ea8:	28 f3       	brcs	.-54     	; 0xe74 <_fpadd_parts+0x1f4>
     eaa:	0b c0       	rjmp	.+22     	; 0xec2 <_fpadd_parts+0x242>
     eac:	91 83       	std	Z+1, r25	; 0x01
     eae:	33 82       	std	Z+3, r3	; 0x03
     eb0:	22 82       	std	Z+2, r2	; 0x02
     eb2:	ea 0c       	add	r14, r10
     eb4:	fb 1c       	adc	r15, r11
     eb6:	0c 1d       	adc	r16, r12
     eb8:	1d 1d       	adc	r17, r13
     eba:	e4 82       	std	Z+4, r14	; 0x04
     ebc:	f5 82       	std	Z+5, r15	; 0x05
     ebe:	06 83       	std	Z+6, r16	; 0x06
     ec0:	17 83       	std	Z+7, r17	; 0x07
     ec2:	83 e0       	ldi	r24, 0x03	; 3
     ec4:	80 83       	st	Z, r24
     ec6:	24 81       	ldd	r18, Z+4	; 0x04
     ec8:	35 81       	ldd	r19, Z+5	; 0x05
     eca:	46 81       	ldd	r20, Z+6	; 0x06
     ecc:	57 81       	ldd	r21, Z+7	; 0x07
     ece:	57 ff       	sbrs	r21, 7
     ed0:	1a c0       	rjmp	.+52     	; 0xf06 <_fpadd_parts+0x286>
     ed2:	c9 01       	movw	r24, r18
     ed4:	aa 27       	eor	r26, r26
     ed6:	97 fd       	sbrc	r25, 7
     ed8:	a0 95       	com	r26
     eda:	ba 2f       	mov	r27, r26
     edc:	81 70       	andi	r24, 0x01	; 1
     ede:	90 70       	andi	r25, 0x00	; 0
     ee0:	a0 70       	andi	r26, 0x00	; 0
     ee2:	b0 70       	andi	r27, 0x00	; 0
     ee4:	56 95       	lsr	r21
     ee6:	47 95       	ror	r20
     ee8:	37 95       	ror	r19
     eea:	27 95       	ror	r18
     eec:	82 2b       	or	r24, r18
     eee:	93 2b       	or	r25, r19
     ef0:	a4 2b       	or	r26, r20
     ef2:	b5 2b       	or	r27, r21
     ef4:	84 83       	std	Z+4, r24	; 0x04
     ef6:	95 83       	std	Z+5, r25	; 0x05
     ef8:	a6 83       	std	Z+6, r26	; 0x06
     efa:	b7 83       	std	Z+7, r27	; 0x07
     efc:	82 81       	ldd	r24, Z+2	; 0x02
     efe:	93 81       	ldd	r25, Z+3	; 0x03
     f00:	01 96       	adiw	r24, 0x01	; 1
     f02:	93 83       	std	Z+3, r25	; 0x03
     f04:	82 83       	std	Z+2, r24	; 0x02
     f06:	df 01       	movw	r26, r30
     f08:	01 c0       	rjmp	.+2      	; 0xf0c <_fpadd_parts+0x28c>
     f0a:	d2 01       	movw	r26, r4
     f0c:	cd 01       	movw	r24, r26
     f0e:	cd b7       	in	r28, 0x3d	; 61
     f10:	de b7       	in	r29, 0x3e	; 62
     f12:	e2 e1       	ldi	r30, 0x12	; 18
     f14:	0c 94 82 0c 	jmp	0x1904	; 0x1904 <__epilogue_restores__>

00000f18 <__subsf3>:
     f18:	a0 e2       	ldi	r26, 0x20	; 32
     f1a:	b0 e0       	ldi	r27, 0x00	; 0
     f1c:	e2 e9       	ldi	r30, 0x92	; 146
     f1e:	f7 e0       	ldi	r31, 0x07	; 7
     f20:	0c 94 72 0c 	jmp	0x18e4	; 0x18e4 <__prologue_saves__+0x18>
     f24:	69 83       	std	Y+1, r22	; 0x01
     f26:	7a 83       	std	Y+2, r23	; 0x02
     f28:	8b 83       	std	Y+3, r24	; 0x03
     f2a:	9c 83       	std	Y+4, r25	; 0x04
     f2c:	2d 83       	std	Y+5, r18	; 0x05
     f2e:	3e 83       	std	Y+6, r19	; 0x06
     f30:	4f 83       	std	Y+7, r20	; 0x07
     f32:	58 87       	std	Y+8, r21	; 0x08
     f34:	e9 e0       	ldi	r30, 0x09	; 9
     f36:	ee 2e       	mov	r14, r30
     f38:	f1 2c       	mov	r15, r1
     f3a:	ec 0e       	add	r14, r28
     f3c:	fd 1e       	adc	r15, r29
     f3e:	ce 01       	movw	r24, r28
     f40:	01 96       	adiw	r24, 0x01	; 1
     f42:	b7 01       	movw	r22, r14
     f44:	0e 94 95 0b 	call	0x172a	; 0x172a <__unpack_f>
     f48:	8e 01       	movw	r16, r28
     f4a:	0f 5e       	subi	r16, 0xEF	; 239
     f4c:	1f 4f       	sbci	r17, 0xFF	; 255
     f4e:	ce 01       	movw	r24, r28
     f50:	05 96       	adiw	r24, 0x05	; 5
     f52:	b8 01       	movw	r22, r16
     f54:	0e 94 95 0b 	call	0x172a	; 0x172a <__unpack_f>
     f58:	8a 89       	ldd	r24, Y+18	; 0x12
     f5a:	91 e0       	ldi	r25, 0x01	; 1
     f5c:	89 27       	eor	r24, r25
     f5e:	8a 8b       	std	Y+18, r24	; 0x12
     f60:	c7 01       	movw	r24, r14
     f62:	b8 01       	movw	r22, r16
     f64:	ae 01       	movw	r20, r28
     f66:	47 5e       	subi	r20, 0xE7	; 231
     f68:	5f 4f       	sbci	r21, 0xFF	; 255
     f6a:	0e 94 40 06 	call	0xc80	; 0xc80 <_fpadd_parts>
     f6e:	0e 94 c0 0a 	call	0x1580	; 0x1580 <__pack_f>
     f72:	a0 96       	adiw	r28, 0x20	; 32
     f74:	e6 e0       	ldi	r30, 0x06	; 6
     f76:	0c 94 8e 0c 	jmp	0x191c	; 0x191c <__epilogue_restores__+0x18>

00000f7a <__addsf3>:
     f7a:	a0 e2       	ldi	r26, 0x20	; 32
     f7c:	b0 e0       	ldi	r27, 0x00	; 0
     f7e:	e3 ec       	ldi	r30, 0xC3	; 195
     f80:	f7 e0       	ldi	r31, 0x07	; 7
     f82:	0c 94 72 0c 	jmp	0x18e4	; 0x18e4 <__prologue_saves__+0x18>
     f86:	69 83       	std	Y+1, r22	; 0x01
     f88:	7a 83       	std	Y+2, r23	; 0x02
     f8a:	8b 83       	std	Y+3, r24	; 0x03
     f8c:	9c 83       	std	Y+4, r25	; 0x04
     f8e:	2d 83       	std	Y+5, r18	; 0x05
     f90:	3e 83       	std	Y+6, r19	; 0x06
     f92:	4f 83       	std	Y+7, r20	; 0x07
     f94:	58 87       	std	Y+8, r21	; 0x08
     f96:	f9 e0       	ldi	r31, 0x09	; 9
     f98:	ef 2e       	mov	r14, r31
     f9a:	f1 2c       	mov	r15, r1
     f9c:	ec 0e       	add	r14, r28
     f9e:	fd 1e       	adc	r15, r29
     fa0:	ce 01       	movw	r24, r28
     fa2:	01 96       	adiw	r24, 0x01	; 1
     fa4:	b7 01       	movw	r22, r14
     fa6:	0e 94 95 0b 	call	0x172a	; 0x172a <__unpack_f>
     faa:	8e 01       	movw	r16, r28
     fac:	0f 5e       	subi	r16, 0xEF	; 239
     fae:	1f 4f       	sbci	r17, 0xFF	; 255
     fb0:	ce 01       	movw	r24, r28
     fb2:	05 96       	adiw	r24, 0x05	; 5
     fb4:	b8 01       	movw	r22, r16
     fb6:	0e 94 95 0b 	call	0x172a	; 0x172a <__unpack_f>
     fba:	c7 01       	movw	r24, r14
     fbc:	b8 01       	movw	r22, r16
     fbe:	ae 01       	movw	r20, r28
     fc0:	47 5e       	subi	r20, 0xE7	; 231
     fc2:	5f 4f       	sbci	r21, 0xFF	; 255
     fc4:	0e 94 40 06 	call	0xc80	; 0xc80 <_fpadd_parts>
     fc8:	0e 94 c0 0a 	call	0x1580	; 0x1580 <__pack_f>
     fcc:	a0 96       	adiw	r28, 0x20	; 32
     fce:	e6 e0       	ldi	r30, 0x06	; 6
     fd0:	0c 94 8e 0c 	jmp	0x191c	; 0x191c <__epilogue_restores__+0x18>

00000fd4 <__mulsf3>:
     fd4:	a0 e2       	ldi	r26, 0x20	; 32
     fd6:	b0 e0       	ldi	r27, 0x00	; 0
     fd8:	e0 ef       	ldi	r30, 0xF0	; 240
     fda:	f7 e0       	ldi	r31, 0x07	; 7
     fdc:	0c 94 66 0c 	jmp	0x18cc	; 0x18cc <__prologue_saves__>
     fe0:	69 83       	std	Y+1, r22	; 0x01
     fe2:	7a 83       	std	Y+2, r23	; 0x02
     fe4:	8b 83       	std	Y+3, r24	; 0x03
     fe6:	9c 83       	std	Y+4, r25	; 0x04
     fe8:	2d 83       	std	Y+5, r18	; 0x05
     fea:	3e 83       	std	Y+6, r19	; 0x06
     fec:	4f 83       	std	Y+7, r20	; 0x07
     fee:	58 87       	std	Y+8, r21	; 0x08
     ff0:	ce 01       	movw	r24, r28
     ff2:	01 96       	adiw	r24, 0x01	; 1
     ff4:	be 01       	movw	r22, r28
     ff6:	67 5f       	subi	r22, 0xF7	; 247
     ff8:	7f 4f       	sbci	r23, 0xFF	; 255
     ffa:	0e 94 95 0b 	call	0x172a	; 0x172a <__unpack_f>
     ffe:	ce 01       	movw	r24, r28
    1000:	05 96       	adiw	r24, 0x05	; 5
    1002:	be 01       	movw	r22, r28
    1004:	6f 5e       	subi	r22, 0xEF	; 239
    1006:	7f 4f       	sbci	r23, 0xFF	; 255
    1008:	0e 94 95 0b 	call	0x172a	; 0x172a <__unpack_f>
    100c:	99 85       	ldd	r25, Y+9	; 0x09
    100e:	92 30       	cpi	r25, 0x02	; 2
    1010:	88 f0       	brcs	.+34     	; 0x1034 <__mulsf3+0x60>
    1012:	89 89       	ldd	r24, Y+17	; 0x11
    1014:	82 30       	cpi	r24, 0x02	; 2
    1016:	c8 f0       	brcs	.+50     	; 0x104a <__mulsf3+0x76>
    1018:	94 30       	cpi	r25, 0x04	; 4
    101a:	19 f4       	brne	.+6      	; 0x1022 <__mulsf3+0x4e>
    101c:	82 30       	cpi	r24, 0x02	; 2
    101e:	51 f4       	brne	.+20     	; 0x1034 <__mulsf3+0x60>
    1020:	04 c0       	rjmp	.+8      	; 0x102a <__mulsf3+0x56>
    1022:	84 30       	cpi	r24, 0x04	; 4
    1024:	29 f4       	brne	.+10     	; 0x1030 <__mulsf3+0x5c>
    1026:	92 30       	cpi	r25, 0x02	; 2
    1028:	81 f4       	brne	.+32     	; 0x104a <__mulsf3+0x76>
    102a:	80 e0       	ldi	r24, 0x00	; 0
    102c:	92 e0       	ldi	r25, 0x02	; 2
    102e:	c6 c0       	rjmp	.+396    	; 0x11bc <__mulsf3+0x1e8>
    1030:	92 30       	cpi	r25, 0x02	; 2
    1032:	49 f4       	brne	.+18     	; 0x1046 <__mulsf3+0x72>
    1034:	20 e0       	ldi	r18, 0x00	; 0
    1036:	9a 85       	ldd	r25, Y+10	; 0x0a
    1038:	8a 89       	ldd	r24, Y+18	; 0x12
    103a:	98 13       	cpse	r25, r24
    103c:	21 e0       	ldi	r18, 0x01	; 1
    103e:	2a 87       	std	Y+10, r18	; 0x0a
    1040:	ce 01       	movw	r24, r28
    1042:	09 96       	adiw	r24, 0x09	; 9
    1044:	bb c0       	rjmp	.+374    	; 0x11bc <__mulsf3+0x1e8>
    1046:	82 30       	cpi	r24, 0x02	; 2
    1048:	49 f4       	brne	.+18     	; 0x105c <__mulsf3+0x88>
    104a:	20 e0       	ldi	r18, 0x00	; 0
    104c:	9a 85       	ldd	r25, Y+10	; 0x0a
    104e:	8a 89       	ldd	r24, Y+18	; 0x12
    1050:	98 13       	cpse	r25, r24
    1052:	21 e0       	ldi	r18, 0x01	; 1
    1054:	2a 8b       	std	Y+18, r18	; 0x12
    1056:	ce 01       	movw	r24, r28
    1058:	41 96       	adiw	r24, 0x11	; 17
    105a:	b0 c0       	rjmp	.+352    	; 0x11bc <__mulsf3+0x1e8>
    105c:	2d 84       	ldd	r2, Y+13	; 0x0d
    105e:	3e 84       	ldd	r3, Y+14	; 0x0e
    1060:	4f 84       	ldd	r4, Y+15	; 0x0f
    1062:	58 88       	ldd	r5, Y+16	; 0x10
    1064:	6d 88       	ldd	r6, Y+21	; 0x15
    1066:	7e 88       	ldd	r7, Y+22	; 0x16
    1068:	8f 88       	ldd	r8, Y+23	; 0x17
    106a:	98 8c       	ldd	r9, Y+24	; 0x18
    106c:	ee 24       	eor	r14, r14
    106e:	ff 24       	eor	r15, r15
    1070:	87 01       	movw	r16, r14
    1072:	aa 24       	eor	r10, r10
    1074:	bb 24       	eor	r11, r11
    1076:	65 01       	movw	r12, r10
    1078:	40 e0       	ldi	r20, 0x00	; 0
    107a:	50 e0       	ldi	r21, 0x00	; 0
    107c:	60 e0       	ldi	r22, 0x00	; 0
    107e:	70 e0       	ldi	r23, 0x00	; 0
    1080:	e0 e0       	ldi	r30, 0x00	; 0
    1082:	f0 e0       	ldi	r31, 0x00	; 0
    1084:	c1 01       	movw	r24, r2
    1086:	81 70       	andi	r24, 0x01	; 1
    1088:	90 70       	andi	r25, 0x00	; 0
    108a:	89 2b       	or	r24, r25
    108c:	e9 f0       	breq	.+58     	; 0x10c8 <__mulsf3+0xf4>
    108e:	e6 0c       	add	r14, r6
    1090:	f7 1c       	adc	r15, r7
    1092:	08 1d       	adc	r16, r8
    1094:	19 1d       	adc	r17, r9
    1096:	9a 01       	movw	r18, r20
    1098:	ab 01       	movw	r20, r22
    109a:	2a 0d       	add	r18, r10
    109c:	3b 1d       	adc	r19, r11
    109e:	4c 1d       	adc	r20, r12
    10a0:	5d 1d       	adc	r21, r13
    10a2:	80 e0       	ldi	r24, 0x00	; 0
    10a4:	90 e0       	ldi	r25, 0x00	; 0
    10a6:	a0 e0       	ldi	r26, 0x00	; 0
    10a8:	b0 e0       	ldi	r27, 0x00	; 0
    10aa:	e6 14       	cp	r14, r6
    10ac:	f7 04       	cpc	r15, r7
    10ae:	08 05       	cpc	r16, r8
    10b0:	19 05       	cpc	r17, r9
    10b2:	20 f4       	brcc	.+8      	; 0x10bc <__mulsf3+0xe8>
    10b4:	81 e0       	ldi	r24, 0x01	; 1
    10b6:	90 e0       	ldi	r25, 0x00	; 0
    10b8:	a0 e0       	ldi	r26, 0x00	; 0
    10ba:	b0 e0       	ldi	r27, 0x00	; 0
    10bc:	ba 01       	movw	r22, r20
    10be:	a9 01       	movw	r20, r18
    10c0:	48 0f       	add	r20, r24
    10c2:	59 1f       	adc	r21, r25
    10c4:	6a 1f       	adc	r22, r26
    10c6:	7b 1f       	adc	r23, r27
    10c8:	aa 0c       	add	r10, r10
    10ca:	bb 1c       	adc	r11, r11
    10cc:	cc 1c       	adc	r12, r12
    10ce:	dd 1c       	adc	r13, r13
    10d0:	97 fe       	sbrs	r9, 7
    10d2:	08 c0       	rjmp	.+16     	; 0x10e4 <__mulsf3+0x110>
    10d4:	81 e0       	ldi	r24, 0x01	; 1
    10d6:	90 e0       	ldi	r25, 0x00	; 0
    10d8:	a0 e0       	ldi	r26, 0x00	; 0
    10da:	b0 e0       	ldi	r27, 0x00	; 0
    10dc:	a8 2a       	or	r10, r24
    10de:	b9 2a       	or	r11, r25
    10e0:	ca 2a       	or	r12, r26
    10e2:	db 2a       	or	r13, r27
    10e4:	31 96       	adiw	r30, 0x01	; 1
    10e6:	e0 32       	cpi	r30, 0x20	; 32
    10e8:	f1 05       	cpc	r31, r1
    10ea:	49 f0       	breq	.+18     	; 0x10fe <__mulsf3+0x12a>
    10ec:	66 0c       	add	r6, r6
    10ee:	77 1c       	adc	r7, r7
    10f0:	88 1c       	adc	r8, r8
    10f2:	99 1c       	adc	r9, r9
    10f4:	56 94       	lsr	r5
    10f6:	47 94       	ror	r4
    10f8:	37 94       	ror	r3
    10fa:	27 94       	ror	r2
    10fc:	c3 cf       	rjmp	.-122    	; 0x1084 <__mulsf3+0xb0>
    10fe:	fa 85       	ldd	r31, Y+10	; 0x0a
    1100:	ea 89       	ldd	r30, Y+18	; 0x12
    1102:	2b 89       	ldd	r18, Y+19	; 0x13
    1104:	3c 89       	ldd	r19, Y+20	; 0x14
    1106:	8b 85       	ldd	r24, Y+11	; 0x0b
    1108:	9c 85       	ldd	r25, Y+12	; 0x0c
    110a:	28 0f       	add	r18, r24
    110c:	39 1f       	adc	r19, r25
    110e:	2e 5f       	subi	r18, 0xFE	; 254
    1110:	3f 4f       	sbci	r19, 0xFF	; 255
    1112:	17 c0       	rjmp	.+46     	; 0x1142 <__mulsf3+0x16e>
    1114:	ca 01       	movw	r24, r20
    1116:	81 70       	andi	r24, 0x01	; 1
    1118:	90 70       	andi	r25, 0x00	; 0
    111a:	89 2b       	or	r24, r25
    111c:	61 f0       	breq	.+24     	; 0x1136 <__mulsf3+0x162>
    111e:	16 95       	lsr	r17
    1120:	07 95       	ror	r16
    1122:	f7 94       	ror	r15
    1124:	e7 94       	ror	r14
    1126:	80 e0       	ldi	r24, 0x00	; 0
    1128:	90 e0       	ldi	r25, 0x00	; 0
    112a:	a0 e0       	ldi	r26, 0x00	; 0
    112c:	b0 e8       	ldi	r27, 0x80	; 128
    112e:	e8 2a       	or	r14, r24
    1130:	f9 2a       	or	r15, r25
    1132:	0a 2b       	or	r16, r26
    1134:	1b 2b       	or	r17, r27
    1136:	76 95       	lsr	r23
    1138:	67 95       	ror	r22
    113a:	57 95       	ror	r21
    113c:	47 95       	ror	r20
    113e:	2f 5f       	subi	r18, 0xFF	; 255
    1140:	3f 4f       	sbci	r19, 0xFF	; 255
    1142:	77 fd       	sbrc	r23, 7
    1144:	e7 cf       	rjmp	.-50     	; 0x1114 <__mulsf3+0x140>
    1146:	0c c0       	rjmp	.+24     	; 0x1160 <__mulsf3+0x18c>
    1148:	44 0f       	add	r20, r20
    114a:	55 1f       	adc	r21, r21
    114c:	66 1f       	adc	r22, r22
    114e:	77 1f       	adc	r23, r23
    1150:	17 fd       	sbrc	r17, 7
    1152:	41 60       	ori	r20, 0x01	; 1
    1154:	ee 0c       	add	r14, r14
    1156:	ff 1c       	adc	r15, r15
    1158:	00 1f       	adc	r16, r16
    115a:	11 1f       	adc	r17, r17
    115c:	21 50       	subi	r18, 0x01	; 1
    115e:	30 40       	sbci	r19, 0x00	; 0
    1160:	40 30       	cpi	r20, 0x00	; 0
    1162:	90 e0       	ldi	r25, 0x00	; 0
    1164:	59 07       	cpc	r21, r25
    1166:	90 e0       	ldi	r25, 0x00	; 0
    1168:	69 07       	cpc	r22, r25
    116a:	90 e4       	ldi	r25, 0x40	; 64
    116c:	79 07       	cpc	r23, r25
    116e:	60 f3       	brcs	.-40     	; 0x1148 <__mulsf3+0x174>
    1170:	2b 8f       	std	Y+27, r18	; 0x1b
    1172:	3c 8f       	std	Y+28, r19	; 0x1c
    1174:	db 01       	movw	r26, r22
    1176:	ca 01       	movw	r24, r20
    1178:	8f 77       	andi	r24, 0x7F	; 127
    117a:	90 70       	andi	r25, 0x00	; 0
    117c:	a0 70       	andi	r26, 0x00	; 0
    117e:	b0 70       	andi	r27, 0x00	; 0
    1180:	80 34       	cpi	r24, 0x40	; 64
    1182:	91 05       	cpc	r25, r1
    1184:	a1 05       	cpc	r26, r1
    1186:	b1 05       	cpc	r27, r1
    1188:	61 f4       	brne	.+24     	; 0x11a2 <__mulsf3+0x1ce>
    118a:	47 fd       	sbrc	r20, 7
    118c:	0a c0       	rjmp	.+20     	; 0x11a2 <__mulsf3+0x1ce>
    118e:	e1 14       	cp	r14, r1
    1190:	f1 04       	cpc	r15, r1
    1192:	01 05       	cpc	r16, r1
    1194:	11 05       	cpc	r17, r1
    1196:	29 f0       	breq	.+10     	; 0x11a2 <__mulsf3+0x1ce>
    1198:	40 5c       	subi	r20, 0xC0	; 192
    119a:	5f 4f       	sbci	r21, 0xFF	; 255
    119c:	6f 4f       	sbci	r22, 0xFF	; 255
    119e:	7f 4f       	sbci	r23, 0xFF	; 255
    11a0:	40 78       	andi	r20, 0x80	; 128
    11a2:	1a 8e       	std	Y+26, r1	; 0x1a
    11a4:	fe 17       	cp	r31, r30
    11a6:	11 f0       	breq	.+4      	; 0x11ac <__mulsf3+0x1d8>
    11a8:	81 e0       	ldi	r24, 0x01	; 1
    11aa:	8a 8f       	std	Y+26, r24	; 0x1a
    11ac:	4d 8f       	std	Y+29, r20	; 0x1d
    11ae:	5e 8f       	std	Y+30, r21	; 0x1e
    11b0:	6f 8f       	std	Y+31, r22	; 0x1f
    11b2:	78 a3       	std	Y+32, r23	; 0x20
    11b4:	83 e0       	ldi	r24, 0x03	; 3
    11b6:	89 8f       	std	Y+25, r24	; 0x19
    11b8:	ce 01       	movw	r24, r28
    11ba:	49 96       	adiw	r24, 0x19	; 25
    11bc:	0e 94 c0 0a 	call	0x1580	; 0x1580 <__pack_f>
    11c0:	a0 96       	adiw	r28, 0x20	; 32
    11c2:	e2 e1       	ldi	r30, 0x12	; 18
    11c4:	0c 94 82 0c 	jmp	0x1904	; 0x1904 <__epilogue_restores__>

000011c8 <__gtsf2>:
    11c8:	a8 e1       	ldi	r26, 0x18	; 24
    11ca:	b0 e0       	ldi	r27, 0x00	; 0
    11cc:	ea ee       	ldi	r30, 0xEA	; 234
    11ce:	f8 e0       	ldi	r31, 0x08	; 8
    11d0:	0c 94 72 0c 	jmp	0x18e4	; 0x18e4 <__prologue_saves__+0x18>
    11d4:	69 83       	std	Y+1, r22	; 0x01
    11d6:	7a 83       	std	Y+2, r23	; 0x02
    11d8:	8b 83       	std	Y+3, r24	; 0x03
    11da:	9c 83       	std	Y+4, r25	; 0x04
    11dc:	2d 83       	std	Y+5, r18	; 0x05
    11de:	3e 83       	std	Y+6, r19	; 0x06
    11e0:	4f 83       	std	Y+7, r20	; 0x07
    11e2:	58 87       	std	Y+8, r21	; 0x08
    11e4:	89 e0       	ldi	r24, 0x09	; 9
    11e6:	e8 2e       	mov	r14, r24
    11e8:	f1 2c       	mov	r15, r1
    11ea:	ec 0e       	add	r14, r28
    11ec:	fd 1e       	adc	r15, r29
    11ee:	ce 01       	movw	r24, r28
    11f0:	01 96       	adiw	r24, 0x01	; 1
    11f2:	b7 01       	movw	r22, r14
    11f4:	0e 94 95 0b 	call	0x172a	; 0x172a <__unpack_f>
    11f8:	8e 01       	movw	r16, r28
    11fa:	0f 5e       	subi	r16, 0xEF	; 239
    11fc:	1f 4f       	sbci	r17, 0xFF	; 255
    11fe:	ce 01       	movw	r24, r28
    1200:	05 96       	adiw	r24, 0x05	; 5
    1202:	b8 01       	movw	r22, r16
    1204:	0e 94 95 0b 	call	0x172a	; 0x172a <__unpack_f>
    1208:	89 85       	ldd	r24, Y+9	; 0x09
    120a:	82 30       	cpi	r24, 0x02	; 2
    120c:	40 f0       	brcs	.+16     	; 0x121e <__gtsf2+0x56>
    120e:	89 89       	ldd	r24, Y+17	; 0x11
    1210:	82 30       	cpi	r24, 0x02	; 2
    1212:	28 f0       	brcs	.+10     	; 0x121e <__gtsf2+0x56>
    1214:	c7 01       	movw	r24, r14
    1216:	b8 01       	movw	r22, r16
    1218:	0e 94 0d 0c 	call	0x181a	; 0x181a <__fpcmp_parts_f>
    121c:	01 c0       	rjmp	.+2      	; 0x1220 <__gtsf2+0x58>
    121e:	8f ef       	ldi	r24, 0xFF	; 255
    1220:	68 96       	adiw	r28, 0x18	; 24
    1222:	e6 e0       	ldi	r30, 0x06	; 6
    1224:	0c 94 8e 0c 	jmp	0x191c	; 0x191c <__epilogue_restores__+0x18>

00001228 <__gesf2>:
    1228:	a8 e1       	ldi	r26, 0x18	; 24
    122a:	b0 e0       	ldi	r27, 0x00	; 0
    122c:	ea e1       	ldi	r30, 0x1A	; 26
    122e:	f9 e0       	ldi	r31, 0x09	; 9
    1230:	0c 94 72 0c 	jmp	0x18e4	; 0x18e4 <__prologue_saves__+0x18>
    1234:	69 83       	std	Y+1, r22	; 0x01
    1236:	7a 83       	std	Y+2, r23	; 0x02
    1238:	8b 83       	std	Y+3, r24	; 0x03
    123a:	9c 83       	std	Y+4, r25	; 0x04
    123c:	2d 83       	std	Y+5, r18	; 0x05
    123e:	3e 83       	std	Y+6, r19	; 0x06
    1240:	4f 83       	std	Y+7, r20	; 0x07
    1242:	58 87       	std	Y+8, r21	; 0x08
    1244:	89 e0       	ldi	r24, 0x09	; 9
    1246:	e8 2e       	mov	r14, r24
    1248:	f1 2c       	mov	r15, r1
    124a:	ec 0e       	add	r14, r28
    124c:	fd 1e       	adc	r15, r29
    124e:	ce 01       	movw	r24, r28
    1250:	01 96       	adiw	r24, 0x01	; 1
    1252:	b7 01       	movw	r22, r14
    1254:	0e 94 95 0b 	call	0x172a	; 0x172a <__unpack_f>
    1258:	8e 01       	movw	r16, r28
    125a:	0f 5e       	subi	r16, 0xEF	; 239
    125c:	1f 4f       	sbci	r17, 0xFF	; 255
    125e:	ce 01       	movw	r24, r28
    1260:	05 96       	adiw	r24, 0x05	; 5
    1262:	b8 01       	movw	r22, r16
    1264:	0e 94 95 0b 	call	0x172a	; 0x172a <__unpack_f>
    1268:	89 85       	ldd	r24, Y+9	; 0x09
    126a:	82 30       	cpi	r24, 0x02	; 2
    126c:	40 f0       	brcs	.+16     	; 0x127e <__gesf2+0x56>
    126e:	89 89       	ldd	r24, Y+17	; 0x11
    1270:	82 30       	cpi	r24, 0x02	; 2
    1272:	28 f0       	brcs	.+10     	; 0x127e <__gesf2+0x56>
    1274:	c7 01       	movw	r24, r14
    1276:	b8 01       	movw	r22, r16
    1278:	0e 94 0d 0c 	call	0x181a	; 0x181a <__fpcmp_parts_f>
    127c:	01 c0       	rjmp	.+2      	; 0x1280 <__gesf2+0x58>
    127e:	8f ef       	ldi	r24, 0xFF	; 255
    1280:	68 96       	adiw	r28, 0x18	; 24
    1282:	e6 e0       	ldi	r30, 0x06	; 6
    1284:	0c 94 8e 0c 	jmp	0x191c	; 0x191c <__epilogue_restores__+0x18>

00001288 <__ltsf2>:
    1288:	a8 e1       	ldi	r26, 0x18	; 24
    128a:	b0 e0       	ldi	r27, 0x00	; 0
    128c:	ea e4       	ldi	r30, 0x4A	; 74
    128e:	f9 e0       	ldi	r31, 0x09	; 9
    1290:	0c 94 72 0c 	jmp	0x18e4	; 0x18e4 <__prologue_saves__+0x18>
    1294:	69 83       	std	Y+1, r22	; 0x01
    1296:	7a 83       	std	Y+2, r23	; 0x02
    1298:	8b 83       	std	Y+3, r24	; 0x03
    129a:	9c 83       	std	Y+4, r25	; 0x04
    129c:	2d 83       	std	Y+5, r18	; 0x05
    129e:	3e 83       	std	Y+6, r19	; 0x06
    12a0:	4f 83       	std	Y+7, r20	; 0x07
    12a2:	58 87       	std	Y+8, r21	; 0x08
    12a4:	89 e0       	ldi	r24, 0x09	; 9
    12a6:	e8 2e       	mov	r14, r24
    12a8:	f1 2c       	mov	r15, r1
    12aa:	ec 0e       	add	r14, r28
    12ac:	fd 1e       	adc	r15, r29
    12ae:	ce 01       	movw	r24, r28
    12b0:	01 96       	adiw	r24, 0x01	; 1
    12b2:	b7 01       	movw	r22, r14
    12b4:	0e 94 95 0b 	call	0x172a	; 0x172a <__unpack_f>
    12b8:	8e 01       	movw	r16, r28
    12ba:	0f 5e       	subi	r16, 0xEF	; 239
    12bc:	1f 4f       	sbci	r17, 0xFF	; 255
    12be:	ce 01       	movw	r24, r28
    12c0:	05 96       	adiw	r24, 0x05	; 5
    12c2:	b8 01       	movw	r22, r16
    12c4:	0e 94 95 0b 	call	0x172a	; 0x172a <__unpack_f>
    12c8:	89 85       	ldd	r24, Y+9	; 0x09
    12ca:	82 30       	cpi	r24, 0x02	; 2
    12cc:	40 f0       	brcs	.+16     	; 0x12de <__ltsf2+0x56>
    12ce:	89 89       	ldd	r24, Y+17	; 0x11
    12d0:	82 30       	cpi	r24, 0x02	; 2
    12d2:	28 f0       	brcs	.+10     	; 0x12de <__ltsf2+0x56>
    12d4:	c7 01       	movw	r24, r14
    12d6:	b8 01       	movw	r22, r16
    12d8:	0e 94 0d 0c 	call	0x181a	; 0x181a <__fpcmp_parts_f>
    12dc:	01 c0       	rjmp	.+2      	; 0x12e0 <__ltsf2+0x58>
    12de:	81 e0       	ldi	r24, 0x01	; 1
    12e0:	68 96       	adiw	r28, 0x18	; 24
    12e2:	e6 e0       	ldi	r30, 0x06	; 6
    12e4:	0c 94 8e 0c 	jmp	0x191c	; 0x191c <__epilogue_restores__+0x18>

000012e8 <__lesf2>:
    12e8:	a8 e1       	ldi	r26, 0x18	; 24
    12ea:	b0 e0       	ldi	r27, 0x00	; 0
    12ec:	ea e7       	ldi	r30, 0x7A	; 122
    12ee:	f9 e0       	ldi	r31, 0x09	; 9
    12f0:	0c 94 72 0c 	jmp	0x18e4	; 0x18e4 <__prologue_saves__+0x18>
    12f4:	69 83       	std	Y+1, r22	; 0x01
    12f6:	7a 83       	std	Y+2, r23	; 0x02
    12f8:	8b 83       	std	Y+3, r24	; 0x03
    12fa:	9c 83       	std	Y+4, r25	; 0x04
    12fc:	2d 83       	std	Y+5, r18	; 0x05
    12fe:	3e 83       	std	Y+6, r19	; 0x06
    1300:	4f 83       	std	Y+7, r20	; 0x07
    1302:	58 87       	std	Y+8, r21	; 0x08
    1304:	89 e0       	ldi	r24, 0x09	; 9
    1306:	e8 2e       	mov	r14, r24
    1308:	f1 2c       	mov	r15, r1
    130a:	ec 0e       	add	r14, r28
    130c:	fd 1e       	adc	r15, r29
    130e:	ce 01       	movw	r24, r28
    1310:	01 96       	adiw	r24, 0x01	; 1
    1312:	b7 01       	movw	r22, r14
    1314:	0e 94 95 0b 	call	0x172a	; 0x172a <__unpack_f>
    1318:	8e 01       	movw	r16, r28
    131a:	0f 5e       	subi	r16, 0xEF	; 239
    131c:	1f 4f       	sbci	r17, 0xFF	; 255
    131e:	ce 01       	movw	r24, r28
    1320:	05 96       	adiw	r24, 0x05	; 5
    1322:	b8 01       	movw	r22, r16
    1324:	0e 94 95 0b 	call	0x172a	; 0x172a <__unpack_f>
    1328:	89 85       	ldd	r24, Y+9	; 0x09
    132a:	82 30       	cpi	r24, 0x02	; 2
    132c:	40 f0       	brcs	.+16     	; 0x133e <__lesf2+0x56>
    132e:	89 89       	ldd	r24, Y+17	; 0x11
    1330:	82 30       	cpi	r24, 0x02	; 2
    1332:	28 f0       	brcs	.+10     	; 0x133e <__lesf2+0x56>
    1334:	c7 01       	movw	r24, r14
    1336:	b8 01       	movw	r22, r16
    1338:	0e 94 0d 0c 	call	0x181a	; 0x181a <__fpcmp_parts_f>
    133c:	01 c0       	rjmp	.+2      	; 0x1340 <__lesf2+0x58>
    133e:	81 e0       	ldi	r24, 0x01	; 1
    1340:	68 96       	adiw	r28, 0x18	; 24
    1342:	e6 e0       	ldi	r30, 0x06	; 6
    1344:	0c 94 8e 0c 	jmp	0x191c	; 0x191c <__epilogue_restores__+0x18>

00001348 <__fixsfsi>:
    1348:	ac e0       	ldi	r26, 0x0C	; 12
    134a:	b0 e0       	ldi	r27, 0x00	; 0
    134c:	ea ea       	ldi	r30, 0xAA	; 170
    134e:	f9 e0       	ldi	r31, 0x09	; 9
    1350:	0c 94 76 0c 	jmp	0x18ec	; 0x18ec <__prologue_saves__+0x20>
    1354:	69 83       	std	Y+1, r22	; 0x01
    1356:	7a 83       	std	Y+2, r23	; 0x02
    1358:	8b 83       	std	Y+3, r24	; 0x03
    135a:	9c 83       	std	Y+4, r25	; 0x04
    135c:	ce 01       	movw	r24, r28
    135e:	01 96       	adiw	r24, 0x01	; 1
    1360:	be 01       	movw	r22, r28
    1362:	6b 5f       	subi	r22, 0xFB	; 251
    1364:	7f 4f       	sbci	r23, 0xFF	; 255
    1366:	0e 94 95 0b 	call	0x172a	; 0x172a <__unpack_f>
    136a:	8d 81       	ldd	r24, Y+5	; 0x05
    136c:	82 30       	cpi	r24, 0x02	; 2
    136e:	61 f1       	breq	.+88     	; 0x13c8 <__fixsfsi+0x80>
    1370:	82 30       	cpi	r24, 0x02	; 2
    1372:	50 f1       	brcs	.+84     	; 0x13c8 <__fixsfsi+0x80>
    1374:	84 30       	cpi	r24, 0x04	; 4
    1376:	21 f4       	brne	.+8      	; 0x1380 <__fixsfsi+0x38>
    1378:	8e 81       	ldd	r24, Y+6	; 0x06
    137a:	88 23       	and	r24, r24
    137c:	51 f1       	breq	.+84     	; 0x13d2 <__fixsfsi+0x8a>
    137e:	2e c0       	rjmp	.+92     	; 0x13dc <__fixsfsi+0x94>
    1380:	2f 81       	ldd	r18, Y+7	; 0x07
    1382:	38 85       	ldd	r19, Y+8	; 0x08
    1384:	37 fd       	sbrc	r19, 7
    1386:	20 c0       	rjmp	.+64     	; 0x13c8 <__fixsfsi+0x80>
    1388:	6e 81       	ldd	r22, Y+6	; 0x06
    138a:	2f 31       	cpi	r18, 0x1F	; 31
    138c:	31 05       	cpc	r19, r1
    138e:	1c f0       	brlt	.+6      	; 0x1396 <__fixsfsi+0x4e>
    1390:	66 23       	and	r22, r22
    1392:	f9 f0       	breq	.+62     	; 0x13d2 <__fixsfsi+0x8a>
    1394:	23 c0       	rjmp	.+70     	; 0x13dc <__fixsfsi+0x94>
    1396:	8e e1       	ldi	r24, 0x1E	; 30
    1398:	90 e0       	ldi	r25, 0x00	; 0
    139a:	82 1b       	sub	r24, r18
    139c:	93 0b       	sbc	r25, r19
    139e:	29 85       	ldd	r18, Y+9	; 0x09
    13a0:	3a 85       	ldd	r19, Y+10	; 0x0a
    13a2:	4b 85       	ldd	r20, Y+11	; 0x0b
    13a4:	5c 85       	ldd	r21, Y+12	; 0x0c
    13a6:	04 c0       	rjmp	.+8      	; 0x13b0 <__fixsfsi+0x68>
    13a8:	56 95       	lsr	r21
    13aa:	47 95       	ror	r20
    13ac:	37 95       	ror	r19
    13ae:	27 95       	ror	r18
    13b0:	8a 95       	dec	r24
    13b2:	d2 f7       	brpl	.-12     	; 0x13a8 <__fixsfsi+0x60>
    13b4:	66 23       	and	r22, r22
    13b6:	b1 f0       	breq	.+44     	; 0x13e4 <__fixsfsi+0x9c>
    13b8:	50 95       	com	r21
    13ba:	40 95       	com	r20
    13bc:	30 95       	com	r19
    13be:	21 95       	neg	r18
    13c0:	3f 4f       	sbci	r19, 0xFF	; 255
    13c2:	4f 4f       	sbci	r20, 0xFF	; 255
    13c4:	5f 4f       	sbci	r21, 0xFF	; 255
    13c6:	0e c0       	rjmp	.+28     	; 0x13e4 <__fixsfsi+0x9c>
    13c8:	20 e0       	ldi	r18, 0x00	; 0
    13ca:	30 e0       	ldi	r19, 0x00	; 0
    13cc:	40 e0       	ldi	r20, 0x00	; 0
    13ce:	50 e0       	ldi	r21, 0x00	; 0
    13d0:	09 c0       	rjmp	.+18     	; 0x13e4 <__fixsfsi+0x9c>
    13d2:	2f ef       	ldi	r18, 0xFF	; 255
    13d4:	3f ef       	ldi	r19, 0xFF	; 255
    13d6:	4f ef       	ldi	r20, 0xFF	; 255
    13d8:	5f e7       	ldi	r21, 0x7F	; 127
    13da:	04 c0       	rjmp	.+8      	; 0x13e4 <__fixsfsi+0x9c>
    13dc:	20 e0       	ldi	r18, 0x00	; 0
    13de:	30 e0       	ldi	r19, 0x00	; 0
    13e0:	40 e0       	ldi	r20, 0x00	; 0
    13e2:	50 e8       	ldi	r21, 0x80	; 128
    13e4:	b9 01       	movw	r22, r18
    13e6:	ca 01       	movw	r24, r20
    13e8:	2c 96       	adiw	r28, 0x0c	; 12
    13ea:	e2 e0       	ldi	r30, 0x02	; 2
    13ec:	0c 94 92 0c 	jmp	0x1924	; 0x1924 <__epilogue_restores__+0x20>

000013f0 <__floatunsisf>:
    13f0:	a8 e0       	ldi	r26, 0x08	; 8
    13f2:	b0 e0       	ldi	r27, 0x00	; 0
    13f4:	ee ef       	ldi	r30, 0xFE	; 254
    13f6:	f9 e0       	ldi	r31, 0x09	; 9
    13f8:	0c 94 6e 0c 	jmp	0x18dc	; 0x18dc <__prologue_saves__+0x10>
    13fc:	7b 01       	movw	r14, r22
    13fe:	8c 01       	movw	r16, r24
    1400:	61 15       	cp	r22, r1
    1402:	71 05       	cpc	r23, r1
    1404:	81 05       	cpc	r24, r1
    1406:	91 05       	cpc	r25, r1
    1408:	19 f4       	brne	.+6      	; 0x1410 <__floatunsisf+0x20>
    140a:	82 e0       	ldi	r24, 0x02	; 2
    140c:	89 83       	std	Y+1, r24	; 0x01
    140e:	60 c0       	rjmp	.+192    	; 0x14d0 <__floatunsisf+0xe0>
    1410:	83 e0       	ldi	r24, 0x03	; 3
    1412:	89 83       	std	Y+1, r24	; 0x01
    1414:	8e e1       	ldi	r24, 0x1E	; 30
    1416:	c8 2e       	mov	r12, r24
    1418:	d1 2c       	mov	r13, r1
    141a:	dc 82       	std	Y+4, r13	; 0x04
    141c:	cb 82       	std	Y+3, r12	; 0x03
    141e:	ed 82       	std	Y+5, r14	; 0x05
    1420:	fe 82       	std	Y+6, r15	; 0x06
    1422:	0f 83       	std	Y+7, r16	; 0x07
    1424:	18 87       	std	Y+8, r17	; 0x08
    1426:	c8 01       	movw	r24, r16
    1428:	b7 01       	movw	r22, r14
    142a:	0e 94 71 0a 	call	0x14e2	; 0x14e2 <__clzsi2>
    142e:	fc 01       	movw	r30, r24
    1430:	31 97       	sbiw	r30, 0x01	; 1
    1432:	f7 ff       	sbrs	r31, 7
    1434:	3b c0       	rjmp	.+118    	; 0x14ac <__floatunsisf+0xbc>
    1436:	22 27       	eor	r18, r18
    1438:	33 27       	eor	r19, r19
    143a:	2e 1b       	sub	r18, r30
    143c:	3f 0b       	sbc	r19, r31
    143e:	57 01       	movw	r10, r14
    1440:	68 01       	movw	r12, r16
    1442:	02 2e       	mov	r0, r18
    1444:	04 c0       	rjmp	.+8      	; 0x144e <__floatunsisf+0x5e>
    1446:	d6 94       	lsr	r13
    1448:	c7 94       	ror	r12
    144a:	b7 94       	ror	r11
    144c:	a7 94       	ror	r10
    144e:	0a 94       	dec	r0
    1450:	d2 f7       	brpl	.-12     	; 0x1446 <__floatunsisf+0x56>
    1452:	40 e0       	ldi	r20, 0x00	; 0
    1454:	50 e0       	ldi	r21, 0x00	; 0
    1456:	60 e0       	ldi	r22, 0x00	; 0
    1458:	70 e0       	ldi	r23, 0x00	; 0
    145a:	81 e0       	ldi	r24, 0x01	; 1
    145c:	90 e0       	ldi	r25, 0x00	; 0
    145e:	a0 e0       	ldi	r26, 0x00	; 0
    1460:	b0 e0       	ldi	r27, 0x00	; 0
    1462:	04 c0       	rjmp	.+8      	; 0x146c <__floatunsisf+0x7c>
    1464:	88 0f       	add	r24, r24
    1466:	99 1f       	adc	r25, r25
    1468:	aa 1f       	adc	r26, r26
    146a:	bb 1f       	adc	r27, r27
    146c:	2a 95       	dec	r18
    146e:	d2 f7       	brpl	.-12     	; 0x1464 <__floatunsisf+0x74>
    1470:	01 97       	sbiw	r24, 0x01	; 1
    1472:	a1 09       	sbc	r26, r1
    1474:	b1 09       	sbc	r27, r1
    1476:	8e 21       	and	r24, r14
    1478:	9f 21       	and	r25, r15
    147a:	a0 23       	and	r26, r16
    147c:	b1 23       	and	r27, r17
    147e:	00 97       	sbiw	r24, 0x00	; 0
    1480:	a1 05       	cpc	r26, r1
    1482:	b1 05       	cpc	r27, r1
    1484:	21 f0       	breq	.+8      	; 0x148e <__floatunsisf+0x9e>
    1486:	41 e0       	ldi	r20, 0x01	; 1
    1488:	50 e0       	ldi	r21, 0x00	; 0
    148a:	60 e0       	ldi	r22, 0x00	; 0
    148c:	70 e0       	ldi	r23, 0x00	; 0
    148e:	4a 29       	or	r20, r10
    1490:	5b 29       	or	r21, r11
    1492:	6c 29       	or	r22, r12
    1494:	7d 29       	or	r23, r13
    1496:	4d 83       	std	Y+5, r20	; 0x05
    1498:	5e 83       	std	Y+6, r21	; 0x06
    149a:	6f 83       	std	Y+7, r22	; 0x07
    149c:	78 87       	std	Y+8, r23	; 0x08
    149e:	8e e1       	ldi	r24, 0x1E	; 30
    14a0:	90 e0       	ldi	r25, 0x00	; 0
    14a2:	8e 1b       	sub	r24, r30
    14a4:	9f 0b       	sbc	r25, r31
    14a6:	9c 83       	std	Y+4, r25	; 0x04
    14a8:	8b 83       	std	Y+3, r24	; 0x03
    14aa:	12 c0       	rjmp	.+36     	; 0x14d0 <__floatunsisf+0xe0>
    14ac:	30 97       	sbiw	r30, 0x00	; 0
    14ae:	81 f0       	breq	.+32     	; 0x14d0 <__floatunsisf+0xe0>
    14b0:	0e 2e       	mov	r0, r30
    14b2:	04 c0       	rjmp	.+8      	; 0x14bc <__floatunsisf+0xcc>
    14b4:	ee 0c       	add	r14, r14
    14b6:	ff 1c       	adc	r15, r15
    14b8:	00 1f       	adc	r16, r16
    14ba:	11 1f       	adc	r17, r17
    14bc:	0a 94       	dec	r0
    14be:	d2 f7       	brpl	.-12     	; 0x14b4 <__floatunsisf+0xc4>
    14c0:	ed 82       	std	Y+5, r14	; 0x05
    14c2:	fe 82       	std	Y+6, r15	; 0x06
    14c4:	0f 83       	std	Y+7, r16	; 0x07
    14c6:	18 87       	std	Y+8, r17	; 0x08
    14c8:	ce 1a       	sub	r12, r30
    14ca:	df 0a       	sbc	r13, r31
    14cc:	dc 82       	std	Y+4, r13	; 0x04
    14ce:	cb 82       	std	Y+3, r12	; 0x03
    14d0:	1a 82       	std	Y+2, r1	; 0x02
    14d2:	ce 01       	movw	r24, r28
    14d4:	01 96       	adiw	r24, 0x01	; 1
    14d6:	0e 94 c0 0a 	call	0x1580	; 0x1580 <__pack_f>
    14da:	28 96       	adiw	r28, 0x08	; 8
    14dc:	ea e0       	ldi	r30, 0x0A	; 10
    14de:	0c 94 8a 0c 	jmp	0x1914	; 0x1914 <__epilogue_restores__+0x10>

000014e2 <__clzsi2>:
    14e2:	ef 92       	push	r14
    14e4:	ff 92       	push	r15
    14e6:	0f 93       	push	r16
    14e8:	1f 93       	push	r17
    14ea:	7b 01       	movw	r14, r22
    14ec:	8c 01       	movw	r16, r24
    14ee:	80 e0       	ldi	r24, 0x00	; 0
    14f0:	e8 16       	cp	r14, r24
    14f2:	80 e0       	ldi	r24, 0x00	; 0
    14f4:	f8 06       	cpc	r15, r24
    14f6:	81 e0       	ldi	r24, 0x01	; 1
    14f8:	08 07       	cpc	r16, r24
    14fa:	80 e0       	ldi	r24, 0x00	; 0
    14fc:	18 07       	cpc	r17, r24
    14fe:	88 f4       	brcc	.+34     	; 0x1522 <__clzsi2+0x40>
    1500:	8f ef       	ldi	r24, 0xFF	; 255
    1502:	e8 16       	cp	r14, r24
    1504:	f1 04       	cpc	r15, r1
    1506:	01 05       	cpc	r16, r1
    1508:	11 05       	cpc	r17, r1
    150a:	31 f0       	breq	.+12     	; 0x1518 <__clzsi2+0x36>
    150c:	28 f0       	brcs	.+10     	; 0x1518 <__clzsi2+0x36>
    150e:	88 e0       	ldi	r24, 0x08	; 8
    1510:	90 e0       	ldi	r25, 0x00	; 0
    1512:	a0 e0       	ldi	r26, 0x00	; 0
    1514:	b0 e0       	ldi	r27, 0x00	; 0
    1516:	17 c0       	rjmp	.+46     	; 0x1546 <__clzsi2+0x64>
    1518:	80 e0       	ldi	r24, 0x00	; 0
    151a:	90 e0       	ldi	r25, 0x00	; 0
    151c:	a0 e0       	ldi	r26, 0x00	; 0
    151e:	b0 e0       	ldi	r27, 0x00	; 0
    1520:	12 c0       	rjmp	.+36     	; 0x1546 <__clzsi2+0x64>
    1522:	80 e0       	ldi	r24, 0x00	; 0
    1524:	e8 16       	cp	r14, r24
    1526:	80 e0       	ldi	r24, 0x00	; 0
    1528:	f8 06       	cpc	r15, r24
    152a:	80 e0       	ldi	r24, 0x00	; 0
    152c:	08 07       	cpc	r16, r24
    152e:	81 e0       	ldi	r24, 0x01	; 1
    1530:	18 07       	cpc	r17, r24
    1532:	28 f0       	brcs	.+10     	; 0x153e <__clzsi2+0x5c>
    1534:	88 e1       	ldi	r24, 0x18	; 24
    1536:	90 e0       	ldi	r25, 0x00	; 0
    1538:	a0 e0       	ldi	r26, 0x00	; 0
    153a:	b0 e0       	ldi	r27, 0x00	; 0
    153c:	04 c0       	rjmp	.+8      	; 0x1546 <__clzsi2+0x64>
    153e:	80 e1       	ldi	r24, 0x10	; 16
    1540:	90 e0       	ldi	r25, 0x00	; 0
    1542:	a0 e0       	ldi	r26, 0x00	; 0
    1544:	b0 e0       	ldi	r27, 0x00	; 0
    1546:	20 e2       	ldi	r18, 0x20	; 32
    1548:	30 e0       	ldi	r19, 0x00	; 0
    154a:	40 e0       	ldi	r20, 0x00	; 0
    154c:	50 e0       	ldi	r21, 0x00	; 0
    154e:	28 1b       	sub	r18, r24
    1550:	39 0b       	sbc	r19, r25
    1552:	4a 0b       	sbc	r20, r26
    1554:	5b 0b       	sbc	r21, r27
    1556:	04 c0       	rjmp	.+8      	; 0x1560 <__clzsi2+0x7e>
    1558:	16 95       	lsr	r17
    155a:	07 95       	ror	r16
    155c:	f7 94       	ror	r15
    155e:	e7 94       	ror	r14
    1560:	8a 95       	dec	r24
    1562:	d2 f7       	brpl	.-12     	; 0x1558 <__clzsi2+0x76>
    1564:	f7 01       	movw	r30, r14
    1566:	e8 5f       	subi	r30, 0xF8	; 248
    1568:	fd 4f       	sbci	r31, 0xFD	; 253
    156a:	80 81       	ld	r24, Z
    156c:	28 1b       	sub	r18, r24
    156e:	31 09       	sbc	r19, r1
    1570:	41 09       	sbc	r20, r1
    1572:	51 09       	sbc	r21, r1
    1574:	c9 01       	movw	r24, r18
    1576:	1f 91       	pop	r17
    1578:	0f 91       	pop	r16
    157a:	ff 90       	pop	r15
    157c:	ef 90       	pop	r14
    157e:	08 95       	ret

00001580 <__pack_f>:
    1580:	df 92       	push	r13
    1582:	ef 92       	push	r14
    1584:	ff 92       	push	r15
    1586:	0f 93       	push	r16
    1588:	1f 93       	push	r17
    158a:	fc 01       	movw	r30, r24
    158c:	e4 80       	ldd	r14, Z+4	; 0x04
    158e:	f5 80       	ldd	r15, Z+5	; 0x05
    1590:	06 81       	ldd	r16, Z+6	; 0x06
    1592:	17 81       	ldd	r17, Z+7	; 0x07
    1594:	d1 80       	ldd	r13, Z+1	; 0x01
    1596:	80 81       	ld	r24, Z
    1598:	82 30       	cpi	r24, 0x02	; 2
    159a:	48 f4       	brcc	.+18     	; 0x15ae <__pack_f+0x2e>
    159c:	80 e0       	ldi	r24, 0x00	; 0
    159e:	90 e0       	ldi	r25, 0x00	; 0
    15a0:	a0 e1       	ldi	r26, 0x10	; 16
    15a2:	b0 e0       	ldi	r27, 0x00	; 0
    15a4:	e8 2a       	or	r14, r24
    15a6:	f9 2a       	or	r15, r25
    15a8:	0a 2b       	or	r16, r26
    15aa:	1b 2b       	or	r17, r27
    15ac:	a5 c0       	rjmp	.+330    	; 0x16f8 <__pack_f+0x178>
    15ae:	84 30       	cpi	r24, 0x04	; 4
    15b0:	09 f4       	brne	.+2      	; 0x15b4 <__pack_f+0x34>
    15b2:	9f c0       	rjmp	.+318    	; 0x16f2 <__pack_f+0x172>
    15b4:	82 30       	cpi	r24, 0x02	; 2
    15b6:	21 f4       	brne	.+8      	; 0x15c0 <__pack_f+0x40>
    15b8:	ee 24       	eor	r14, r14
    15ba:	ff 24       	eor	r15, r15
    15bc:	87 01       	movw	r16, r14
    15be:	05 c0       	rjmp	.+10     	; 0x15ca <__pack_f+0x4a>
    15c0:	e1 14       	cp	r14, r1
    15c2:	f1 04       	cpc	r15, r1
    15c4:	01 05       	cpc	r16, r1
    15c6:	11 05       	cpc	r17, r1
    15c8:	19 f4       	brne	.+6      	; 0x15d0 <__pack_f+0x50>
    15ca:	e0 e0       	ldi	r30, 0x00	; 0
    15cc:	f0 e0       	ldi	r31, 0x00	; 0
    15ce:	96 c0       	rjmp	.+300    	; 0x16fc <__pack_f+0x17c>
    15d0:	62 81       	ldd	r22, Z+2	; 0x02
    15d2:	73 81       	ldd	r23, Z+3	; 0x03
    15d4:	9f ef       	ldi	r25, 0xFF	; 255
    15d6:	62 38       	cpi	r22, 0x82	; 130
    15d8:	79 07       	cpc	r23, r25
    15da:	0c f0       	brlt	.+2      	; 0x15de <__pack_f+0x5e>
    15dc:	5b c0       	rjmp	.+182    	; 0x1694 <__pack_f+0x114>
    15de:	22 e8       	ldi	r18, 0x82	; 130
    15e0:	3f ef       	ldi	r19, 0xFF	; 255
    15e2:	26 1b       	sub	r18, r22
    15e4:	37 0b       	sbc	r19, r23
    15e6:	2a 31       	cpi	r18, 0x1A	; 26
    15e8:	31 05       	cpc	r19, r1
    15ea:	2c f0       	brlt	.+10     	; 0x15f6 <__pack_f+0x76>
    15ec:	20 e0       	ldi	r18, 0x00	; 0
    15ee:	30 e0       	ldi	r19, 0x00	; 0
    15f0:	40 e0       	ldi	r20, 0x00	; 0
    15f2:	50 e0       	ldi	r21, 0x00	; 0
    15f4:	2a c0       	rjmp	.+84     	; 0x164a <__pack_f+0xca>
    15f6:	b8 01       	movw	r22, r16
    15f8:	a7 01       	movw	r20, r14
    15fa:	02 2e       	mov	r0, r18
    15fc:	04 c0       	rjmp	.+8      	; 0x1606 <__pack_f+0x86>
    15fe:	76 95       	lsr	r23
    1600:	67 95       	ror	r22
    1602:	57 95       	ror	r21
    1604:	47 95       	ror	r20
    1606:	0a 94       	dec	r0
    1608:	d2 f7       	brpl	.-12     	; 0x15fe <__pack_f+0x7e>
    160a:	81 e0       	ldi	r24, 0x01	; 1
    160c:	90 e0       	ldi	r25, 0x00	; 0
    160e:	a0 e0       	ldi	r26, 0x00	; 0
    1610:	b0 e0       	ldi	r27, 0x00	; 0
    1612:	04 c0       	rjmp	.+8      	; 0x161c <__pack_f+0x9c>
    1614:	88 0f       	add	r24, r24
    1616:	99 1f       	adc	r25, r25
    1618:	aa 1f       	adc	r26, r26
    161a:	bb 1f       	adc	r27, r27
    161c:	2a 95       	dec	r18
    161e:	d2 f7       	brpl	.-12     	; 0x1614 <__pack_f+0x94>
    1620:	01 97       	sbiw	r24, 0x01	; 1
    1622:	a1 09       	sbc	r26, r1
    1624:	b1 09       	sbc	r27, r1
    1626:	8e 21       	and	r24, r14
    1628:	9f 21       	and	r25, r15
    162a:	a0 23       	and	r26, r16
    162c:	b1 23       	and	r27, r17
    162e:	00 97       	sbiw	r24, 0x00	; 0
    1630:	a1 05       	cpc	r26, r1
    1632:	b1 05       	cpc	r27, r1
    1634:	21 f0       	breq	.+8      	; 0x163e <__pack_f+0xbe>
    1636:	81 e0       	ldi	r24, 0x01	; 1
    1638:	90 e0       	ldi	r25, 0x00	; 0
    163a:	a0 e0       	ldi	r26, 0x00	; 0
    163c:	b0 e0       	ldi	r27, 0x00	; 0
    163e:	9a 01       	movw	r18, r20
    1640:	ab 01       	movw	r20, r22
    1642:	28 2b       	or	r18, r24
    1644:	39 2b       	or	r19, r25
    1646:	4a 2b       	or	r20, r26
    1648:	5b 2b       	or	r21, r27
    164a:	da 01       	movw	r26, r20
    164c:	c9 01       	movw	r24, r18
    164e:	8f 77       	andi	r24, 0x7F	; 127
    1650:	90 70       	andi	r25, 0x00	; 0
    1652:	a0 70       	andi	r26, 0x00	; 0
    1654:	b0 70       	andi	r27, 0x00	; 0
    1656:	80 34       	cpi	r24, 0x40	; 64
    1658:	91 05       	cpc	r25, r1
    165a:	a1 05       	cpc	r26, r1
    165c:	b1 05       	cpc	r27, r1
    165e:	39 f4       	brne	.+14     	; 0x166e <__pack_f+0xee>
    1660:	27 ff       	sbrs	r18, 7
    1662:	09 c0       	rjmp	.+18     	; 0x1676 <__pack_f+0xf6>
    1664:	20 5c       	subi	r18, 0xC0	; 192
    1666:	3f 4f       	sbci	r19, 0xFF	; 255
    1668:	4f 4f       	sbci	r20, 0xFF	; 255
    166a:	5f 4f       	sbci	r21, 0xFF	; 255
    166c:	04 c0       	rjmp	.+8      	; 0x1676 <__pack_f+0xf6>
    166e:	21 5c       	subi	r18, 0xC1	; 193
    1670:	3f 4f       	sbci	r19, 0xFF	; 255
    1672:	4f 4f       	sbci	r20, 0xFF	; 255
    1674:	5f 4f       	sbci	r21, 0xFF	; 255
    1676:	e0 e0       	ldi	r30, 0x00	; 0
    1678:	f0 e0       	ldi	r31, 0x00	; 0
    167a:	20 30       	cpi	r18, 0x00	; 0
    167c:	a0 e0       	ldi	r26, 0x00	; 0
    167e:	3a 07       	cpc	r19, r26
    1680:	a0 e0       	ldi	r26, 0x00	; 0
    1682:	4a 07       	cpc	r20, r26
    1684:	a0 e4       	ldi	r26, 0x40	; 64
    1686:	5a 07       	cpc	r21, r26
    1688:	10 f0       	brcs	.+4      	; 0x168e <__pack_f+0x10e>
    168a:	e1 e0       	ldi	r30, 0x01	; 1
    168c:	f0 e0       	ldi	r31, 0x00	; 0
    168e:	79 01       	movw	r14, r18
    1690:	8a 01       	movw	r16, r20
    1692:	27 c0       	rjmp	.+78     	; 0x16e2 <__pack_f+0x162>
    1694:	60 38       	cpi	r22, 0x80	; 128
    1696:	71 05       	cpc	r23, r1
    1698:	64 f5       	brge	.+88     	; 0x16f2 <__pack_f+0x172>
    169a:	fb 01       	movw	r30, r22
    169c:	e1 58       	subi	r30, 0x81	; 129
    169e:	ff 4f       	sbci	r31, 0xFF	; 255
    16a0:	d8 01       	movw	r26, r16
    16a2:	c7 01       	movw	r24, r14
    16a4:	8f 77       	andi	r24, 0x7F	; 127
    16a6:	90 70       	andi	r25, 0x00	; 0
    16a8:	a0 70       	andi	r26, 0x00	; 0
    16aa:	b0 70       	andi	r27, 0x00	; 0
    16ac:	80 34       	cpi	r24, 0x40	; 64
    16ae:	91 05       	cpc	r25, r1
    16b0:	a1 05       	cpc	r26, r1
    16b2:	b1 05       	cpc	r27, r1
    16b4:	39 f4       	brne	.+14     	; 0x16c4 <__pack_f+0x144>
    16b6:	e7 fe       	sbrs	r14, 7
    16b8:	0d c0       	rjmp	.+26     	; 0x16d4 <__pack_f+0x154>
    16ba:	80 e4       	ldi	r24, 0x40	; 64
    16bc:	90 e0       	ldi	r25, 0x00	; 0
    16be:	a0 e0       	ldi	r26, 0x00	; 0
    16c0:	b0 e0       	ldi	r27, 0x00	; 0
    16c2:	04 c0       	rjmp	.+8      	; 0x16cc <__pack_f+0x14c>
    16c4:	8f e3       	ldi	r24, 0x3F	; 63
    16c6:	90 e0       	ldi	r25, 0x00	; 0
    16c8:	a0 e0       	ldi	r26, 0x00	; 0
    16ca:	b0 e0       	ldi	r27, 0x00	; 0
    16cc:	e8 0e       	add	r14, r24
    16ce:	f9 1e       	adc	r15, r25
    16d0:	0a 1f       	adc	r16, r26
    16d2:	1b 1f       	adc	r17, r27
    16d4:	17 ff       	sbrs	r17, 7
    16d6:	05 c0       	rjmp	.+10     	; 0x16e2 <__pack_f+0x162>
    16d8:	16 95       	lsr	r17
    16da:	07 95       	ror	r16
    16dc:	f7 94       	ror	r15
    16de:	e7 94       	ror	r14
    16e0:	31 96       	adiw	r30, 0x01	; 1
    16e2:	87 e0       	ldi	r24, 0x07	; 7
    16e4:	16 95       	lsr	r17
    16e6:	07 95       	ror	r16
    16e8:	f7 94       	ror	r15
    16ea:	e7 94       	ror	r14
    16ec:	8a 95       	dec	r24
    16ee:	d1 f7       	brne	.-12     	; 0x16e4 <__pack_f+0x164>
    16f0:	05 c0       	rjmp	.+10     	; 0x16fc <__pack_f+0x17c>
    16f2:	ee 24       	eor	r14, r14
    16f4:	ff 24       	eor	r15, r15
    16f6:	87 01       	movw	r16, r14
    16f8:	ef ef       	ldi	r30, 0xFF	; 255
    16fa:	f0 e0       	ldi	r31, 0x00	; 0
    16fc:	6e 2f       	mov	r22, r30
    16fe:	67 95       	ror	r22
    1700:	66 27       	eor	r22, r22
    1702:	67 95       	ror	r22
    1704:	90 2f       	mov	r25, r16
    1706:	9f 77       	andi	r25, 0x7F	; 127
    1708:	d7 94       	ror	r13
    170a:	dd 24       	eor	r13, r13
    170c:	d7 94       	ror	r13
    170e:	8e 2f       	mov	r24, r30
    1710:	86 95       	lsr	r24
    1712:	49 2f       	mov	r20, r25
    1714:	46 2b       	or	r20, r22
    1716:	58 2f       	mov	r21, r24
    1718:	5d 29       	or	r21, r13
    171a:	b7 01       	movw	r22, r14
    171c:	ca 01       	movw	r24, r20
    171e:	1f 91       	pop	r17
    1720:	0f 91       	pop	r16
    1722:	ff 90       	pop	r15
    1724:	ef 90       	pop	r14
    1726:	df 90       	pop	r13
    1728:	08 95       	ret

0000172a <__unpack_f>:
    172a:	fc 01       	movw	r30, r24
    172c:	db 01       	movw	r26, r22
    172e:	40 81       	ld	r20, Z
    1730:	51 81       	ldd	r21, Z+1	; 0x01
    1732:	22 81       	ldd	r18, Z+2	; 0x02
    1734:	62 2f       	mov	r22, r18
    1736:	6f 77       	andi	r22, 0x7F	; 127
    1738:	70 e0       	ldi	r23, 0x00	; 0
    173a:	22 1f       	adc	r18, r18
    173c:	22 27       	eor	r18, r18
    173e:	22 1f       	adc	r18, r18
    1740:	93 81       	ldd	r25, Z+3	; 0x03
    1742:	89 2f       	mov	r24, r25
    1744:	88 0f       	add	r24, r24
    1746:	82 2b       	or	r24, r18
    1748:	28 2f       	mov	r18, r24
    174a:	30 e0       	ldi	r19, 0x00	; 0
    174c:	99 1f       	adc	r25, r25
    174e:	99 27       	eor	r25, r25
    1750:	99 1f       	adc	r25, r25
    1752:	11 96       	adiw	r26, 0x01	; 1
    1754:	9c 93       	st	X, r25
    1756:	11 97       	sbiw	r26, 0x01	; 1
    1758:	21 15       	cp	r18, r1
    175a:	31 05       	cpc	r19, r1
    175c:	a9 f5       	brne	.+106    	; 0x17c8 <__unpack_f+0x9e>
    175e:	41 15       	cp	r20, r1
    1760:	51 05       	cpc	r21, r1
    1762:	61 05       	cpc	r22, r1
    1764:	71 05       	cpc	r23, r1
    1766:	11 f4       	brne	.+4      	; 0x176c <__unpack_f+0x42>
    1768:	82 e0       	ldi	r24, 0x02	; 2
    176a:	37 c0       	rjmp	.+110    	; 0x17da <__unpack_f+0xb0>
    176c:	82 e8       	ldi	r24, 0x82	; 130
    176e:	9f ef       	ldi	r25, 0xFF	; 255
    1770:	13 96       	adiw	r26, 0x03	; 3
    1772:	9c 93       	st	X, r25
    1774:	8e 93       	st	-X, r24
    1776:	12 97       	sbiw	r26, 0x02	; 2
    1778:	9a 01       	movw	r18, r20
    177a:	ab 01       	movw	r20, r22
    177c:	67 e0       	ldi	r22, 0x07	; 7
    177e:	22 0f       	add	r18, r18
    1780:	33 1f       	adc	r19, r19
    1782:	44 1f       	adc	r20, r20
    1784:	55 1f       	adc	r21, r21
    1786:	6a 95       	dec	r22
    1788:	d1 f7       	brne	.-12     	; 0x177e <__unpack_f+0x54>
    178a:	83 e0       	ldi	r24, 0x03	; 3
    178c:	8c 93       	st	X, r24
    178e:	0d c0       	rjmp	.+26     	; 0x17aa <__unpack_f+0x80>
    1790:	22 0f       	add	r18, r18
    1792:	33 1f       	adc	r19, r19
    1794:	44 1f       	adc	r20, r20
    1796:	55 1f       	adc	r21, r21
    1798:	12 96       	adiw	r26, 0x02	; 2
    179a:	8d 91       	ld	r24, X+
    179c:	9c 91       	ld	r25, X
    179e:	13 97       	sbiw	r26, 0x03	; 3
    17a0:	01 97       	sbiw	r24, 0x01	; 1
    17a2:	13 96       	adiw	r26, 0x03	; 3
    17a4:	9c 93       	st	X, r25
    17a6:	8e 93       	st	-X, r24
    17a8:	12 97       	sbiw	r26, 0x02	; 2
    17aa:	20 30       	cpi	r18, 0x00	; 0
    17ac:	80 e0       	ldi	r24, 0x00	; 0
    17ae:	38 07       	cpc	r19, r24
    17b0:	80 e0       	ldi	r24, 0x00	; 0
    17b2:	48 07       	cpc	r20, r24
    17b4:	80 e4       	ldi	r24, 0x40	; 64
    17b6:	58 07       	cpc	r21, r24
    17b8:	58 f3       	brcs	.-42     	; 0x1790 <__unpack_f+0x66>
    17ba:	14 96       	adiw	r26, 0x04	; 4
    17bc:	2d 93       	st	X+, r18
    17be:	3d 93       	st	X+, r19
    17c0:	4d 93       	st	X+, r20
    17c2:	5c 93       	st	X, r21
    17c4:	17 97       	sbiw	r26, 0x07	; 7
    17c6:	08 95       	ret
    17c8:	2f 3f       	cpi	r18, 0xFF	; 255
    17ca:	31 05       	cpc	r19, r1
    17cc:	79 f4       	brne	.+30     	; 0x17ec <__unpack_f+0xc2>
    17ce:	41 15       	cp	r20, r1
    17d0:	51 05       	cpc	r21, r1
    17d2:	61 05       	cpc	r22, r1
    17d4:	71 05       	cpc	r23, r1
    17d6:	19 f4       	brne	.+6      	; 0x17de <__unpack_f+0xb4>
    17d8:	84 e0       	ldi	r24, 0x04	; 4
    17da:	8c 93       	st	X, r24
    17dc:	08 95       	ret
    17de:	64 ff       	sbrs	r22, 4
    17e0:	03 c0       	rjmp	.+6      	; 0x17e8 <__unpack_f+0xbe>
    17e2:	81 e0       	ldi	r24, 0x01	; 1
    17e4:	8c 93       	st	X, r24
    17e6:	12 c0       	rjmp	.+36     	; 0x180c <__unpack_f+0xe2>
    17e8:	1c 92       	st	X, r1
    17ea:	10 c0       	rjmp	.+32     	; 0x180c <__unpack_f+0xe2>
    17ec:	2f 57       	subi	r18, 0x7F	; 127
    17ee:	30 40       	sbci	r19, 0x00	; 0
    17f0:	13 96       	adiw	r26, 0x03	; 3
    17f2:	3c 93       	st	X, r19
    17f4:	2e 93       	st	-X, r18
    17f6:	12 97       	sbiw	r26, 0x02	; 2
    17f8:	83 e0       	ldi	r24, 0x03	; 3
    17fa:	8c 93       	st	X, r24
    17fc:	87 e0       	ldi	r24, 0x07	; 7
    17fe:	44 0f       	add	r20, r20
    1800:	55 1f       	adc	r21, r21
    1802:	66 1f       	adc	r22, r22
    1804:	77 1f       	adc	r23, r23
    1806:	8a 95       	dec	r24
    1808:	d1 f7       	brne	.-12     	; 0x17fe <__unpack_f+0xd4>
    180a:	70 64       	ori	r23, 0x40	; 64
    180c:	14 96       	adiw	r26, 0x04	; 4
    180e:	4d 93       	st	X+, r20
    1810:	5d 93       	st	X+, r21
    1812:	6d 93       	st	X+, r22
    1814:	7c 93       	st	X, r23
    1816:	17 97       	sbiw	r26, 0x07	; 7
    1818:	08 95       	ret

0000181a <__fpcmp_parts_f>:
    181a:	1f 93       	push	r17
    181c:	dc 01       	movw	r26, r24
    181e:	fb 01       	movw	r30, r22
    1820:	9c 91       	ld	r25, X
    1822:	92 30       	cpi	r25, 0x02	; 2
    1824:	08 f4       	brcc	.+2      	; 0x1828 <__fpcmp_parts_f+0xe>
    1826:	47 c0       	rjmp	.+142    	; 0x18b6 <__fpcmp_parts_f+0x9c>
    1828:	80 81       	ld	r24, Z
    182a:	82 30       	cpi	r24, 0x02	; 2
    182c:	08 f4       	brcc	.+2      	; 0x1830 <__fpcmp_parts_f+0x16>
    182e:	43 c0       	rjmp	.+134    	; 0x18b6 <__fpcmp_parts_f+0x9c>
    1830:	94 30       	cpi	r25, 0x04	; 4
    1832:	51 f4       	brne	.+20     	; 0x1848 <__fpcmp_parts_f+0x2e>
    1834:	11 96       	adiw	r26, 0x01	; 1
    1836:	1c 91       	ld	r17, X
    1838:	84 30       	cpi	r24, 0x04	; 4
    183a:	99 f5       	brne	.+102    	; 0x18a2 <__fpcmp_parts_f+0x88>
    183c:	81 81       	ldd	r24, Z+1	; 0x01
    183e:	68 2f       	mov	r22, r24
    1840:	70 e0       	ldi	r23, 0x00	; 0
    1842:	61 1b       	sub	r22, r17
    1844:	71 09       	sbc	r23, r1
    1846:	3f c0       	rjmp	.+126    	; 0x18c6 <__fpcmp_parts_f+0xac>
    1848:	84 30       	cpi	r24, 0x04	; 4
    184a:	21 f0       	breq	.+8      	; 0x1854 <__fpcmp_parts_f+0x3a>
    184c:	92 30       	cpi	r25, 0x02	; 2
    184e:	31 f4       	brne	.+12     	; 0x185c <__fpcmp_parts_f+0x42>
    1850:	82 30       	cpi	r24, 0x02	; 2
    1852:	b9 f1       	breq	.+110    	; 0x18c2 <__fpcmp_parts_f+0xa8>
    1854:	81 81       	ldd	r24, Z+1	; 0x01
    1856:	88 23       	and	r24, r24
    1858:	89 f1       	breq	.+98     	; 0x18bc <__fpcmp_parts_f+0xa2>
    185a:	2d c0       	rjmp	.+90     	; 0x18b6 <__fpcmp_parts_f+0x9c>
    185c:	11 96       	adiw	r26, 0x01	; 1
    185e:	1c 91       	ld	r17, X
    1860:	11 97       	sbiw	r26, 0x01	; 1
    1862:	82 30       	cpi	r24, 0x02	; 2
    1864:	f1 f0       	breq	.+60     	; 0x18a2 <__fpcmp_parts_f+0x88>
    1866:	81 81       	ldd	r24, Z+1	; 0x01
    1868:	18 17       	cp	r17, r24
    186a:	d9 f4       	brne	.+54     	; 0x18a2 <__fpcmp_parts_f+0x88>
    186c:	12 96       	adiw	r26, 0x02	; 2
    186e:	2d 91       	ld	r18, X+
    1870:	3c 91       	ld	r19, X
    1872:	13 97       	sbiw	r26, 0x03	; 3
    1874:	82 81       	ldd	r24, Z+2	; 0x02
    1876:	93 81       	ldd	r25, Z+3	; 0x03
    1878:	82 17       	cp	r24, r18
    187a:	93 07       	cpc	r25, r19
    187c:	94 f0       	brlt	.+36     	; 0x18a2 <__fpcmp_parts_f+0x88>
    187e:	28 17       	cp	r18, r24
    1880:	39 07       	cpc	r19, r25
    1882:	bc f0       	brlt	.+46     	; 0x18b2 <__fpcmp_parts_f+0x98>
    1884:	14 96       	adiw	r26, 0x04	; 4
    1886:	8d 91       	ld	r24, X+
    1888:	9d 91       	ld	r25, X+
    188a:	0d 90       	ld	r0, X+
    188c:	bc 91       	ld	r27, X
    188e:	a0 2d       	mov	r26, r0
    1890:	24 81       	ldd	r18, Z+4	; 0x04
    1892:	35 81       	ldd	r19, Z+5	; 0x05
    1894:	46 81       	ldd	r20, Z+6	; 0x06
    1896:	57 81       	ldd	r21, Z+7	; 0x07
    1898:	28 17       	cp	r18, r24
    189a:	39 07       	cpc	r19, r25
    189c:	4a 07       	cpc	r20, r26
    189e:	5b 07       	cpc	r21, r27
    18a0:	18 f4       	brcc	.+6      	; 0x18a8 <__fpcmp_parts_f+0x8e>
    18a2:	11 23       	and	r17, r17
    18a4:	41 f0       	breq	.+16     	; 0x18b6 <__fpcmp_parts_f+0x9c>
    18a6:	0a c0       	rjmp	.+20     	; 0x18bc <__fpcmp_parts_f+0xa2>
    18a8:	82 17       	cp	r24, r18
    18aa:	93 07       	cpc	r25, r19
    18ac:	a4 07       	cpc	r26, r20
    18ae:	b5 07       	cpc	r27, r21
    18b0:	40 f4       	brcc	.+16     	; 0x18c2 <__fpcmp_parts_f+0xa8>
    18b2:	11 23       	and	r17, r17
    18b4:	19 f0       	breq	.+6      	; 0x18bc <__fpcmp_parts_f+0xa2>
    18b6:	61 e0       	ldi	r22, 0x01	; 1
    18b8:	70 e0       	ldi	r23, 0x00	; 0
    18ba:	05 c0       	rjmp	.+10     	; 0x18c6 <__fpcmp_parts_f+0xac>
    18bc:	6f ef       	ldi	r22, 0xFF	; 255
    18be:	7f ef       	ldi	r23, 0xFF	; 255
    18c0:	02 c0       	rjmp	.+4      	; 0x18c6 <__fpcmp_parts_f+0xac>
    18c2:	60 e0       	ldi	r22, 0x00	; 0
    18c4:	70 e0       	ldi	r23, 0x00	; 0
    18c6:	cb 01       	movw	r24, r22
    18c8:	1f 91       	pop	r17
    18ca:	08 95       	ret

000018cc <__prologue_saves__>:
    18cc:	2f 92       	push	r2
    18ce:	3f 92       	push	r3
    18d0:	4f 92       	push	r4
    18d2:	5f 92       	push	r5
    18d4:	6f 92       	push	r6
    18d6:	7f 92       	push	r7
    18d8:	8f 92       	push	r8
    18da:	9f 92       	push	r9
    18dc:	af 92       	push	r10
    18de:	bf 92       	push	r11
    18e0:	cf 92       	push	r12
    18e2:	df 92       	push	r13
    18e4:	ef 92       	push	r14
    18e6:	ff 92       	push	r15
    18e8:	0f 93       	push	r16
    18ea:	1f 93       	push	r17
    18ec:	cf 93       	push	r28
    18ee:	df 93       	push	r29
    18f0:	cd b7       	in	r28, 0x3d	; 61
    18f2:	de b7       	in	r29, 0x3e	; 62
    18f4:	ca 1b       	sub	r28, r26
    18f6:	db 0b       	sbc	r29, r27
    18f8:	0f b6       	in	r0, 0x3f	; 63
    18fa:	f8 94       	cli
    18fc:	de bf       	out	0x3e, r29	; 62
    18fe:	0f be       	out	0x3f, r0	; 63
    1900:	cd bf       	out	0x3d, r28	; 61
    1902:	19 94       	eijmp

00001904 <__epilogue_restores__>:
    1904:	2a 88       	ldd	r2, Y+18	; 0x12
    1906:	39 88       	ldd	r3, Y+17	; 0x11
    1908:	48 88       	ldd	r4, Y+16	; 0x10
    190a:	5f 84       	ldd	r5, Y+15	; 0x0f
    190c:	6e 84       	ldd	r6, Y+14	; 0x0e
    190e:	7d 84       	ldd	r7, Y+13	; 0x0d
    1910:	8c 84       	ldd	r8, Y+12	; 0x0c
    1912:	9b 84       	ldd	r9, Y+11	; 0x0b
    1914:	aa 84       	ldd	r10, Y+10	; 0x0a
    1916:	b9 84       	ldd	r11, Y+9	; 0x09
    1918:	c8 84       	ldd	r12, Y+8	; 0x08
    191a:	df 80       	ldd	r13, Y+7	; 0x07
    191c:	ee 80       	ldd	r14, Y+6	; 0x06
    191e:	fd 80       	ldd	r15, Y+5	; 0x05
    1920:	0c 81       	ldd	r16, Y+4	; 0x04
    1922:	1b 81       	ldd	r17, Y+3	; 0x03
    1924:	aa 81       	ldd	r26, Y+2	; 0x02
    1926:	b9 81       	ldd	r27, Y+1	; 0x01
    1928:	ce 0f       	add	r28, r30
    192a:	d1 1d       	adc	r29, r1
    192c:	0f b6       	in	r0, 0x3f	; 63
    192e:	f8 94       	cli
    1930:	de bf       	out	0x3e, r29	; 62
    1932:	0f be       	out	0x3f, r0	; 63
    1934:	cd bf       	out	0x3d, r28	; 61
    1936:	ed 01       	movw	r28, r26
    1938:	08 95       	ret

0000193a <_exit>:
    193a:	f8 94       	cli

0000193c <__stop_program>:
    193c:	ff cf       	rjmp	.-2      	; 0x193c <__stop_program>
