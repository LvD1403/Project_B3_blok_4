
bin\Debug\project_b3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000108  00800200  00001b70  00001c24  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001b70  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000018  00800308  00800308  00001d2c  2**0
                  ALLOC
  3 .fuse         00000003  00820000  00820000  00001d2c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .debug_aranges 00000220  00000000  00000000  00001d2f  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000461  00000000  00000000  00001f4f  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002a92  00000000  00000000  000023b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001649  00000000  00000000  00004e42  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001a09  00000000  00000000  0000648b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000320  00000000  00000000  00007e94  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004f0  00000000  00000000  000081b4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000996  00000000  00000000  000086a4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  0000903a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__ctors_end>
       4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
       8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
       c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      10:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      14:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      18:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      1c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      20:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      24:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      28:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      2c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      30:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      34:	0c 94 49 05 	jmp	0xa92	; 0xa92 <__vector_13>
      38:	0c 94 82 05 	jmp	0xb04	; 0xb04 <__vector_14>
      3c:	0c 94 10 05 	jmp	0xa20	; 0xa20 <__vector_15>
      40:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      44:	0c 94 a4 03 	jmp	0x748	; 0x748 <__vector_17>
      48:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      4c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      50:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      54:	0c 94 0b 06 	jmp	0xc16	; 0xc16 <__vector_21>
      58:	0c 94 32 06 	jmp	0xc64	; 0xc64 <__vector_22>
      5c:	0c 94 bb 05 	jmp	0xb76	; 0xb76 <__vector_23>
      60:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      64:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      68:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      6c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      70:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      74:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      78:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      7c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      80:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      84:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      88:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      8c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      90:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      94:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      98:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      9c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      a0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      a4:	0c 94 cf 03 	jmp	0x79e	; 0x79e <__vector_41>
      a8:	0c 94 d0 04 	jmp	0x9a0	; 0x9a0 <__vector_42>
      ac:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      b0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      b4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      b8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      bc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      c0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      c4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      c8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      cc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      d0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      d4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      d8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      dc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      e0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	13 e0       	ldi	r17, 0x03	; 3
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b2 e0       	ldi	r27, 0x02	; 2
      fa:	e0 e7       	ldi	r30, 0x70	; 112
      fc:	fb e1       	ldi	r31, 0x1B	; 27
      fe:	00 e0       	ldi	r16, 0x00	; 0
     100:	0b bf       	out	0x3b, r16	; 59
     102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
     104:	07 90       	elpm	r0, Z+
     106:	0d 92       	st	X+, r0
     108:	a8 30       	cpi	r26, 0x08	; 8
     10a:	b1 07       	cpc	r27, r17
     10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
     10e:	13 e0       	ldi	r17, 0x03	; 3
     110:	a8 e0       	ldi	r26, 0x08	; 8
     112:	b3 e0       	ldi	r27, 0x03	; 3
     114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
     116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
     118:	a0 32       	cpi	r26, 0x20	; 32
     11a:	b1 07       	cpc	r27, r17
     11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
     11e:	0e 94 95 00 	call	0x12a	; 0x12a <main>
     122:	0c 94 b6 0d 	jmp	0x1b6c	; 0x1b6c <_exit>

00000126 <__bad_interrupt>:
     126:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000012a <main>:
#include "Header.h"



int main(void)
{
     12a:	df 93       	push	r29
     12c:	cf 93       	push	r28
     12e:	cd b7       	in	r28, 0x3d	; 61
     130:	de b7       	in	r29, 0x3e	; 62
    init();
     132:	0e 94 a6 00 	call	0x14c	; 0x14c <init>
    init_motor();
     136:	0e 94 59 06 	call	0xcb2	; 0xcb2 <init_motor>
    while(1)
    {

        rechte_lijn();
     13a:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <rechte_lijn>
        bocht_links();
     13e:	0e 94 c3 02 	call	0x586	; 0x586 <bocht_links>
        rechte_lijn();
     142:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <rechte_lijn>
        bocht_rechts();
     146:	0e 94 2e 03 	call	0x65c	; 0x65c <bocht_rechts>
     14a:	f7 cf       	rjmp	.-18     	; 0x13a <main+0x10>

0000014c <init>:
#include <avr/io.h>
#include <avr/interrupt.h>
#include "Header.h"

void init (void)
{
     14c:	df 93       	push	r29
     14e:	cf 93       	push	r28
     150:	cd b7       	in	r28, 0x3d	; 61
     152:	de b7       	in	r29, 0x3e	; 62
    DDRE |= (1 << PE3);     //pwm links 5
     154:	ad e2       	ldi	r26, 0x2D	; 45
     156:	b0 e0       	ldi	r27, 0x00	; 0
     158:	ed e2       	ldi	r30, 0x2D	; 45
     15a:	f0 e0       	ldi	r31, 0x00	; 0
     15c:	80 81       	ld	r24, Z
     15e:	88 60       	ori	r24, 0x08	; 8
     160:	8c 93       	st	X, r24
    DDRE |= (1 << PE4);     //pwm rechts 2
     162:	ad e2       	ldi	r26, 0x2D	; 45
     164:	b0 e0       	ldi	r27, 0x00	; 0
     166:	ed e2       	ldi	r30, 0x2D	; 45
     168:	f0 e0       	ldi	r31, 0x00	; 0
     16a:	80 81       	ld	r24, Z
     16c:	80 61       	ori	r24, 0x10	; 16
     16e:	8c 93       	st	X, r24
	DDRH |= (1 << PH4);     //lampje 7
     170:	a1 e0       	ldi	r26, 0x01	; 1
     172:	b1 e0       	ldi	r27, 0x01	; 1
     174:	e1 e0       	ldi	r30, 0x01	; 1
     176:	f1 e0       	ldi	r31, 0x01	; 1
     178:	80 81       	ld	r24, Z
     17a:	80 61       	ori	r24, 0x10	; 16
     17c:	8c 93       	st	X, r24
	DDRE |= (1 << PJ1);     //motorrichting links 14
     17e:	ad e2       	ldi	r26, 0x2D	; 45
     180:	b0 e0       	ldi	r27, 0x00	; 0
     182:	ed e2       	ldi	r30, 0x2D	; 45
     184:	f0 e0       	ldi	r31, 0x00	; 0
     186:	80 81       	ld	r24, Z
     188:	82 60       	ori	r24, 0x02	; 2
     18a:	8c 93       	st	X, r24
	DDRE |= (1 << PJ0);     //motorrichting rechts 15
     18c:	ad e2       	ldi	r26, 0x2D	; 45
     18e:	b0 e0       	ldi	r27, 0x00	; 0
     190:	ed e2       	ldi	r30, 0x2D	; 45
     192:	f0 e0       	ldi	r31, 0x00	; 0
     194:	80 81       	ld	r24, Z
     196:	81 60       	ori	r24, 0x01	; 1
     198:	8c 93       	st	X, r24
    DDRA &= ~(1 << PD0);    //Nadering links 21
     19a:	a1 e2       	ldi	r26, 0x21	; 33
     19c:	b0 e0       	ldi	r27, 0x00	; 0
     19e:	e1 e2       	ldi	r30, 0x21	; 33
     1a0:	f0 e0       	ldi	r31, 0x00	; 0
     1a2:	80 81       	ld	r24, Z
     1a4:	8e 7f       	andi	r24, 0xFE	; 254
     1a6:	8c 93       	st	X, r24
    DDRA &= ~(1 << PD1);    //Nadering rechts 20
     1a8:	a1 e2       	ldi	r26, 0x21	; 33
     1aa:	b0 e0       	ldi	r27, 0x00	; 0
     1ac:	e1 e2       	ldi	r30, 0x21	; 33
     1ae:	f0 e0       	ldi	r31, 0x00	; 0
     1b0:	80 81       	ld	r24, Z
     1b2:	8d 7f       	andi	r24, 0xFD	; 253
     1b4:	8c 93       	st	X, r24
	DDRL &= ~(1 << PL0);    //Ultrasoon echopin 49
     1b6:	aa e0       	ldi	r26, 0x0A	; 10
     1b8:	b1 e0       	ldi	r27, 0x01	; 1
     1ba:	ea e0       	ldi	r30, 0x0A	; 10
     1bc:	f1 e0       	ldi	r31, 0x01	; 1
     1be:	80 81       	ld	r24, Z
     1c0:	8e 7f       	andi	r24, 0xFE	; 254
     1c2:	8c 93       	st	X, r24
	//DDRA |= (1 << PA3);     //Ultrasoon trigger 25
	DDRC |= (1<<PC7);       //Ultrasoon rechts 30
     1c4:	a7 e2       	ldi	r26, 0x27	; 39
     1c6:	b0 e0       	ldi	r27, 0x00	; 0
     1c8:	e7 e2       	ldi	r30, 0x27	; 39
     1ca:	f0 e0       	ldi	r31, 0x00	; 0
     1cc:	80 81       	ld	r24, Z
     1ce:	80 68       	ori	r24, 0x80	; 128
     1d0:	8c 93       	st	X, r24
	DDRC |= (1<<PC6);       //Ultrasoon links 31
     1d2:	a7 e2       	ldi	r26, 0x27	; 39
     1d4:	b0 e0       	ldi	r27, 0x00	; 0
     1d6:	e7 e2       	ldi	r30, 0x27	; 39
     1d8:	f0 e0       	ldi	r31, 0x00	; 0
     1da:	80 81       	ld	r24, Z
     1dc:	80 64       	ori	r24, 0x40	; 64
     1de:	8c 93       	st	X, r24
	DDRC |= (1<<PC5);       //Ultrasoon voor 32
     1e0:	a7 e2       	ldi	r26, 0x27	; 39
     1e2:	b0 e0       	ldi	r27, 0x00	; 0
     1e4:	e7 e2       	ldi	r30, 0x27	; 39
     1e6:	f0 e0       	ldi	r31, 0x00	; 0
     1e8:	80 81       	ld	r24, Z
     1ea:	80 62       	ori	r24, 0x20	; 32
     1ec:	8c 93       	st	X, r24
}
     1ee:	cf 91       	pop	r28
     1f0:	df 91       	pop	r29
     1f2:	08 95       	ret

000001f4 <rechte_lijn>:

void rechte_lijn(void)
{
     1f4:	df 93       	push	r29
     1f6:	cf 93       	push	r28
     1f8:	cd b7       	in	r28, 0x3d	; 61
     1fa:	de b7       	in	r29, 0x3e	; 62
     1fc:	ac 97       	sbiw	r28, 0x2c	; 44
     1fe:	0f b6       	in	r0, 0x3f	; 63
     200:	f8 94       	cli
     202:	de bf       	out	0x3e, r29	; 62
     204:	0f be       	out	0x3f, r0	; 63
     206:	cd bf       	out	0x3d, r28	; 61
	int vlag;
	TCNT1 = 0;
     208:	e4 e8       	ldi	r30, 0x84	; 132
     20a:	f0 e0       	ldi	r31, 0x00	; 0
     20c:	11 82       	std	Z+1, r1	; 0x01
     20e:	10 82       	st	Z, r1
	Grote_klok = 0;
     210:	10 92 15 03 	sts	0x0315, r1
     214:	10 92 14 03 	sts	0x0314, r1
     218:	a7 c1       	rjmp	.+846    	; 0x568 <rechte_lijn+0x374>
    while (vlag == 1) //(ultrasoon <= 37)
    {
		//if (((ultrasoon_rechts > 0) && (ultrasoon_rechts < 37)) || ((ultrasoon_links > 0) && (ultrasoon_links < 37)))
		//{

        if ((!(PINA & (1 << PA0))) && (!(PINA & (1 << PA1))))
     21a:	e0 e2       	ldi	r30, 0x20	; 32
     21c:	f0 e0       	ldi	r31, 0x00	; 0
     21e:	80 81       	ld	r24, Z
     220:	88 2f       	mov	r24, r24
     222:	90 e0       	ldi	r25, 0x00	; 0
     224:	81 70       	andi	r24, 0x01	; 1
     226:	90 70       	andi	r25, 0x00	; 0
     228:	00 97       	sbiw	r24, 0x00	; 0
     22a:	79 f4       	brne	.+30     	; 0x24a <rechte_lijn+0x56>
     22c:	e0 e2       	ldi	r30, 0x20	; 32
     22e:	f0 e0       	ldi	r31, 0x00	; 0
     230:	80 81       	ld	r24, Z
     232:	88 2f       	mov	r24, r24
     234:	90 e0       	ldi	r25, 0x00	; 0
     236:	82 70       	andi	r24, 0x02	; 2
     238:	90 70       	andi	r25, 0x00	; 0
     23a:	00 97       	sbiw	r24, 0x00	; 0
     23c:	31 f4       	brne	.+12     	; 0x24a <rechte_lijn+0x56>
            {
                motor(170,170);
     23e:	8a ea       	ldi	r24, 0xAA	; 170
     240:	90 e0       	ldi	r25, 0x00	; 0
     242:	6a ea       	ldi	r22, 0xAA	; 170
     244:	70 e0       	ldi	r23, 0x00	; 0
     246:	0e 94 af 06 	call	0xd5e	; 0xd5e <motor>
            }
        if (PINA &(1 << PA0))
     24a:	e0 e2       	ldi	r30, 0x20	; 32
     24c:	f0 e0       	ldi	r31, 0x00	; 0
     24e:	80 81       	ld	r24, Z
     250:	88 2f       	mov	r24, r24
     252:	90 e0       	ldi	r25, 0x00	; 0
     254:	81 70       	andi	r24, 0x01	; 1
     256:	90 70       	andi	r25, 0x00	; 0
     258:	88 23       	and	r24, r24
     25a:	09 f4       	brne	.+2      	; 0x25e <rechte_lijn+0x6a>
     25c:	78 c0       	rjmp	.+240    	; 0x34e <rechte_lijn+0x15a>
            {
                motor (170,160);
     25e:	8a ea       	ldi	r24, 0xAA	; 170
     260:	90 e0       	ldi	r25, 0x00	; 0
     262:	60 ea       	ldi	r22, 0xA0	; 160
     264:	70 e0       	ldi	r23, 0x00	; 0
     266:	0e 94 af 06 	call	0xd5e	; 0xd5e <motor>
     26a:	80 e0       	ldi	r24, 0x00	; 0
     26c:	90 e0       	ldi	r25, 0x00	; 0
     26e:	a0 e2       	ldi	r26, 0x20	; 32
     270:	b2 e4       	ldi	r27, 0x42	; 66
     272:	8f a3       	std	Y+39, r24	; 0x27
     274:	98 a7       	std	Y+40, r25	; 0x28
     276:	a9 a7       	std	Y+41, r26	; 0x29
     278:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     27a:	6f a1       	ldd	r22, Y+39	; 0x27
     27c:	78 a5       	ldd	r23, Y+40	; 0x28
     27e:	89 a5       	ldd	r24, Y+41	; 0x29
     280:	9a a5       	ldd	r25, Y+42	; 0x2a
     282:	20 e0       	ldi	r18, 0x00	; 0
     284:	30 e0       	ldi	r19, 0x00	; 0
     286:	4a e7       	ldi	r20, 0x7A	; 122
     288:	55 e4       	ldi	r21, 0x45	; 69
     28a:	0e 94 a5 08 	call	0x114a	; 0x114a <__mulsf3>
     28e:	dc 01       	movw	r26, r24
     290:	cb 01       	movw	r24, r22
     292:	8b a3       	std	Y+35, r24	; 0x23
     294:	9c a3       	std	Y+36, r25	; 0x24
     296:	ad a3       	std	Y+37, r26	; 0x25
     298:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
     29a:	6b a1       	ldd	r22, Y+35	; 0x23
     29c:	7c a1       	ldd	r23, Y+36	; 0x24
     29e:	8d a1       	ldd	r24, Y+37	; 0x25
     2a0:	9e a1       	ldd	r25, Y+38	; 0x26
     2a2:	20 e0       	ldi	r18, 0x00	; 0
     2a4:	30 e0       	ldi	r19, 0x00	; 0
     2a6:	40 e8       	ldi	r20, 0x80	; 128
     2a8:	5f e3       	ldi	r21, 0x3F	; 63
     2aa:	0e 94 ff 09 	call	0x13fe	; 0x13fe <__ltsf2>
     2ae:	88 23       	and	r24, r24
     2b0:	2c f4       	brge	.+10     	; 0x2bc <rechte_lijn+0xc8>
		__ticks = 1;
     2b2:	81 e0       	ldi	r24, 0x01	; 1
     2b4:	90 e0       	ldi	r25, 0x00	; 0
     2b6:	9a a3       	std	Y+34, r25	; 0x22
     2b8:	89 a3       	std	Y+33, r24	; 0x21
     2ba:	3f c0       	rjmp	.+126    	; 0x33a <rechte_lijn+0x146>
	else if (__tmp > 65535)
     2bc:	6b a1       	ldd	r22, Y+35	; 0x23
     2be:	7c a1       	ldd	r23, Y+36	; 0x24
     2c0:	8d a1       	ldd	r24, Y+37	; 0x25
     2c2:	9e a1       	ldd	r25, Y+38	; 0x26
     2c4:	20 e0       	ldi	r18, 0x00	; 0
     2c6:	3f ef       	ldi	r19, 0xFF	; 255
     2c8:	4f e7       	ldi	r20, 0x7F	; 127
     2ca:	57 e4       	ldi	r21, 0x47	; 71
     2cc:	0e 94 9f 09 	call	0x133e	; 0x133e <__gtsf2>
     2d0:	18 16       	cp	r1, r24
     2d2:	4c f5       	brge	.+82     	; 0x326 <rechte_lijn+0x132>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     2d4:	6f a1       	ldd	r22, Y+39	; 0x27
     2d6:	78 a5       	ldd	r23, Y+40	; 0x28
     2d8:	89 a5       	ldd	r24, Y+41	; 0x29
     2da:	9a a5       	ldd	r25, Y+42	; 0x2a
     2dc:	20 e0       	ldi	r18, 0x00	; 0
     2de:	30 e0       	ldi	r19, 0x00	; 0
     2e0:	40 e2       	ldi	r20, 0x20	; 32
     2e2:	51 e4       	ldi	r21, 0x41	; 65
     2e4:	0e 94 a5 08 	call	0x114a	; 0x114a <__mulsf3>
     2e8:	dc 01       	movw	r26, r24
     2ea:	cb 01       	movw	r24, r22
     2ec:	bc 01       	movw	r22, r24
     2ee:	cd 01       	movw	r24, r26
     2f0:	0e 94 cf 06 	call	0xd9e	; 0xd9e <__fixunssfsi>
     2f4:	dc 01       	movw	r26, r24
     2f6:	cb 01       	movw	r24, r22
     2f8:	9a a3       	std	Y+34, r25	; 0x22
     2fa:	89 a3       	std	Y+33, r24	; 0x21
     2fc:	0f c0       	rjmp	.+30     	; 0x31c <rechte_lijn+0x128>
     2fe:	80 e9       	ldi	r24, 0x90	; 144
     300:	91 e0       	ldi	r25, 0x01	; 1
     302:	98 a3       	std	Y+32, r25	; 0x20
     304:	8f 8f       	std	Y+31, r24	; 0x1f
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     306:	8f 8d       	ldd	r24, Y+31	; 0x1f
     308:	98 a1       	ldd	r25, Y+32	; 0x20
     30a:	01 97       	sbiw	r24, 0x01	; 1
     30c:	f1 f7       	brne	.-4      	; 0x30a <rechte_lijn+0x116>
     30e:	98 a3       	std	Y+32, r25	; 0x20
     310:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     312:	89 a1       	ldd	r24, Y+33	; 0x21
     314:	9a a1       	ldd	r25, Y+34	; 0x22
     316:	01 97       	sbiw	r24, 0x01	; 1
     318:	9a a3       	std	Y+34, r25	; 0x22
     31a:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     31c:	89 a1       	ldd	r24, Y+33	; 0x21
     31e:	9a a1       	ldd	r25, Y+34	; 0x22
     320:	00 97       	sbiw	r24, 0x00	; 0
     322:	69 f7       	brne	.-38     	; 0x2fe <rechte_lijn+0x10a>
     324:	14 c0       	rjmp	.+40     	; 0x34e <rechte_lijn+0x15a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     326:	6b a1       	ldd	r22, Y+35	; 0x23
     328:	7c a1       	ldd	r23, Y+36	; 0x24
     32a:	8d a1       	ldd	r24, Y+37	; 0x25
     32c:	9e a1       	ldd	r25, Y+38	; 0x26
     32e:	0e 94 cf 06 	call	0xd9e	; 0xd9e <__fixunssfsi>
     332:	dc 01       	movw	r26, r24
     334:	cb 01       	movw	r24, r22
     336:	9a a3       	std	Y+34, r25	; 0x22
     338:	89 a3       	std	Y+33, r24	; 0x21
     33a:	89 a1       	ldd	r24, Y+33	; 0x21
     33c:	9a a1       	ldd	r25, Y+34	; 0x22
     33e:	9e 8f       	std	Y+30, r25	; 0x1e
     340:	8d 8f       	std	Y+29, r24	; 0x1d
     342:	8d 8d       	ldd	r24, Y+29	; 0x1d
     344:	9e 8d       	ldd	r25, Y+30	; 0x1e
     346:	01 97       	sbiw	r24, 0x01	; 1
     348:	f1 f7       	brne	.-4      	; 0x346 <rechte_lijn+0x152>
     34a:	9e 8f       	std	Y+30, r25	; 0x1e
     34c:	8d 8f       	std	Y+29, r24	; 0x1d
                _delay_ms(40);
            }
        if (PINA &(1 << PA1))
     34e:	e0 e2       	ldi	r30, 0x20	; 32
     350:	f0 e0       	ldi	r31, 0x00	; 0
     352:	80 81       	ld	r24, Z
     354:	88 2f       	mov	r24, r24
     356:	90 e0       	ldi	r25, 0x00	; 0
     358:	82 70       	andi	r24, 0x02	; 2
     35a:	90 70       	andi	r25, 0x00	; 0
     35c:	00 97       	sbiw	r24, 0x00	; 0
     35e:	09 f4       	brne	.+2      	; 0x362 <rechte_lijn+0x16e>
     360:	78 c0       	rjmp	.+240    	; 0x452 <rechte_lijn+0x25e>
        {
                motor (160,170);
     362:	80 ea       	ldi	r24, 0xA0	; 160
     364:	90 e0       	ldi	r25, 0x00	; 0
     366:	6a ea       	ldi	r22, 0xAA	; 170
     368:	70 e0       	ldi	r23, 0x00	; 0
     36a:	0e 94 af 06 	call	0xd5e	; 0xd5e <motor>
     36e:	80 e0       	ldi	r24, 0x00	; 0
     370:	90 e0       	ldi	r25, 0x00	; 0
     372:	a0 e2       	ldi	r26, 0x20	; 32
     374:	b2 e4       	ldi	r27, 0x42	; 66
     376:	89 8f       	std	Y+25, r24	; 0x19
     378:	9a 8f       	std	Y+26, r25	; 0x1a
     37a:	ab 8f       	std	Y+27, r26	; 0x1b
     37c:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     37e:	69 8d       	ldd	r22, Y+25	; 0x19
     380:	7a 8d       	ldd	r23, Y+26	; 0x1a
     382:	8b 8d       	ldd	r24, Y+27	; 0x1b
     384:	9c 8d       	ldd	r25, Y+28	; 0x1c
     386:	20 e0       	ldi	r18, 0x00	; 0
     388:	30 e0       	ldi	r19, 0x00	; 0
     38a:	4a e7       	ldi	r20, 0x7A	; 122
     38c:	55 e4       	ldi	r21, 0x45	; 69
     38e:	0e 94 a5 08 	call	0x114a	; 0x114a <__mulsf3>
     392:	dc 01       	movw	r26, r24
     394:	cb 01       	movw	r24, r22
     396:	8d 8b       	std	Y+21, r24	; 0x15
     398:	9e 8b       	std	Y+22, r25	; 0x16
     39a:	af 8b       	std	Y+23, r26	; 0x17
     39c:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
     39e:	6d 89       	ldd	r22, Y+21	; 0x15
     3a0:	7e 89       	ldd	r23, Y+22	; 0x16
     3a2:	8f 89       	ldd	r24, Y+23	; 0x17
     3a4:	98 8d       	ldd	r25, Y+24	; 0x18
     3a6:	20 e0       	ldi	r18, 0x00	; 0
     3a8:	30 e0       	ldi	r19, 0x00	; 0
     3aa:	40 e8       	ldi	r20, 0x80	; 128
     3ac:	5f e3       	ldi	r21, 0x3F	; 63
     3ae:	0e 94 ff 09 	call	0x13fe	; 0x13fe <__ltsf2>
     3b2:	88 23       	and	r24, r24
     3b4:	2c f4       	brge	.+10     	; 0x3c0 <rechte_lijn+0x1cc>
		__ticks = 1;
     3b6:	81 e0       	ldi	r24, 0x01	; 1
     3b8:	90 e0       	ldi	r25, 0x00	; 0
     3ba:	9c 8b       	std	Y+20, r25	; 0x14
     3bc:	8b 8b       	std	Y+19, r24	; 0x13
     3be:	3f c0       	rjmp	.+126    	; 0x43e <rechte_lijn+0x24a>
	else if (__tmp > 65535)
     3c0:	6d 89       	ldd	r22, Y+21	; 0x15
     3c2:	7e 89       	ldd	r23, Y+22	; 0x16
     3c4:	8f 89       	ldd	r24, Y+23	; 0x17
     3c6:	98 8d       	ldd	r25, Y+24	; 0x18
     3c8:	20 e0       	ldi	r18, 0x00	; 0
     3ca:	3f ef       	ldi	r19, 0xFF	; 255
     3cc:	4f e7       	ldi	r20, 0x7F	; 127
     3ce:	57 e4       	ldi	r21, 0x47	; 71
     3d0:	0e 94 9f 09 	call	0x133e	; 0x133e <__gtsf2>
     3d4:	18 16       	cp	r1, r24
     3d6:	4c f5       	brge	.+82     	; 0x42a <rechte_lijn+0x236>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     3d8:	69 8d       	ldd	r22, Y+25	; 0x19
     3da:	7a 8d       	ldd	r23, Y+26	; 0x1a
     3dc:	8b 8d       	ldd	r24, Y+27	; 0x1b
     3de:	9c 8d       	ldd	r25, Y+28	; 0x1c
     3e0:	20 e0       	ldi	r18, 0x00	; 0
     3e2:	30 e0       	ldi	r19, 0x00	; 0
     3e4:	40 e2       	ldi	r20, 0x20	; 32
     3e6:	51 e4       	ldi	r21, 0x41	; 65
     3e8:	0e 94 a5 08 	call	0x114a	; 0x114a <__mulsf3>
     3ec:	dc 01       	movw	r26, r24
     3ee:	cb 01       	movw	r24, r22
     3f0:	bc 01       	movw	r22, r24
     3f2:	cd 01       	movw	r24, r26
     3f4:	0e 94 cf 06 	call	0xd9e	; 0xd9e <__fixunssfsi>
     3f8:	dc 01       	movw	r26, r24
     3fa:	cb 01       	movw	r24, r22
     3fc:	9c 8b       	std	Y+20, r25	; 0x14
     3fe:	8b 8b       	std	Y+19, r24	; 0x13
     400:	0f c0       	rjmp	.+30     	; 0x420 <rechte_lijn+0x22c>
     402:	80 e9       	ldi	r24, 0x90	; 144
     404:	91 e0       	ldi	r25, 0x01	; 1
     406:	9a 8b       	std	Y+18, r25	; 0x12
     408:	89 8b       	std	Y+17, r24	; 0x11
     40a:	89 89       	ldd	r24, Y+17	; 0x11
     40c:	9a 89       	ldd	r25, Y+18	; 0x12
     40e:	01 97       	sbiw	r24, 0x01	; 1
     410:	f1 f7       	brne	.-4      	; 0x40e <rechte_lijn+0x21a>
     412:	9a 8b       	std	Y+18, r25	; 0x12
     414:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     416:	8b 89       	ldd	r24, Y+19	; 0x13
     418:	9c 89       	ldd	r25, Y+20	; 0x14
     41a:	01 97       	sbiw	r24, 0x01	; 1
     41c:	9c 8b       	std	Y+20, r25	; 0x14
     41e:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     420:	8b 89       	ldd	r24, Y+19	; 0x13
     422:	9c 89       	ldd	r25, Y+20	; 0x14
     424:	00 97       	sbiw	r24, 0x00	; 0
     426:	69 f7       	brne	.-38     	; 0x402 <rechte_lijn+0x20e>
     428:	14 c0       	rjmp	.+40     	; 0x452 <rechte_lijn+0x25e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     42a:	6d 89       	ldd	r22, Y+21	; 0x15
     42c:	7e 89       	ldd	r23, Y+22	; 0x16
     42e:	8f 89       	ldd	r24, Y+23	; 0x17
     430:	98 8d       	ldd	r25, Y+24	; 0x18
     432:	0e 94 cf 06 	call	0xd9e	; 0xd9e <__fixunssfsi>
     436:	dc 01       	movw	r26, r24
     438:	cb 01       	movw	r24, r22
     43a:	9c 8b       	std	Y+20, r25	; 0x14
     43c:	8b 8b       	std	Y+19, r24	; 0x13
     43e:	8b 89       	ldd	r24, Y+19	; 0x13
     440:	9c 89       	ldd	r25, Y+20	; 0x14
     442:	98 8b       	std	Y+16, r25	; 0x10
     444:	8f 87       	std	Y+15, r24	; 0x0f
     446:	8f 85       	ldd	r24, Y+15	; 0x0f
     448:	98 89       	ldd	r25, Y+16	; 0x10
     44a:	01 97       	sbiw	r24, 0x01	; 1
     44c:	f1 f7       	brne	.-4      	; 0x44a <rechte_lijn+0x256>
     44e:	98 8b       	std	Y+16, r25	; 0x10
     450:	8f 87       	std	Y+15, r24	; 0x0f
                _delay_ms(40);
        }

		if (Grote_klok >= 180)//stel de boog begint te laat dan kun je de waarde veranderen nu 18.0 seconden
     452:	80 91 14 03 	lds	r24, 0x0314
     456:	90 91 15 03 	lds	r25, 0x0315
     45a:	84 3b       	cpi	r24, 0xB4	; 180
     45c:	91 05       	cpc	r25, r1
     45e:	2c f0       	brlt	.+10     	; 0x46a <rechte_lijn+0x276>
		{
			vlag = 1;
     460:	81 e0       	ldi	r24, 0x01	; 1
     462:	90 e0       	ldi	r25, 0x00	; 0
     464:	9c a7       	std	Y+44, r25	; 0x2c
     466:	8b a7       	std	Y+43, r24	; 0x2b
     468:	7f c0       	rjmp	.+254    	; 0x568 <rechte_lijn+0x374>
			motor(0,0);
		}
		*/
		else
		{
			motor(0,0);
     46a:	80 e0       	ldi	r24, 0x00	; 0
     46c:	90 e0       	ldi	r25, 0x00	; 0
     46e:	60 e0       	ldi	r22, 0x00	; 0
     470:	70 e0       	ldi	r23, 0x00	; 0
     472:	0e 94 af 06 	call	0xd5e	; 0xd5e <motor>
     476:	80 e0       	ldi	r24, 0x00	; 0
     478:	90 e0       	ldi	r25, 0x00	; 0
     47a:	aa ef       	ldi	r26, 0xFA	; 250
     47c:	b3 e4       	ldi	r27, 0x43	; 67
     47e:	8b 87       	std	Y+11, r24	; 0x0b
     480:	9c 87       	std	Y+12, r25	; 0x0c
     482:	ad 87       	std	Y+13, r26	; 0x0d
     484:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     486:	6b 85       	ldd	r22, Y+11	; 0x0b
     488:	7c 85       	ldd	r23, Y+12	; 0x0c
     48a:	8d 85       	ldd	r24, Y+13	; 0x0d
     48c:	9e 85       	ldd	r25, Y+14	; 0x0e
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	30 e0       	ldi	r19, 0x00	; 0
     492:	4a e7       	ldi	r20, 0x7A	; 122
     494:	55 e4       	ldi	r21, 0x45	; 69
     496:	0e 94 a5 08 	call	0x114a	; 0x114a <__mulsf3>
     49a:	dc 01       	movw	r26, r24
     49c:	cb 01       	movw	r24, r22
     49e:	8f 83       	std	Y+7, r24	; 0x07
     4a0:	98 87       	std	Y+8, r25	; 0x08
     4a2:	a9 87       	std	Y+9, r26	; 0x09
     4a4:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     4a6:	6f 81       	ldd	r22, Y+7	; 0x07
     4a8:	78 85       	ldd	r23, Y+8	; 0x08
     4aa:	89 85       	ldd	r24, Y+9	; 0x09
     4ac:	9a 85       	ldd	r25, Y+10	; 0x0a
     4ae:	20 e0       	ldi	r18, 0x00	; 0
     4b0:	30 e0       	ldi	r19, 0x00	; 0
     4b2:	40 e8       	ldi	r20, 0x80	; 128
     4b4:	5f e3       	ldi	r21, 0x3F	; 63
     4b6:	0e 94 ff 09 	call	0x13fe	; 0x13fe <__ltsf2>
     4ba:	88 23       	and	r24, r24
     4bc:	2c f4       	brge	.+10     	; 0x4c8 <rechte_lijn+0x2d4>
		__ticks = 1;
     4be:	81 e0       	ldi	r24, 0x01	; 1
     4c0:	90 e0       	ldi	r25, 0x00	; 0
     4c2:	9e 83       	std	Y+6, r25	; 0x06
     4c4:	8d 83       	std	Y+5, r24	; 0x05
     4c6:	3f c0       	rjmp	.+126    	; 0x546 <rechte_lijn+0x352>
	else if (__tmp > 65535)
     4c8:	6f 81       	ldd	r22, Y+7	; 0x07
     4ca:	78 85       	ldd	r23, Y+8	; 0x08
     4cc:	89 85       	ldd	r24, Y+9	; 0x09
     4ce:	9a 85       	ldd	r25, Y+10	; 0x0a
     4d0:	20 e0       	ldi	r18, 0x00	; 0
     4d2:	3f ef       	ldi	r19, 0xFF	; 255
     4d4:	4f e7       	ldi	r20, 0x7F	; 127
     4d6:	57 e4       	ldi	r21, 0x47	; 71
     4d8:	0e 94 9f 09 	call	0x133e	; 0x133e <__gtsf2>
     4dc:	18 16       	cp	r1, r24
     4de:	4c f5       	brge	.+82     	; 0x532 <rechte_lijn+0x33e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     4e0:	6b 85       	ldd	r22, Y+11	; 0x0b
     4e2:	7c 85       	ldd	r23, Y+12	; 0x0c
     4e4:	8d 85       	ldd	r24, Y+13	; 0x0d
     4e6:	9e 85       	ldd	r25, Y+14	; 0x0e
     4e8:	20 e0       	ldi	r18, 0x00	; 0
     4ea:	30 e0       	ldi	r19, 0x00	; 0
     4ec:	40 e2       	ldi	r20, 0x20	; 32
     4ee:	51 e4       	ldi	r21, 0x41	; 65
     4f0:	0e 94 a5 08 	call	0x114a	; 0x114a <__mulsf3>
     4f4:	dc 01       	movw	r26, r24
     4f6:	cb 01       	movw	r24, r22
     4f8:	bc 01       	movw	r22, r24
     4fa:	cd 01       	movw	r24, r26
     4fc:	0e 94 cf 06 	call	0xd9e	; 0xd9e <__fixunssfsi>
     500:	dc 01       	movw	r26, r24
     502:	cb 01       	movw	r24, r22
     504:	9e 83       	std	Y+6, r25	; 0x06
     506:	8d 83       	std	Y+5, r24	; 0x05
     508:	0f c0       	rjmp	.+30     	; 0x528 <rechte_lijn+0x334>
     50a:	80 e9       	ldi	r24, 0x90	; 144
     50c:	91 e0       	ldi	r25, 0x01	; 1
     50e:	9c 83       	std	Y+4, r25	; 0x04
     510:	8b 83       	std	Y+3, r24	; 0x03
     512:	8b 81       	ldd	r24, Y+3	; 0x03
     514:	9c 81       	ldd	r25, Y+4	; 0x04
     516:	01 97       	sbiw	r24, 0x01	; 1
     518:	f1 f7       	brne	.-4      	; 0x516 <rechte_lijn+0x322>
     51a:	9c 83       	std	Y+4, r25	; 0x04
     51c:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     51e:	8d 81       	ldd	r24, Y+5	; 0x05
     520:	9e 81       	ldd	r25, Y+6	; 0x06
     522:	01 97       	sbiw	r24, 0x01	; 1
     524:	9e 83       	std	Y+6, r25	; 0x06
     526:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     528:	8d 81       	ldd	r24, Y+5	; 0x05
     52a:	9e 81       	ldd	r25, Y+6	; 0x06
     52c:	00 97       	sbiw	r24, 0x00	; 0
     52e:	69 f7       	brne	.-38     	; 0x50a <rechte_lijn+0x316>
     530:	14 c0       	rjmp	.+40     	; 0x55a <rechte_lijn+0x366>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     532:	6f 81       	ldd	r22, Y+7	; 0x07
     534:	78 85       	ldd	r23, Y+8	; 0x08
     536:	89 85       	ldd	r24, Y+9	; 0x09
     538:	9a 85       	ldd	r25, Y+10	; 0x0a
     53a:	0e 94 cf 06 	call	0xd9e	; 0xd9e <__fixunssfsi>
     53e:	dc 01       	movw	r26, r24
     540:	cb 01       	movw	r24, r22
     542:	9e 83       	std	Y+6, r25	; 0x06
     544:	8d 83       	std	Y+5, r24	; 0x05
     546:	8d 81       	ldd	r24, Y+5	; 0x05
     548:	9e 81       	ldd	r25, Y+6	; 0x06
     54a:	9a 83       	std	Y+2, r25	; 0x02
     54c:	89 83       	std	Y+1, r24	; 0x01
     54e:	89 81       	ldd	r24, Y+1	; 0x01
     550:	9a 81       	ldd	r25, Y+2	; 0x02
     552:	01 97       	sbiw	r24, 0x01	; 1
     554:	f1 f7       	brne	.-4      	; 0x552 <rechte_lijn+0x35e>
     556:	9a 83       	std	Y+2, r25	; 0x02
     558:	89 83       	std	Y+1, r24	; 0x01

			_delay_ms(500);
			PORTH &= ~(1 << PH4);
     55a:	a2 e0       	ldi	r26, 0x02	; 2
     55c:	b1 e0       	ldi	r27, 0x01	; 1
     55e:	e2 e0       	ldi	r30, 0x02	; 2
     560:	f1 e0       	ldi	r31, 0x01	; 1
     562:	80 81       	ld	r24, Z
     564:	8f 7e       	andi	r24, 0xEF	; 239
     566:	8c 93       	st	X, r24
void rechte_lijn(void)
{
	int vlag;
	TCNT1 = 0;
	Grote_klok = 0;
    while (vlag == 1) //(ultrasoon <= 37)
     568:	8b a5       	ldd	r24, Y+43	; 0x2b
     56a:	9c a5       	ldd	r25, Y+44	; 0x2c
     56c:	81 30       	cpi	r24, 0x01	; 1
     56e:	91 05       	cpc	r25, r1
     570:	09 f4       	brne	.+2      	; 0x574 <rechte_lijn+0x380>
     572:	53 ce       	rjmp	.-858    	; 0x21a <rechte_lijn+0x26>
			PORTH &= ~(1 << PH4);
		}


}
}
     574:	ac 96       	adiw	r28, 0x2c	; 44
     576:	0f b6       	in	r0, 0x3f	; 63
     578:	f8 94       	cli
     57a:	de bf       	out	0x3e, r29	; 62
     57c:	0f be       	out	0x3f, r0	; 63
     57e:	cd bf       	out	0x3d, r28	; 61
     580:	cf 91       	pop	r28
     582:	df 91       	pop	r29
     584:	08 95       	ret

00000586 <bocht_links>:

void bocht_links (void)
{
     586:	df 93       	push	r29
     588:	cf 93       	push	r28
     58a:	0f 92       	push	r0
     58c:	0f 92       	push	r0
     58e:	cd b7       	in	r28, 0x3d	; 61
     590:	de b7       	in	r29, 0x3e	; 62
	int vlag;
	TCNT1 = 0;
     592:	e4 e8       	ldi	r30, 0x84	; 132
     594:	f0 e0       	ldi	r31, 0x00	; 0
     596:	11 82       	std	Z+1, r1	; 0x01
     598:	10 82       	st	Z, r1
	Grote_klok = 0;
     59a:	10 92 15 03 	sts	0x0315, r1
     59e:	10 92 14 03 	sts	0x0314, r1
     5a2:	45 c0       	rjmp	.+138    	; 0x62e <bocht_links+0xa8>
	while ((PINA &(1 << PA0)) && (vlag == 1))
	{
		motor(35,170); //bocht naar rechts maken
     5a4:	83 e2       	ldi	r24, 0x23	; 35
     5a6:	90 e0       	ldi	r25, 0x00	; 0
     5a8:	6a ea       	ldi	r22, 0xAA	; 170
     5aa:	70 e0       	ldi	r23, 0x00	; 0
     5ac:	0e 94 af 06 	call	0xd5e	; 0xd5e <motor>
		if ((PINA &(1 << PA0)) && (Grote_klok <= 11.3)) //waarde
     5b0:	e0 e2       	ldi	r30, 0x20	; 32
     5b2:	f0 e0       	ldi	r31, 0x00	; 0
     5b4:	80 81       	ld	r24, Z
     5b6:	88 2f       	mov	r24, r24
     5b8:	90 e0       	ldi	r25, 0x00	; 0
     5ba:	81 70       	andi	r24, 0x01	; 1
     5bc:	90 70       	andi	r25, 0x00	; 0
     5be:	88 23       	and	r24, r24
     5c0:	d1 f0       	breq	.+52     	; 0x5f6 <bocht_links+0x70>
     5c2:	80 91 14 03 	lds	r24, 0x0314
     5c6:	90 91 15 03 	lds	r25, 0x0315
     5ca:	aa 27       	eor	r26, r26
     5cc:	97 fd       	sbrc	r25, 7
     5ce:	a0 95       	com	r26
     5d0:	ba 2f       	mov	r27, r26
     5d2:	bc 01       	movw	r22, r24
     5d4:	cd 01       	movw	r24, r26
     5d6:	0e 94 5f 0a 	call	0x14be	; 0x14be <__floatsisf>
     5da:	dc 01       	movw	r26, r24
     5dc:	cb 01       	movw	r24, r22
     5de:	bc 01       	movw	r22, r24
     5e0:	cd 01       	movw	r24, r26
     5e2:	2d ec       	ldi	r18, 0xCD	; 205
     5e4:	3c ec       	ldi	r19, 0xCC	; 204
     5e6:	44 e3       	ldi	r20, 0x34	; 52
     5e8:	51 e4       	ldi	r21, 0x41	; 65
     5ea:	0e 94 2f 0a 	call	0x145e	; 0x145e <__lesf2>
     5ee:	18 16       	cp	r1, r24
     5f0:	14 f0       	brlt	.+4      	; 0x5f6 <bocht_links+0x70>
		{
			error();
     5f2:	0e 94 99 03 	call	0x732	; 0x732 <error>
		}
		if (Grote_klok >= 11.3)
     5f6:	80 91 14 03 	lds	r24, 0x0314
     5fa:	90 91 15 03 	lds	r25, 0x0315
     5fe:	aa 27       	eor	r26, r26
     600:	97 fd       	sbrc	r25, 7
     602:	a0 95       	com	r26
     604:	ba 2f       	mov	r27, r26
     606:	bc 01       	movw	r22, r24
     608:	cd 01       	movw	r24, r26
     60a:	0e 94 5f 0a 	call	0x14be	; 0x14be <__floatsisf>
     60e:	dc 01       	movw	r26, r24
     610:	cb 01       	movw	r24, r22
     612:	bc 01       	movw	r22, r24
     614:	cd 01       	movw	r24, r26
     616:	2d ec       	ldi	r18, 0xCD	; 205
     618:	3c ec       	ldi	r19, 0xCC	; 204
     61a:	44 e3       	ldi	r20, 0x34	; 52
     61c:	51 e4       	ldi	r21, 0x41	; 65
     61e:	0e 94 cf 09 	call	0x139e	; 0x139e <__gesf2>
     622:	88 23       	and	r24, r24
     624:	24 f0       	brlt	.+8      	; 0x62e <bocht_links+0xa8>
		{
			vlag = 1;
     626:	81 e0       	ldi	r24, 0x01	; 1
     628:	90 e0       	ldi	r25, 0x00	; 0
     62a:	9a 83       	std	Y+2, r25	; 0x02
     62c:	89 83       	std	Y+1, r24	; 0x01
void bocht_links (void)
{
	int vlag;
	TCNT1 = 0;
	Grote_klok = 0;
	while ((PINA &(1 << PA0)) && (vlag == 1))
     62e:	e0 e2       	ldi	r30, 0x20	; 32
     630:	f0 e0       	ldi	r31, 0x00	; 0
     632:	80 81       	ld	r24, Z
     634:	88 2f       	mov	r24, r24
     636:	90 e0       	ldi	r25, 0x00	; 0
     638:	81 70       	andi	r24, 0x01	; 1
     63a:	90 70       	andi	r25, 0x00	; 0
     63c:	98 2f       	mov	r25, r24
     63e:	81 e0       	ldi	r24, 0x01	; 1
     640:	89 27       	eor	r24, r25
     642:	88 23       	and	r24, r24
     644:	31 f4       	brne	.+12     	; 0x652 <bocht_links+0xcc>
     646:	89 81       	ldd	r24, Y+1	; 0x01
     648:	9a 81       	ldd	r25, Y+2	; 0x02
     64a:	81 30       	cpi	r24, 0x01	; 1
     64c:	91 05       	cpc	r25, r1
     64e:	09 f4       	brne	.+2      	; 0x652 <bocht_links+0xcc>
     650:	a9 cf       	rjmp	.-174    	; 0x5a4 <bocht_links+0x1e>
			vlag = 1;
		}

	}

}
     652:	0f 90       	pop	r0
     654:	0f 90       	pop	r0
     656:	cf 91       	pop	r28
     658:	df 91       	pop	r29
     65a:	08 95       	ret

0000065c <bocht_rechts>:

void bocht_rechts (void)
{
     65c:	df 93       	push	r29
     65e:	cf 93       	push	r28
     660:	0f 92       	push	r0
     662:	0f 92       	push	r0
     664:	cd b7       	in	r28, 0x3d	; 61
     666:	de b7       	in	r29, 0x3e	; 62
	int vlag;
	TCNT1 = 0;
     668:	e4 e8       	ldi	r30, 0x84	; 132
     66a:	f0 e0       	ldi	r31, 0x00	; 0
     66c:	11 82       	std	Z+1, r1	; 0x01
     66e:	10 82       	st	Z, r1
	Grote_klok = 0;
     670:	10 92 15 03 	sts	0x0315, r1
     674:	10 92 14 03 	sts	0x0314, r1
     678:	45 c0       	rjmp	.+138    	; 0x704 <bocht_rechts+0xa8>
	while ((PINA &(1 << PA0)) && (vlag == 1))
	{
		motor(170,35); //bocht naar rechts maken
     67a:	8a ea       	ldi	r24, 0xAA	; 170
     67c:	90 e0       	ldi	r25, 0x00	; 0
     67e:	63 e2       	ldi	r22, 0x23	; 35
     680:	70 e0       	ldi	r23, 0x00	; 0
     682:	0e 94 af 06 	call	0xd5e	; 0xd5e <motor>
		if ((PINA &(1 << PA0)) && (Grote_klok <= 11.3)) //waarde
     686:	e0 e2       	ldi	r30, 0x20	; 32
     688:	f0 e0       	ldi	r31, 0x00	; 0
     68a:	80 81       	ld	r24, Z
     68c:	88 2f       	mov	r24, r24
     68e:	90 e0       	ldi	r25, 0x00	; 0
     690:	81 70       	andi	r24, 0x01	; 1
     692:	90 70       	andi	r25, 0x00	; 0
     694:	88 23       	and	r24, r24
     696:	d1 f0       	breq	.+52     	; 0x6cc <bocht_rechts+0x70>
     698:	80 91 14 03 	lds	r24, 0x0314
     69c:	90 91 15 03 	lds	r25, 0x0315
     6a0:	aa 27       	eor	r26, r26
     6a2:	97 fd       	sbrc	r25, 7
     6a4:	a0 95       	com	r26
     6a6:	ba 2f       	mov	r27, r26
     6a8:	bc 01       	movw	r22, r24
     6aa:	cd 01       	movw	r24, r26
     6ac:	0e 94 5f 0a 	call	0x14be	; 0x14be <__floatsisf>
     6b0:	dc 01       	movw	r26, r24
     6b2:	cb 01       	movw	r24, r22
     6b4:	bc 01       	movw	r22, r24
     6b6:	cd 01       	movw	r24, r26
     6b8:	2d ec       	ldi	r18, 0xCD	; 205
     6ba:	3c ec       	ldi	r19, 0xCC	; 204
     6bc:	44 e3       	ldi	r20, 0x34	; 52
     6be:	51 e4       	ldi	r21, 0x41	; 65
     6c0:	0e 94 2f 0a 	call	0x145e	; 0x145e <__lesf2>
     6c4:	18 16       	cp	r1, r24
     6c6:	14 f0       	brlt	.+4      	; 0x6cc <bocht_rechts+0x70>
		{
			error();
     6c8:	0e 94 99 03 	call	0x732	; 0x732 <error>
		}
		if (Grote_klok >= 11.3)
     6cc:	80 91 14 03 	lds	r24, 0x0314
     6d0:	90 91 15 03 	lds	r25, 0x0315
     6d4:	aa 27       	eor	r26, r26
     6d6:	97 fd       	sbrc	r25, 7
     6d8:	a0 95       	com	r26
     6da:	ba 2f       	mov	r27, r26
     6dc:	bc 01       	movw	r22, r24
     6de:	cd 01       	movw	r24, r26
     6e0:	0e 94 5f 0a 	call	0x14be	; 0x14be <__floatsisf>
     6e4:	dc 01       	movw	r26, r24
     6e6:	cb 01       	movw	r24, r22
     6e8:	bc 01       	movw	r22, r24
     6ea:	cd 01       	movw	r24, r26
     6ec:	2d ec       	ldi	r18, 0xCD	; 205
     6ee:	3c ec       	ldi	r19, 0xCC	; 204
     6f0:	44 e3       	ldi	r20, 0x34	; 52
     6f2:	51 e4       	ldi	r21, 0x41	; 65
     6f4:	0e 94 cf 09 	call	0x139e	; 0x139e <__gesf2>
     6f8:	88 23       	and	r24, r24
     6fa:	24 f0       	brlt	.+8      	; 0x704 <bocht_rechts+0xa8>
		{
			vlag = 1;
     6fc:	81 e0       	ldi	r24, 0x01	; 1
     6fe:	90 e0       	ldi	r25, 0x00	; 0
     700:	9a 83       	std	Y+2, r25	; 0x02
     702:	89 83       	std	Y+1, r24	; 0x01
void bocht_rechts (void)
{
	int vlag;
	TCNT1 = 0;
	Grote_klok = 0;
	while ((PINA &(1 << PA0)) && (vlag == 1))
     704:	e0 e2       	ldi	r30, 0x20	; 32
     706:	f0 e0       	ldi	r31, 0x00	; 0
     708:	80 81       	ld	r24, Z
     70a:	88 2f       	mov	r24, r24
     70c:	90 e0       	ldi	r25, 0x00	; 0
     70e:	81 70       	andi	r24, 0x01	; 1
     710:	90 70       	andi	r25, 0x00	; 0
     712:	98 2f       	mov	r25, r24
     714:	81 e0       	ldi	r24, 0x01	; 1
     716:	89 27       	eor	r24, r25
     718:	88 23       	and	r24, r24
     71a:	31 f4       	brne	.+12     	; 0x728 <bocht_rechts+0xcc>
     71c:	89 81       	ldd	r24, Y+1	; 0x01
     71e:	9a 81       	ldd	r25, Y+2	; 0x02
     720:	81 30       	cpi	r24, 0x01	; 1
     722:	91 05       	cpc	r25, r1
     724:	09 f4       	brne	.+2      	; 0x728 <bocht_rechts+0xcc>
     726:	a9 cf       	rjmp	.-174    	; 0x67a <bocht_rechts+0x1e>
			vlag = 1;
		}

	}

}
     728:	0f 90       	pop	r0
     72a:	0f 90       	pop	r0
     72c:	cf 91       	pop	r28
     72e:	df 91       	pop	r29
     730:	08 95       	ret

00000732 <error>:

void error (void) //om een probleem optelossen todat we een betere oplossing hebben of niet
{
     732:	df 93       	push	r29
     734:	cf 93       	push	r28
     736:	cd b7       	in	r28, 0x3d	; 61
     738:	de b7       	in	r29, 0x3e	; 62
	while (1)
	{
	motor(0,0);
     73a:	80 e0       	ldi	r24, 0x00	; 0
     73c:	90 e0       	ldi	r25, 0x00	; 0
     73e:	60 e0       	ldi	r22, 0x00	; 0
     740:	70 e0       	ldi	r23, 0x00	; 0
     742:	0e 94 af 06 	call	0xd5e	; 0xd5e <motor>
     746:	f9 cf       	rjmp	.-14     	; 0x73a <error+0x8>

00000748 <__vector_17>:
uint16_t waarde2;
uint32_t counts;
int ultasoon_nr;

ISR(TIMER1_COMPA_vect)
{
     748:	1f 92       	push	r1
     74a:	0f 92       	push	r0
     74c:	0f b6       	in	r0, 0x3f	; 63
     74e:	0f 92       	push	r0
     750:	00 90 5b 00 	lds	r0, 0x005B
     754:	0f 92       	push	r0
     756:	11 24       	eor	r1, r1
     758:	8f 93       	push	r24
     75a:	9f 93       	push	r25
     75c:	ef 93       	push	r30
     75e:	ff 93       	push	r31
     760:	df 93       	push	r29
     762:	cf 93       	push	r28
     764:	cd b7       	in	r28, 0x3d	; 61
     766:	de b7       	in	r29, 0x3e	; 62
    TCNT1 = 0;
     768:	e4 e8       	ldi	r30, 0x84	; 132
     76a:	f0 e0       	ldi	r31, 0x00	; 0
     76c:	11 82       	std	Z+1, r1	; 0x01
     76e:	10 82       	st	Z, r1
    Grote_klok++;
     770:	80 91 14 03 	lds	r24, 0x0314
     774:	90 91 15 03 	lds	r25, 0x0315
     778:	01 96       	adiw	r24, 0x01	; 1
     77a:	90 93 15 03 	sts	0x0315, r25
     77e:	80 93 14 03 	sts	0x0314, r24
}
     782:	cf 91       	pop	r28
     784:	df 91       	pop	r29
     786:	ff 91       	pop	r31
     788:	ef 91       	pop	r30
     78a:	9f 91       	pop	r25
     78c:	8f 91       	pop	r24
     78e:	0f 90       	pop	r0
     790:	00 92 5b 00 	sts	0x005B, r0
     794:	0f 90       	pop	r0
     796:	0f be       	out	0x3f, r0	; 63
     798:	0f 90       	pop	r0
     79a:	1f 90       	pop	r1
     79c:	18 95       	reti

0000079e <__vector_41>:

ISR (TIMER4_CAPT_vect)
{
     79e:	1f 92       	push	r1
     7a0:	0f 92       	push	r0
     7a2:	0f b6       	in	r0, 0x3f	; 63
     7a4:	0f 92       	push	r0
     7a6:	00 90 5b 00 	lds	r0, 0x005B
     7aa:	0f 92       	push	r0
     7ac:	11 24       	eor	r1, r1
     7ae:	ef 92       	push	r14
     7b0:	ff 92       	push	r15
     7b2:	0f 93       	push	r16
     7b4:	1f 93       	push	r17
     7b6:	2f 93       	push	r18
     7b8:	3f 93       	push	r19
     7ba:	4f 93       	push	r20
     7bc:	5f 93       	push	r21
     7be:	6f 93       	push	r22
     7c0:	7f 93       	push	r23
     7c2:	8f 93       	push	r24
     7c4:	9f 93       	push	r25
     7c6:	af 93       	push	r26
     7c8:	bf 93       	push	r27
     7ca:	ef 93       	push	r30
     7cc:	ff 93       	push	r31
     7ce:	df 93       	push	r29
     7d0:	cf 93       	push	r28
     7d2:	0f 92       	push	r0
     7d4:	0f 92       	push	r0
     7d6:	cd b7       	in	r28, 0x3d	; 61
     7d8:	de b7       	in	r29, 0x3e	; 62
    if (TCNT4 >= 20000);
     7da:	e4 ea       	ldi	r30, 0xA4	; 164
     7dc:	f0 e0       	ldi	r31, 0x00	; 0
     7de:	e0 80       	ld	r14, Z
     7e0:	f1 80       	ldd	r15, Z+1	; 0x01
    {
    if (TCCR4B & (1<<ICES4)) // On rising edge
     7e2:	e1 ea       	ldi	r30, 0xA1	; 161
     7e4:	f0 e0       	ldi	r31, 0x00	; 0
     7e6:	80 81       	ld	r24, Z
     7e8:	88 2f       	mov	r24, r24
     7ea:	90 e0       	ldi	r25, 0x00	; 0
     7ec:	80 74       	andi	r24, 0x40	; 64
     7ee:	90 70       	andi	r25, 0x00	; 0
     7f0:	00 97       	sbiw	r24, 0x00	; 0
     7f2:	81 f0       	breq	.+32     	; 0x814 <__vector_41+0x76>
    {
        TCCR4B &= ~(1<<ICES4); // Next time detect falling edge
     7f4:	a1 ea       	ldi	r26, 0xA1	; 161
     7f6:	b0 e0       	ldi	r27, 0x00	; 0
     7f8:	e1 ea       	ldi	r30, 0xA1	; 161
     7fa:	f0 e0       	ldi	r31, 0x00	; 0
     7fc:	80 81       	ld	r24, Z
     7fe:	8f 7b       	andi	r24, 0xBF	; 191
     800:	8c 93       	st	X, r24
        waarde1 = TCNT4; // Save current count
     802:	e4 ea       	ldi	r30, 0xA4	; 164
     804:	f0 e0       	ldi	r31, 0x00	; 0
     806:	80 81       	ld	r24, Z
     808:	91 81       	ldd	r25, Z+1	; 0x01
     80a:	90 93 1f 03 	sts	0x031F, r25
     80e:	80 93 1e 03 	sts	0x031E, r24
     812:	aa c0       	rjmp	.+340    	; 0x968 <__vector_41+0x1ca>
    }
    else // On falling edge
    {
        TCCR4B |= 0; // geen interrupts meer
     814:	a1 ea       	ldi	r26, 0xA1	; 161
     816:	b0 e0       	ldi	r27, 0x00	; 0
     818:	e1 ea       	ldi	r30, 0xA1	; 161
     81a:	f0 e0       	ldi	r31, 0x00	; 0
     81c:	80 81       	ld	r24, Z
     81e:	8c 93       	st	X, r24
        waarde2 = TCNT4; // Save current count
     820:	e4 ea       	ldi	r30, 0xA4	; 164
     822:	f0 e0       	ldi	r31, 0x00	; 0
     824:	80 81       	ld	r24, Z
     826:	91 81       	ldd	r25, Z+1	; 0x01
     828:	90 93 19 03 	sts	0x0319, r25
     82c:	80 93 18 03 	sts	0x0318, r24
        counts = (uint32_t)waarde2 - (uint32_t)waarde1;
     830:	80 91 18 03 	lds	r24, 0x0318
     834:	90 91 19 03 	lds	r25, 0x0319
     838:	9c 01       	movw	r18, r24
     83a:	40 e0       	ldi	r20, 0x00	; 0
     83c:	50 e0       	ldi	r21, 0x00	; 0
     83e:	80 91 1e 03 	lds	r24, 0x031E
     842:	90 91 1f 03 	lds	r25, 0x031F
     846:	cc 01       	movw	r24, r24
     848:	a0 e0       	ldi	r26, 0x00	; 0
     84a:	b0 e0       	ldi	r27, 0x00	; 0
     84c:	79 01       	movw	r14, r18
     84e:	8a 01       	movw	r16, r20
     850:	e8 1a       	sub	r14, r24
     852:	f9 0a       	sbc	r15, r25
     854:	0a 0b       	sbc	r16, r26
     856:	1b 0b       	sbc	r17, r27
     858:	d8 01       	movw	r26, r16
     85a:	c7 01       	movw	r24, r14
     85c:	80 93 1a 03 	sts	0x031A, r24
     860:	90 93 1b 03 	sts	0x031B, r25
     864:	a0 93 1c 03 	sts	0x031C, r26
     868:	b0 93 1d 03 	sts	0x031D, r27
		if ((ultasoon_nr = 3))
     86c:	83 e0       	ldi	r24, 0x03	; 3
     86e:	90 e0       	ldi	r25, 0x00	; 0
     870:	90 93 17 03 	sts	0x0317, r25
     874:	80 93 16 03 	sts	0x0316, r24
		{
        ultrasoon = (counts/2)*0.01715; //snelheid van geluid keer de tijd die de klok vertegenwoordigd (16/8 = 2 1/2E6= 5E-7)
     878:	80 91 1a 03 	lds	r24, 0x031A
     87c:	90 91 1b 03 	lds	r25, 0x031B
     880:	a0 91 1c 03 	lds	r26, 0x031C
     884:	b0 91 1d 03 	lds	r27, 0x031D
     888:	b6 95       	lsr	r27
     88a:	a7 95       	ror	r26
     88c:	97 95       	ror	r25
     88e:	87 95       	ror	r24
     890:	bc 01       	movw	r22, r24
     892:	cd 01       	movw	r24, r26
     894:	0e 94 11 0b 	call	0x1622	; 0x1622 <__floatunsisf>
     898:	dc 01       	movw	r26, r24
     89a:	cb 01       	movw	r24, r22
     89c:	bc 01       	movw	r22, r24
     89e:	cd 01       	movw	r24, r26
     8a0:	28 e2       	ldi	r18, 0x28	; 40
     8a2:	3e e7       	ldi	r19, 0x7E	; 126
     8a4:	4c e8       	ldi	r20, 0x8C	; 140
     8a6:	5c e3       	ldi	r21, 0x3C	; 60
     8a8:	0e 94 a5 08 	call	0x114a	; 0x114a <__mulsf3>
     8ac:	dc 01       	movw	r26, r24
     8ae:	cb 01       	movw	r24, r22
     8b0:	80 93 08 03 	sts	0x0308, r24
     8b4:	90 93 09 03 	sts	0x0309, r25
     8b8:	a0 93 0a 03 	sts	0x030A, r26
     8bc:	b0 93 0b 03 	sts	0x030B, r27
		}
		if ((ultasoon_nr = 2))
     8c0:	82 e0       	ldi	r24, 0x02	; 2
     8c2:	90 e0       	ldi	r25, 0x00	; 0
     8c4:	90 93 17 03 	sts	0x0317, r25
     8c8:	80 93 16 03 	sts	0x0316, r24
		{
        ultrasoon_links = (counts/2)*0.01715; //snelheid van geluid keer de tijd die de klok vertegenwoordigd (16/8 = 2 1/2E6= 5E-7)
     8cc:	80 91 1a 03 	lds	r24, 0x031A
     8d0:	90 91 1b 03 	lds	r25, 0x031B
     8d4:	a0 91 1c 03 	lds	r26, 0x031C
     8d8:	b0 91 1d 03 	lds	r27, 0x031D
     8dc:	b6 95       	lsr	r27
     8de:	a7 95       	ror	r26
     8e0:	97 95       	ror	r25
     8e2:	87 95       	ror	r24
     8e4:	bc 01       	movw	r22, r24
     8e6:	cd 01       	movw	r24, r26
     8e8:	0e 94 11 0b 	call	0x1622	; 0x1622 <__floatunsisf>
     8ec:	dc 01       	movw	r26, r24
     8ee:	cb 01       	movw	r24, r22
     8f0:	bc 01       	movw	r22, r24
     8f2:	cd 01       	movw	r24, r26
     8f4:	28 e2       	ldi	r18, 0x28	; 40
     8f6:	3e e7       	ldi	r19, 0x7E	; 126
     8f8:	4c e8       	ldi	r20, 0x8C	; 140
     8fa:	5c e3       	ldi	r21, 0x3C	; 60
     8fc:	0e 94 a5 08 	call	0x114a	; 0x114a <__mulsf3>
     900:	dc 01       	movw	r26, r24
     902:	cb 01       	movw	r24, r22
     904:	80 93 0c 03 	sts	0x030C, r24
     908:	90 93 0d 03 	sts	0x030D, r25
     90c:	a0 93 0e 03 	sts	0x030E, r26
     910:	b0 93 0f 03 	sts	0x030F, r27
		}
		if ((ultasoon_nr = 1))
     914:	81 e0       	ldi	r24, 0x01	; 1
     916:	90 e0       	ldi	r25, 0x00	; 0
     918:	90 93 17 03 	sts	0x0317, r25
     91c:	80 93 16 03 	sts	0x0316, r24
		{
        ultrasoon_rechts = (counts/2)*0.01715; //snelheid van geluid keer de tijd die de klok vertegenwoordigd (16/8 = 2 1/2E6= 5E-7)
     920:	80 91 1a 03 	lds	r24, 0x031A
     924:	90 91 1b 03 	lds	r25, 0x031B
     928:	a0 91 1c 03 	lds	r26, 0x031C
     92c:	b0 91 1d 03 	lds	r27, 0x031D
     930:	b6 95       	lsr	r27
     932:	a7 95       	ror	r26
     934:	97 95       	ror	r25
     936:	87 95       	ror	r24
     938:	bc 01       	movw	r22, r24
     93a:	cd 01       	movw	r24, r26
     93c:	0e 94 11 0b 	call	0x1622	; 0x1622 <__floatunsisf>
     940:	dc 01       	movw	r26, r24
     942:	cb 01       	movw	r24, r22
     944:	bc 01       	movw	r22, r24
     946:	cd 01       	movw	r24, r26
     948:	28 e2       	ldi	r18, 0x28	; 40
     94a:	3e e7       	ldi	r19, 0x7E	; 126
     94c:	4c e8       	ldi	r20, 0x8C	; 140
     94e:	5c e3       	ldi	r21, 0x3C	; 60
     950:	0e 94 a5 08 	call	0x114a	; 0x114a <__mulsf3>
     954:	dc 01       	movw	r26, r24
     956:	cb 01       	movw	r24, r22
     958:	80 93 10 03 	sts	0x0310, r24
     95c:	90 93 11 03 	sts	0x0311, r25
     960:	a0 93 12 03 	sts	0x0312, r26
     964:	b0 93 13 03 	sts	0x0313, r27
		}
    }
}
}
     968:	0f 90       	pop	r0
     96a:	0f 90       	pop	r0
     96c:	cf 91       	pop	r28
     96e:	df 91       	pop	r29
     970:	ff 91       	pop	r31
     972:	ef 91       	pop	r30
     974:	bf 91       	pop	r27
     976:	af 91       	pop	r26
     978:	9f 91       	pop	r25
     97a:	8f 91       	pop	r24
     97c:	7f 91       	pop	r23
     97e:	6f 91       	pop	r22
     980:	5f 91       	pop	r21
     982:	4f 91       	pop	r20
     984:	3f 91       	pop	r19
     986:	2f 91       	pop	r18
     988:	1f 91       	pop	r17
     98a:	0f 91       	pop	r16
     98c:	ff 90       	pop	r15
     98e:	ef 90       	pop	r14
     990:	0f 90       	pop	r0
     992:	00 92 5b 00 	sts	0x005B, r0
     996:	0f 90       	pop	r0
     998:	0f be       	out	0x3f, r0	; 63
     99a:	0f 90       	pop	r0
     99c:	1f 90       	pop	r1
     99e:	18 95       	reti

000009a0 <__vector_42>:

ISR(TIMER4_COMPA_vect)
{
     9a0:	1f 92       	push	r1
     9a2:	0f 92       	push	r0
     9a4:	0f b6       	in	r0, 0x3f	; 63
     9a6:	0f 92       	push	r0
     9a8:	00 90 5b 00 	lds	r0, 0x005B
     9ac:	0f 92       	push	r0
     9ae:	11 24       	eor	r1, r1
     9b0:	8f 93       	push	r24
     9b2:	af 93       	push	r26
     9b4:	bf 93       	push	r27
     9b6:	ef 93       	push	r30
     9b8:	ff 93       	push	r31
     9ba:	df 93       	push	r29
     9bc:	cf 93       	push	r28
     9be:	cd b7       	in	r28, 0x3d	; 61
     9c0:	de b7       	in	r29, 0x3e	; 62
    PORTC &= ~(1<<PC5);
     9c2:	a8 e2       	ldi	r26, 0x28	; 40
     9c4:	b0 e0       	ldi	r27, 0x00	; 0
     9c6:	e8 e2       	ldi	r30, 0x28	; 40
     9c8:	f0 e0       	ldi	r31, 0x00	; 0
     9ca:	80 81       	ld	r24, Z
     9cc:	8f 7d       	andi	r24, 0xDF	; 223
     9ce:	8c 93       	st	X, r24
    PORTC &= ~(1<<PC6);
     9d0:	a8 e2       	ldi	r26, 0x28	; 40
     9d2:	b0 e0       	ldi	r27, 0x00	; 0
     9d4:	e8 e2       	ldi	r30, 0x28	; 40
     9d6:	f0 e0       	ldi	r31, 0x00	; 0
     9d8:	80 81       	ld	r24, Z
     9da:	8f 7b       	andi	r24, 0xBF	; 191
     9dc:	8c 93       	st	X, r24
    PORTC &= ~(1<<PC7);
     9de:	a8 e2       	ldi	r26, 0x28	; 40
     9e0:	b0 e0       	ldi	r27, 0x00	; 0
     9e2:	e8 e2       	ldi	r30, 0x28	; 40
     9e4:	f0 e0       	ldi	r31, 0x00	; 0
     9e6:	80 81       	ld	r24, Z
     9e8:	8f 77       	andi	r24, 0x7F	; 127
     9ea:	8c 93       	st	X, r24
    TIMSK4 = (1 << ICIE4);
     9ec:	e2 e7       	ldi	r30, 0x72	; 114
     9ee:	f0 e0       	ldi	r31, 0x00	; 0
     9f0:	80 e2       	ldi	r24, 0x20	; 32
     9f2:	80 83       	st	Z, r24
    TCCR4B |= (1 << ICES4);
     9f4:	a1 ea       	ldi	r26, 0xA1	; 161
     9f6:	b0 e0       	ldi	r27, 0x00	; 0
     9f8:	e1 ea       	ldi	r30, 0xA1	; 161
     9fa:	f0 e0       	ldi	r31, 0x00	; 0
     9fc:	80 81       	ld	r24, Z
     9fe:	80 64       	ori	r24, 0x40	; 64
     a00:	8c 93       	st	X, r24
}
     a02:	cf 91       	pop	r28
     a04:	df 91       	pop	r29
     a06:	ff 91       	pop	r31
     a08:	ef 91       	pop	r30
     a0a:	bf 91       	pop	r27
     a0c:	af 91       	pop	r26
     a0e:	8f 91       	pop	r24
     a10:	0f 90       	pop	r0
     a12:	00 92 5b 00 	sts	0x005B, r0
     a16:	0f 90       	pop	r0
     a18:	0f be       	out	0x3f, r0	; 63
     a1a:	0f 90       	pop	r0
     a1c:	1f 90       	pop	r1
     a1e:	18 95       	reti

00000a20 <__vector_15>:

ISR(TIMER2_OVF_vect)
{
     a20:	1f 92       	push	r1
     a22:	0f 92       	push	r0
     a24:	0f b6       	in	r0, 0x3f	; 63
     a26:	0f 92       	push	r0
     a28:	00 90 5b 00 	lds	r0, 0x005B
     a2c:	0f 92       	push	r0
     a2e:	11 24       	eor	r1, r1
     a30:	8f 93       	push	r24
     a32:	9f 93       	push	r25
     a34:	af 93       	push	r26
     a36:	bf 93       	push	r27
     a38:	ef 93       	push	r30
     a3a:	ff 93       	push	r31
     a3c:	df 93       	push	r29
     a3e:	cf 93       	push	r28
     a40:	cd b7       	in	r28, 0x3d	; 61
     a42:	de b7       	in	r29, 0x3e	; 62
    PORTC |= (1<<PC5);
     a44:	a8 e2       	ldi	r26, 0x28	; 40
     a46:	b0 e0       	ldi	r27, 0x00	; 0
     a48:	e8 e2       	ldi	r30, 0x28	; 40
     a4a:	f0 e0       	ldi	r31, 0x00	; 0
     a4c:	80 81       	ld	r24, Z
     a4e:	80 62       	ori	r24, 0x20	; 32
     a50:	8c 93       	st	X, r24
    TCNT4 =0;
     a52:	e4 ea       	ldi	r30, 0xA4	; 164
     a54:	f0 e0       	ldi	r31, 0x00	; 0
     a56:	11 82       	std	Z+1, r1	; 0x01
     a58:	10 82       	st	Z, r1
    OCR4A = 20000;
     a5a:	e8 ea       	ldi	r30, 0xA8	; 168
     a5c:	f0 e0       	ldi	r31, 0x00	; 0
     a5e:	80 e2       	ldi	r24, 0x20	; 32
     a60:	9e e4       	ldi	r25, 0x4E	; 78
     a62:	91 83       	std	Z+1, r25	; 0x01
     a64:	80 83       	st	Z, r24
	ultasoon_nr = 3; //VOOR
     a66:	83 e0       	ldi	r24, 0x03	; 3
     a68:	90 e0       	ldi	r25, 0x00	; 0
     a6a:	90 93 17 03 	sts	0x0317, r25
     a6e:	80 93 16 03 	sts	0x0316, r24
}
     a72:	cf 91       	pop	r28
     a74:	df 91       	pop	r29
     a76:	ff 91       	pop	r31
     a78:	ef 91       	pop	r30
     a7a:	bf 91       	pop	r27
     a7c:	af 91       	pop	r26
     a7e:	9f 91       	pop	r25
     a80:	8f 91       	pop	r24
     a82:	0f 90       	pop	r0
     a84:	00 92 5b 00 	sts	0x005B, r0
     a88:	0f 90       	pop	r0
     a8a:	0f be       	out	0x3f, r0	; 63
     a8c:	0f 90       	pop	r0
     a8e:	1f 90       	pop	r1
     a90:	18 95       	reti

00000a92 <__vector_13>:

ISR(TIMER2_COMPA_vect)
{
     a92:	1f 92       	push	r1
     a94:	0f 92       	push	r0
     a96:	0f b6       	in	r0, 0x3f	; 63
     a98:	0f 92       	push	r0
     a9a:	00 90 5b 00 	lds	r0, 0x005B
     a9e:	0f 92       	push	r0
     aa0:	11 24       	eor	r1, r1
     aa2:	8f 93       	push	r24
     aa4:	9f 93       	push	r25
     aa6:	af 93       	push	r26
     aa8:	bf 93       	push	r27
     aaa:	ef 93       	push	r30
     aac:	ff 93       	push	r31
     aae:	df 93       	push	r29
     ab0:	cf 93       	push	r28
     ab2:	cd b7       	in	r28, 0x3d	; 61
     ab4:	de b7       	in	r29, 0x3e	; 62
    PORTC |= (1<<PC6); //LINKS
     ab6:	a8 e2       	ldi	r26, 0x28	; 40
     ab8:	b0 e0       	ldi	r27, 0x00	; 0
     aba:	e8 e2       	ldi	r30, 0x28	; 40
     abc:	f0 e0       	ldi	r31, 0x00	; 0
     abe:	80 81       	ld	r24, Z
     ac0:	80 64       	ori	r24, 0x40	; 64
     ac2:	8c 93       	st	X, r24
    TCNT4 =0;
     ac4:	e4 ea       	ldi	r30, 0xA4	; 164
     ac6:	f0 e0       	ldi	r31, 0x00	; 0
     ac8:	11 82       	std	Z+1, r1	; 0x01
     aca:	10 82       	st	Z, r1
    OCR4A = 20000;
     acc:	e8 ea       	ldi	r30, 0xA8	; 168
     ace:	f0 e0       	ldi	r31, 0x00	; 0
     ad0:	80 e2       	ldi	r24, 0x20	; 32
     ad2:	9e e4       	ldi	r25, 0x4E	; 78
     ad4:	91 83       	std	Z+1, r25	; 0x01
     ad6:	80 83       	st	Z, r24
	ultasoon_nr = 2;
     ad8:	82 e0       	ldi	r24, 0x02	; 2
     ada:	90 e0       	ldi	r25, 0x00	; 0
     adc:	90 93 17 03 	sts	0x0317, r25
     ae0:	80 93 16 03 	sts	0x0316, r24
}
     ae4:	cf 91       	pop	r28
     ae6:	df 91       	pop	r29
     ae8:	ff 91       	pop	r31
     aea:	ef 91       	pop	r30
     aec:	bf 91       	pop	r27
     aee:	af 91       	pop	r26
     af0:	9f 91       	pop	r25
     af2:	8f 91       	pop	r24
     af4:	0f 90       	pop	r0
     af6:	00 92 5b 00 	sts	0x005B, r0
     afa:	0f 90       	pop	r0
     afc:	0f be       	out	0x3f, r0	; 63
     afe:	0f 90       	pop	r0
     b00:	1f 90       	pop	r1
     b02:	18 95       	reti

00000b04 <__vector_14>:

ISR(TIMER2_COMPB_vect)
{
     b04:	1f 92       	push	r1
     b06:	0f 92       	push	r0
     b08:	0f b6       	in	r0, 0x3f	; 63
     b0a:	0f 92       	push	r0
     b0c:	00 90 5b 00 	lds	r0, 0x005B
     b10:	0f 92       	push	r0
     b12:	11 24       	eor	r1, r1
     b14:	8f 93       	push	r24
     b16:	9f 93       	push	r25
     b18:	af 93       	push	r26
     b1a:	bf 93       	push	r27
     b1c:	ef 93       	push	r30
     b1e:	ff 93       	push	r31
     b20:	df 93       	push	r29
     b22:	cf 93       	push	r28
     b24:	cd b7       	in	r28, 0x3d	; 61
     b26:	de b7       	in	r29, 0x3e	; 62
    PORTC |= (1<<PC7); //RECHTS
     b28:	a8 e2       	ldi	r26, 0x28	; 40
     b2a:	b0 e0       	ldi	r27, 0x00	; 0
     b2c:	e8 e2       	ldi	r30, 0x28	; 40
     b2e:	f0 e0       	ldi	r31, 0x00	; 0
     b30:	80 81       	ld	r24, Z
     b32:	80 68       	ori	r24, 0x80	; 128
     b34:	8c 93       	st	X, r24
    TCNT4 =0;
     b36:	e4 ea       	ldi	r30, 0xA4	; 164
     b38:	f0 e0       	ldi	r31, 0x00	; 0
     b3a:	11 82       	std	Z+1, r1	; 0x01
     b3c:	10 82       	st	Z, r1
    OCR4A = 20000;
     b3e:	e8 ea       	ldi	r30, 0xA8	; 168
     b40:	f0 e0       	ldi	r31, 0x00	; 0
     b42:	80 e2       	ldi	r24, 0x20	; 32
     b44:	9e e4       	ldi	r25, 0x4E	; 78
     b46:	91 83       	std	Z+1, r25	; 0x01
     b48:	80 83       	st	Z, r24
	ultasoon_nr = 1;
     b4a:	81 e0       	ldi	r24, 0x01	; 1
     b4c:	90 e0       	ldi	r25, 0x00	; 0
     b4e:	90 93 17 03 	sts	0x0317, r25
     b52:	80 93 16 03 	sts	0x0316, r24
}
     b56:	cf 91       	pop	r28
     b58:	df 91       	pop	r29
     b5a:	ff 91       	pop	r31
     b5c:	ef 91       	pop	r30
     b5e:	bf 91       	pop	r27
     b60:	af 91       	pop	r26
     b62:	9f 91       	pop	r25
     b64:	8f 91       	pop	r24
     b66:	0f 90       	pop	r0
     b68:	00 92 5b 00 	sts	0x005B, r0
     b6c:	0f 90       	pop	r0
     b6e:	0f be       	out	0x3f, r0	; 63
     b70:	0f 90       	pop	r0
     b72:	1f 90       	pop	r1
     b74:	18 95       	reti

00000b76 <__vector_23>:

ISR(TIMER0_OVF_vect)
{
     b76:	1f 92       	push	r1
     b78:	0f 92       	push	r0
     b7a:	0f b6       	in	r0, 0x3f	; 63
     b7c:	0f 92       	push	r0
     b7e:	00 90 5b 00 	lds	r0, 0x005B
     b82:	0f 92       	push	r0
     b84:	11 24       	eor	r1, r1
     b86:	8f 93       	push	r24
     b88:	af 93       	push	r26
     b8a:	bf 93       	push	r27
     b8c:	ef 93       	push	r30
     b8e:	ff 93       	push	r31
     b90:	df 93       	push	r29
     b92:	cf 93       	push	r28
     b94:	cd b7       	in	r28, 0x3d	; 61
     b96:	de b7       	in	r29, 0x3e	; 62
    if (OCR0A == 0)
     b98:	e7 e4       	ldi	r30, 0x47	; 71
     b9a:	f0 e0       	ldi	r31, 0x00	; 0
     b9c:	80 81       	ld	r24, Z
     b9e:	88 23       	and	r24, r24
     ba0:	39 f4       	brne	.+14     	; 0xbb0 <__vector_23+0x3a>
    {
        PORTE &= ~(1<<PE4);
     ba2:	ae e2       	ldi	r26, 0x2E	; 46
     ba4:	b0 e0       	ldi	r27, 0x00	; 0
     ba6:	ee e2       	ldi	r30, 0x2E	; 46
     ba8:	f0 e0       	ldi	r31, 0x00	; 0
     baa:	80 81       	ld	r24, Z
     bac:	8f 7e       	andi	r24, 0xEF	; 239
     bae:	8c 93       	st	X, r24
    }
    if (OCR0B == 0)
     bb0:	e8 e4       	ldi	r30, 0x48	; 72
     bb2:	f0 e0       	ldi	r31, 0x00	; 0
     bb4:	80 81       	ld	r24, Z
     bb6:	88 23       	and	r24, r24
     bb8:	39 f4       	brne	.+14     	; 0xbc8 <__vector_23+0x52>
    {
        PORTE &= ~(1<<PE3);
     bba:	ae e2       	ldi	r26, 0x2E	; 46
     bbc:	b0 e0       	ldi	r27, 0x00	; 0
     bbe:	ee e2       	ldi	r30, 0x2E	; 46
     bc0:	f0 e0       	ldi	r31, 0x00	; 0
     bc2:	80 81       	ld	r24, Z
     bc4:	87 7f       	andi	r24, 0xF7	; 247
     bc6:	8c 93       	st	X, r24
    }
    if (OCR0A != 0)
     bc8:	e7 e4       	ldi	r30, 0x47	; 71
     bca:	f0 e0       	ldi	r31, 0x00	; 0
     bcc:	80 81       	ld	r24, Z
     bce:	88 23       	and	r24, r24
     bd0:	39 f0       	breq	.+14     	; 0xbe0 <__vector_23+0x6a>
    {
        PORTE |= (1<<PE4);
     bd2:	ae e2       	ldi	r26, 0x2E	; 46
     bd4:	b0 e0       	ldi	r27, 0x00	; 0
     bd6:	ee e2       	ldi	r30, 0x2E	; 46
     bd8:	f0 e0       	ldi	r31, 0x00	; 0
     bda:	80 81       	ld	r24, Z
     bdc:	80 61       	ori	r24, 0x10	; 16
     bde:	8c 93       	st	X, r24
    }
    if (OCR0B != 0)
     be0:	e8 e4       	ldi	r30, 0x48	; 72
     be2:	f0 e0       	ldi	r31, 0x00	; 0
     be4:	80 81       	ld	r24, Z
     be6:	88 23       	and	r24, r24
     be8:	39 f0       	breq	.+14     	; 0xbf8 <__vector_23+0x82>
    {
        PORTE |= (1<<PE3);
     bea:	ae e2       	ldi	r26, 0x2E	; 46
     bec:	b0 e0       	ldi	r27, 0x00	; 0
     bee:	ee e2       	ldi	r30, 0x2E	; 46
     bf0:	f0 e0       	ldi	r31, 0x00	; 0
     bf2:	80 81       	ld	r24, Z
     bf4:	88 60       	ori	r24, 0x08	; 8
     bf6:	8c 93       	st	X, r24
    }
}
     bf8:	cf 91       	pop	r28
     bfa:	df 91       	pop	r29
     bfc:	ff 91       	pop	r31
     bfe:	ef 91       	pop	r30
     c00:	bf 91       	pop	r27
     c02:	af 91       	pop	r26
     c04:	8f 91       	pop	r24
     c06:	0f 90       	pop	r0
     c08:	00 92 5b 00 	sts	0x005B, r0
     c0c:	0f 90       	pop	r0
     c0e:	0f be       	out	0x3f, r0	; 63
     c10:	0f 90       	pop	r0
     c12:	1f 90       	pop	r1
     c14:	18 95       	reti

00000c16 <__vector_21>:

ISR(TIMER0_COMPA_vect)
{
     c16:	1f 92       	push	r1
     c18:	0f 92       	push	r0
     c1a:	0f b6       	in	r0, 0x3f	; 63
     c1c:	0f 92       	push	r0
     c1e:	00 90 5b 00 	lds	r0, 0x005B
     c22:	0f 92       	push	r0
     c24:	11 24       	eor	r1, r1
     c26:	8f 93       	push	r24
     c28:	af 93       	push	r26
     c2a:	bf 93       	push	r27
     c2c:	ef 93       	push	r30
     c2e:	ff 93       	push	r31
     c30:	df 93       	push	r29
     c32:	cf 93       	push	r28
     c34:	cd b7       	in	r28, 0x3d	; 61
     c36:	de b7       	in	r29, 0x3e	; 62
    PORTE &= ~(1<<PE4);
     c38:	ae e2       	ldi	r26, 0x2E	; 46
     c3a:	b0 e0       	ldi	r27, 0x00	; 0
     c3c:	ee e2       	ldi	r30, 0x2E	; 46
     c3e:	f0 e0       	ldi	r31, 0x00	; 0
     c40:	80 81       	ld	r24, Z
     c42:	8f 7e       	andi	r24, 0xEF	; 239
     c44:	8c 93       	st	X, r24
}
     c46:	cf 91       	pop	r28
     c48:	df 91       	pop	r29
     c4a:	ff 91       	pop	r31
     c4c:	ef 91       	pop	r30
     c4e:	bf 91       	pop	r27
     c50:	af 91       	pop	r26
     c52:	8f 91       	pop	r24
     c54:	0f 90       	pop	r0
     c56:	00 92 5b 00 	sts	0x005B, r0
     c5a:	0f 90       	pop	r0
     c5c:	0f be       	out	0x3f, r0	; 63
     c5e:	0f 90       	pop	r0
     c60:	1f 90       	pop	r1
     c62:	18 95       	reti

00000c64 <__vector_22>:

ISR(TIMER0_COMPB_vect)
{
     c64:	1f 92       	push	r1
     c66:	0f 92       	push	r0
     c68:	0f b6       	in	r0, 0x3f	; 63
     c6a:	0f 92       	push	r0
     c6c:	00 90 5b 00 	lds	r0, 0x005B
     c70:	0f 92       	push	r0
     c72:	11 24       	eor	r1, r1
     c74:	8f 93       	push	r24
     c76:	af 93       	push	r26
     c78:	bf 93       	push	r27
     c7a:	ef 93       	push	r30
     c7c:	ff 93       	push	r31
     c7e:	df 93       	push	r29
     c80:	cf 93       	push	r28
     c82:	cd b7       	in	r28, 0x3d	; 61
     c84:	de b7       	in	r29, 0x3e	; 62
    PORTE &= ~(1<<PE3);
     c86:	ae e2       	ldi	r26, 0x2E	; 46
     c88:	b0 e0       	ldi	r27, 0x00	; 0
     c8a:	ee e2       	ldi	r30, 0x2E	; 46
     c8c:	f0 e0       	ldi	r31, 0x00	; 0
     c8e:	80 81       	ld	r24, Z
     c90:	87 7f       	andi	r24, 0xF7	; 247
     c92:	8c 93       	st	X, r24
}
     c94:	cf 91       	pop	r28
     c96:	df 91       	pop	r29
     c98:	ff 91       	pop	r31
     c9a:	ef 91       	pop	r30
     c9c:	bf 91       	pop	r27
     c9e:	af 91       	pop	r26
     ca0:	8f 91       	pop	r24
     ca2:	0f 90       	pop	r0
     ca4:	00 92 5b 00 	sts	0x005B, r0
     ca8:	0f 90       	pop	r0
     caa:	0f be       	out	0x3f, r0	; 63
     cac:	0f 90       	pop	r0
     cae:	1f 90       	pop	r1
     cb0:	18 95       	reti

00000cb2 <init_motor>:

void init_motor (void)
{
     cb2:	df 93       	push	r29
     cb4:	cf 93       	push	r28
     cb6:	cd b7       	in	r28, 0x3d	; 61
     cb8:	de b7       	in	r29, 0x3e	; 62
    // Output low
    PORTE &= ~(1<<PE4);
     cba:	ae e2       	ldi	r26, 0x2E	; 46
     cbc:	b0 e0       	ldi	r27, 0x00	; 0
     cbe:	ee e2       	ldi	r30, 0x2E	; 46
     cc0:	f0 e0       	ldi	r31, 0x00	; 0
     cc2:	80 81       	ld	r24, Z
     cc4:	8f 7e       	andi	r24, 0xEF	; 239
     cc6:	8c 93       	st	X, r24
    PORTE &= ~(1<<PE3);
     cc8:	ae e2       	ldi	r26, 0x2E	; 46
     cca:	b0 e0       	ldi	r27, 0x00	; 0
     ccc:	ee e2       	ldi	r30, 0x2E	; 46
     cce:	f0 e0       	ldi	r31, 0x00	; 0
     cd0:	80 81       	ld	r24, Z
     cd2:	87 7f       	andi	r24, 0xF7	; 247
     cd4:	8c 93       	st	X, r24

    //Use mode 0, clkdiv = 64 klok 0 Pwm signalen
    TCCR0A = 0;
     cd6:	e4 e4       	ldi	r30, 0x44	; 68
     cd8:	f0 e0       	ldi	r31, 0x00	; 0
     cda:	10 82       	st	Z, r1
    TCCR0B = (0<<CS02) | (1<<CS01) | (1<<CS00);
     cdc:	e5 e4       	ldi	r30, 0x45	; 69
     cde:	f0 e0       	ldi	r31, 0x00	; 0
     ce0:	83 e0       	ldi	r24, 0x03	; 3
     ce2:	80 83       	st	Z, r24
    TIMSK0 = (1<<OCIE0B) | (1<<OCIE0A) | (1<<TOIE0);
     ce4:	ee e6       	ldi	r30, 0x6E	; 110
     ce6:	f0 e0       	ldi	r31, 0x00	; 0
     ce8:	87 e0       	ldi	r24, 0x07	; 7
     cea:	80 83       	st	Z, r24
    OCR0A = 0;
     cec:	e7 e4       	ldi	r30, 0x47	; 71
     cee:	f0 e0       	ldi	r31, 0x00	; 0
     cf0:	10 82       	st	Z, r1
    OCR0B = 0;
     cf2:	e8 e4       	ldi	r30, 0x48	; 72
     cf4:	f0 e0       	ldi	r31, 0x00	; 0
     cf6:	10 82       	st	Z, r1

    //Use mode 0, clkdiv = 256 klok 1 globale klok
    TCCR1A = 0;
     cf8:	e0 e8       	ldi	r30, 0x80	; 128
     cfa:	f0 e0       	ldi	r31, 0x00	; 0
     cfc:	10 82       	st	Z, r1
    TCCR1B = (1<<CS02) | (0<<CS01) | (0<<CS00);
     cfe:	e1 e8       	ldi	r30, 0x81	; 129
     d00:	f0 e0       	ldi	r31, 0x00	; 0
     d02:	84 e0       	ldi	r24, 0x04	; 4
     d04:	80 83       	st	Z, r24
    TIMSK1 = (1<<OCIE0A);
     d06:	ef e6       	ldi	r30, 0x6F	; 111
     d08:	f0 e0       	ldi	r31, 0x00	; 0
     d0a:	82 e0       	ldi	r24, 0x02	; 2
     d0c:	80 83       	st	Z, r24
    OCR1A = 6250; //0.1 van een seconde dus kan gebruikt worden om een grote klok te maken voor 25.5 seconden
     d0e:	e8 e8       	ldi	r30, 0x88	; 136
     d10:	f0 e0       	ldi	r31, 0x00	; 0
     d12:	8a e6       	ldi	r24, 0x6A	; 106
     d14:	98 e1       	ldi	r25, 0x18	; 24
     d16:	91 83       	std	Z+1, r25	; 0x01
     d18:	80 83       	st	Z, r24

    //Use mode 0, clkdiv = 1024   klok 2 globale trigger
    TCCR2A = 0;
     d1a:	e0 eb       	ldi	r30, 0xB0	; 176
     d1c:	f0 e0       	ldi	r31, 0x00	; 0
     d1e:	10 82       	st	Z, r1
    TCCR2B = (1<<CS22) | (0<<CS21) | (1<<CS20);
     d20:	e1 eb       	ldi	r30, 0xB1	; 177
     d22:	f0 e0       	ldi	r31, 0x00	; 0
     d24:	85 e0       	ldi	r24, 0x05	; 5
     d26:	80 83       	st	Z, r24
    OCR2A = 85;
     d28:	e3 eb       	ldi	r30, 0xB3	; 179
     d2a:	f0 e0       	ldi	r31, 0x00	; 0
     d2c:	85 e5       	ldi	r24, 0x55	; 85
     d2e:	80 83       	st	Z, r24
    OCR2B = 170;
     d30:	e4 eb       	ldi	r30, 0xB4	; 180
     d32:	f0 e0       	ldi	r31, 0x00	; 0
     d34:	8a ea       	ldi	r24, 0xAA	; 170
     d36:	80 83       	st	Z, r24
    TIMSK2 = (1<<OCIE2B) | (1<<OCIE2A) | (1<<TOIE2);
     d38:	e0 e7       	ldi	r30, 0x70	; 112
     d3a:	f0 e0       	ldi	r31, 0x00	; 0
     d3c:	87 e0       	ldi	r24, 0x07	; 7
     d3e:	80 83       	st	Z, r24

    //Use mode 0, clkdiv = 8 klok 4 ultrasoon
    TCCR4A = 0;
     d40:	e0 ea       	ldi	r30, 0xA0	; 160
     d42:	f0 e0       	ldi	r31, 0x00	; 0
     d44:	10 82       	st	Z, r1
    TCCR4B = (0<<CS42) | (1<<CS41) | (0<<CS40);
     d46:	e1 ea       	ldi	r30, 0xA1	; 161
     d48:	f0 e0       	ldi	r31, 0x00	; 0
     d4a:	82 e0       	ldi	r24, 0x02	; 2
     d4c:	80 83       	st	Z, r24
    TIMSK4 = (1<<OCIE4A);
     d4e:	e2 e7       	ldi	r30, 0x72	; 114
     d50:	f0 e0       	ldi	r31, 0x00	; 0
     d52:	82 e0       	ldi	r24, 0x02	; 2
     d54:	80 83       	st	Z, r24

    // Interupts geactiveerd*/
    sei();
     d56:	78 94       	sei
}
     d58:	cf 91       	pop	r28
     d5a:	df 91       	pop	r29
     d5c:	08 95       	ret

00000d5e <motor>:

void motor (int Af, int Bf)
{
     d5e:	df 93       	push	r29
     d60:	cf 93       	push	r28
     d62:	00 d0       	rcall	.+0      	; 0xd64 <motor+0x6>
     d64:	0f 92       	push	r0
     d66:	cd b7       	in	r28, 0x3d	; 61
     d68:	de b7       	in	r29, 0x3e	; 62
     d6a:	9a 83       	std	Y+2, r25	; 0x02
     d6c:	89 83       	std	Y+1, r24	; 0x01
     d6e:	7c 83       	std	Y+4, r23	; 0x04
     d70:	6b 83       	std	Y+3, r22	; 0x03
            PORTJ |= (1 << PJ0);
     d72:	a5 e0       	ldi	r26, 0x05	; 5
     d74:	b1 e0       	ldi	r27, 0x01	; 1
     d76:	e5 e0       	ldi	r30, 0x05	; 5
     d78:	f1 e0       	ldi	r31, 0x01	; 1
     d7a:	80 81       	ld	r24, Z
     d7c:	81 60       	ori	r24, 0x01	; 1
     d7e:	8c 93       	st	X, r24
            OCR0A = Af;
     d80:	e7 e4       	ldi	r30, 0x47	; 71
     d82:	f0 e0       	ldi	r31, 0x00	; 0
     d84:	89 81       	ldd	r24, Y+1	; 0x01
     d86:	80 83       	st	Z, r24
            OCR0B = Bf;
     d88:	e8 e4       	ldi	r30, 0x48	; 72
     d8a:	f0 e0       	ldi	r31, 0x00	; 0
     d8c:	8b 81       	ldd	r24, Y+3	; 0x03
     d8e:	80 83       	st	Z, r24
}
     d90:	0f 90       	pop	r0
     d92:	0f 90       	pop	r0
     d94:	0f 90       	pop	r0
     d96:	0f 90       	pop	r0
     d98:	cf 91       	pop	r28
     d9a:	df 91       	pop	r29
     d9c:	08 95       	ret

00000d9e <__fixunssfsi>:
     d9e:	ef 92       	push	r14
     da0:	ff 92       	push	r15
     da2:	0f 93       	push	r16
     da4:	1f 93       	push	r17
     da6:	7b 01       	movw	r14, r22
     da8:	8c 01       	movw	r16, r24
     daa:	20 e0       	ldi	r18, 0x00	; 0
     dac:	30 e0       	ldi	r19, 0x00	; 0
     dae:	40 e0       	ldi	r20, 0x00	; 0
     db0:	5f e4       	ldi	r21, 0x4F	; 79
     db2:	0e 94 cf 09 	call	0x139e	; 0x139e <__gesf2>
     db6:	88 23       	and	r24, r24
     db8:	8c f0       	brlt	.+34     	; 0xddc <__fixunssfsi+0x3e>
     dba:	c8 01       	movw	r24, r16
     dbc:	b7 01       	movw	r22, r14
     dbe:	20 e0       	ldi	r18, 0x00	; 0
     dc0:	30 e0       	ldi	r19, 0x00	; 0
     dc2:	40 e0       	ldi	r20, 0x00	; 0
     dc4:	5f e4       	ldi	r21, 0x4F	; 79
     dc6:	0e 94 47 08 	call	0x108e	; 0x108e <__subsf3>
     dca:	0e 94 bd 0a 	call	0x157a	; 0x157a <__fixsfsi>
     dce:	9b 01       	movw	r18, r22
     dd0:	ac 01       	movw	r20, r24
     dd2:	20 50       	subi	r18, 0x00	; 0
     dd4:	30 40       	sbci	r19, 0x00	; 0
     dd6:	40 40       	sbci	r20, 0x00	; 0
     dd8:	50 48       	sbci	r21, 0x80	; 128
     dda:	06 c0       	rjmp	.+12     	; 0xde8 <__fixunssfsi+0x4a>
     ddc:	c8 01       	movw	r24, r16
     dde:	b7 01       	movw	r22, r14
     de0:	0e 94 bd 0a 	call	0x157a	; 0x157a <__fixsfsi>
     de4:	9b 01       	movw	r18, r22
     de6:	ac 01       	movw	r20, r24
     de8:	b9 01       	movw	r22, r18
     dea:	ca 01       	movw	r24, r20
     dec:	1f 91       	pop	r17
     dee:	0f 91       	pop	r16
     df0:	ff 90       	pop	r15
     df2:	ef 90       	pop	r14
     df4:	08 95       	ret

00000df6 <_fpadd_parts>:
     df6:	a0 e0       	ldi	r26, 0x00	; 0
     df8:	b0 e0       	ldi	r27, 0x00	; 0
     dfa:	e1 e0       	ldi	r30, 0x01	; 1
     dfc:	f7 e0       	ldi	r31, 0x07	; 7
     dfe:	0c 94 7f 0d 	jmp	0x1afe	; 0x1afe <__prologue_saves__>
     e02:	dc 01       	movw	r26, r24
     e04:	2b 01       	movw	r4, r22
     e06:	fa 01       	movw	r30, r20
     e08:	9c 91       	ld	r25, X
     e0a:	92 30       	cpi	r25, 0x02	; 2
     e0c:	08 f4       	brcc	.+2      	; 0xe10 <_fpadd_parts+0x1a>
     e0e:	39 c1       	rjmp	.+626    	; 0x1082 <_fpadd_parts+0x28c>
     e10:	eb 01       	movw	r28, r22
     e12:	88 81       	ld	r24, Y
     e14:	82 30       	cpi	r24, 0x02	; 2
     e16:	08 f4       	brcc	.+2      	; 0xe1a <_fpadd_parts+0x24>
     e18:	33 c1       	rjmp	.+614    	; 0x1080 <_fpadd_parts+0x28a>
     e1a:	94 30       	cpi	r25, 0x04	; 4
     e1c:	69 f4       	brne	.+26     	; 0xe38 <_fpadd_parts+0x42>
     e1e:	84 30       	cpi	r24, 0x04	; 4
     e20:	09 f0       	breq	.+2      	; 0xe24 <_fpadd_parts+0x2e>
     e22:	2f c1       	rjmp	.+606    	; 0x1082 <_fpadd_parts+0x28c>
     e24:	11 96       	adiw	r26, 0x01	; 1
     e26:	9c 91       	ld	r25, X
     e28:	11 97       	sbiw	r26, 0x01	; 1
     e2a:	89 81       	ldd	r24, Y+1	; 0x01
     e2c:	98 17       	cp	r25, r24
     e2e:	09 f4       	brne	.+2      	; 0xe32 <_fpadd_parts+0x3c>
     e30:	28 c1       	rjmp	.+592    	; 0x1082 <_fpadd_parts+0x28c>
     e32:	a0 e0       	ldi	r26, 0x00	; 0
     e34:	b2 e0       	ldi	r27, 0x02	; 2
     e36:	25 c1       	rjmp	.+586    	; 0x1082 <_fpadd_parts+0x28c>
     e38:	84 30       	cpi	r24, 0x04	; 4
     e3a:	09 f4       	brne	.+2      	; 0xe3e <_fpadd_parts+0x48>
     e3c:	21 c1       	rjmp	.+578    	; 0x1080 <_fpadd_parts+0x28a>
     e3e:	82 30       	cpi	r24, 0x02	; 2
     e40:	a9 f4       	brne	.+42     	; 0xe6c <_fpadd_parts+0x76>
     e42:	92 30       	cpi	r25, 0x02	; 2
     e44:	09 f0       	breq	.+2      	; 0xe48 <_fpadd_parts+0x52>
     e46:	1d c1       	rjmp	.+570    	; 0x1082 <_fpadd_parts+0x28c>
     e48:	9a 01       	movw	r18, r20
     e4a:	ad 01       	movw	r20, r26
     e4c:	88 e0       	ldi	r24, 0x08	; 8
     e4e:	ea 01       	movw	r28, r20
     e50:	09 90       	ld	r0, Y+
     e52:	ae 01       	movw	r20, r28
     e54:	e9 01       	movw	r28, r18
     e56:	09 92       	st	Y+, r0
     e58:	9e 01       	movw	r18, r28
     e5a:	81 50       	subi	r24, 0x01	; 1
     e5c:	c1 f7       	brne	.-16     	; 0xe4e <_fpadd_parts+0x58>
     e5e:	e2 01       	movw	r28, r4
     e60:	89 81       	ldd	r24, Y+1	; 0x01
     e62:	11 96       	adiw	r26, 0x01	; 1
     e64:	9c 91       	ld	r25, X
     e66:	89 23       	and	r24, r25
     e68:	81 83       	std	Z+1, r24	; 0x01
     e6a:	08 c1       	rjmp	.+528    	; 0x107c <_fpadd_parts+0x286>
     e6c:	92 30       	cpi	r25, 0x02	; 2
     e6e:	09 f4       	brne	.+2      	; 0xe72 <_fpadd_parts+0x7c>
     e70:	07 c1       	rjmp	.+526    	; 0x1080 <_fpadd_parts+0x28a>
     e72:	12 96       	adiw	r26, 0x02	; 2
     e74:	2d 90       	ld	r2, X+
     e76:	3c 90       	ld	r3, X
     e78:	13 97       	sbiw	r26, 0x03	; 3
     e7a:	eb 01       	movw	r28, r22
     e7c:	8a 81       	ldd	r24, Y+2	; 0x02
     e7e:	9b 81       	ldd	r25, Y+3	; 0x03
     e80:	14 96       	adiw	r26, 0x04	; 4
     e82:	ad 90       	ld	r10, X+
     e84:	bd 90       	ld	r11, X+
     e86:	cd 90       	ld	r12, X+
     e88:	dc 90       	ld	r13, X
     e8a:	17 97       	sbiw	r26, 0x07	; 7
     e8c:	ec 80       	ldd	r14, Y+4	; 0x04
     e8e:	fd 80       	ldd	r15, Y+5	; 0x05
     e90:	0e 81       	ldd	r16, Y+6	; 0x06
     e92:	1f 81       	ldd	r17, Y+7	; 0x07
     e94:	91 01       	movw	r18, r2
     e96:	28 1b       	sub	r18, r24
     e98:	39 0b       	sbc	r19, r25
     e9a:	b9 01       	movw	r22, r18
     e9c:	37 ff       	sbrs	r19, 7
     e9e:	04 c0       	rjmp	.+8      	; 0xea8 <_fpadd_parts+0xb2>
     ea0:	66 27       	eor	r22, r22
     ea2:	77 27       	eor	r23, r23
     ea4:	62 1b       	sub	r22, r18
     ea6:	73 0b       	sbc	r23, r19
     ea8:	60 32       	cpi	r22, 0x20	; 32
     eaa:	71 05       	cpc	r23, r1
     eac:	0c f0       	brlt	.+2      	; 0xeb0 <_fpadd_parts+0xba>
     eae:	61 c0       	rjmp	.+194    	; 0xf72 <_fpadd_parts+0x17c>
     eb0:	12 16       	cp	r1, r18
     eb2:	13 06       	cpc	r1, r19
     eb4:	6c f5       	brge	.+90     	; 0xf10 <_fpadd_parts+0x11a>
     eb6:	37 01       	movw	r6, r14
     eb8:	48 01       	movw	r8, r16
     eba:	06 2e       	mov	r0, r22
     ebc:	04 c0       	rjmp	.+8      	; 0xec6 <_fpadd_parts+0xd0>
     ebe:	96 94       	lsr	r9
     ec0:	87 94       	ror	r8
     ec2:	77 94       	ror	r7
     ec4:	67 94       	ror	r6
     ec6:	0a 94       	dec	r0
     ec8:	d2 f7       	brpl	.-12     	; 0xebe <_fpadd_parts+0xc8>
     eca:	21 e0       	ldi	r18, 0x01	; 1
     ecc:	30 e0       	ldi	r19, 0x00	; 0
     ece:	40 e0       	ldi	r20, 0x00	; 0
     ed0:	50 e0       	ldi	r21, 0x00	; 0
     ed2:	04 c0       	rjmp	.+8      	; 0xedc <_fpadd_parts+0xe6>
     ed4:	22 0f       	add	r18, r18
     ed6:	33 1f       	adc	r19, r19
     ed8:	44 1f       	adc	r20, r20
     eda:	55 1f       	adc	r21, r21
     edc:	6a 95       	dec	r22
     ede:	d2 f7       	brpl	.-12     	; 0xed4 <_fpadd_parts+0xde>
     ee0:	21 50       	subi	r18, 0x01	; 1
     ee2:	30 40       	sbci	r19, 0x00	; 0
     ee4:	40 40       	sbci	r20, 0x00	; 0
     ee6:	50 40       	sbci	r21, 0x00	; 0
     ee8:	2e 21       	and	r18, r14
     eea:	3f 21       	and	r19, r15
     eec:	40 23       	and	r20, r16
     eee:	51 23       	and	r21, r17
     ef0:	21 15       	cp	r18, r1
     ef2:	31 05       	cpc	r19, r1
     ef4:	41 05       	cpc	r20, r1
     ef6:	51 05       	cpc	r21, r1
     ef8:	21 f0       	breq	.+8      	; 0xf02 <_fpadd_parts+0x10c>
     efa:	21 e0       	ldi	r18, 0x01	; 1
     efc:	30 e0       	ldi	r19, 0x00	; 0
     efe:	40 e0       	ldi	r20, 0x00	; 0
     f00:	50 e0       	ldi	r21, 0x00	; 0
     f02:	79 01       	movw	r14, r18
     f04:	8a 01       	movw	r16, r20
     f06:	e6 28       	or	r14, r6
     f08:	f7 28       	or	r15, r7
     f0a:	08 29       	or	r16, r8
     f0c:	19 29       	or	r17, r9
     f0e:	3c c0       	rjmp	.+120    	; 0xf88 <_fpadd_parts+0x192>
     f10:	23 2b       	or	r18, r19
     f12:	d1 f1       	breq	.+116    	; 0xf88 <_fpadd_parts+0x192>
     f14:	26 0e       	add	r2, r22
     f16:	37 1e       	adc	r3, r23
     f18:	35 01       	movw	r6, r10
     f1a:	46 01       	movw	r8, r12
     f1c:	06 2e       	mov	r0, r22
     f1e:	04 c0       	rjmp	.+8      	; 0xf28 <_fpadd_parts+0x132>
     f20:	96 94       	lsr	r9
     f22:	87 94       	ror	r8
     f24:	77 94       	ror	r7
     f26:	67 94       	ror	r6
     f28:	0a 94       	dec	r0
     f2a:	d2 f7       	brpl	.-12     	; 0xf20 <_fpadd_parts+0x12a>
     f2c:	21 e0       	ldi	r18, 0x01	; 1
     f2e:	30 e0       	ldi	r19, 0x00	; 0
     f30:	40 e0       	ldi	r20, 0x00	; 0
     f32:	50 e0       	ldi	r21, 0x00	; 0
     f34:	04 c0       	rjmp	.+8      	; 0xf3e <_fpadd_parts+0x148>
     f36:	22 0f       	add	r18, r18
     f38:	33 1f       	adc	r19, r19
     f3a:	44 1f       	adc	r20, r20
     f3c:	55 1f       	adc	r21, r21
     f3e:	6a 95       	dec	r22
     f40:	d2 f7       	brpl	.-12     	; 0xf36 <_fpadd_parts+0x140>
     f42:	21 50       	subi	r18, 0x01	; 1
     f44:	30 40       	sbci	r19, 0x00	; 0
     f46:	40 40       	sbci	r20, 0x00	; 0
     f48:	50 40       	sbci	r21, 0x00	; 0
     f4a:	2a 21       	and	r18, r10
     f4c:	3b 21       	and	r19, r11
     f4e:	4c 21       	and	r20, r12
     f50:	5d 21       	and	r21, r13
     f52:	21 15       	cp	r18, r1
     f54:	31 05       	cpc	r19, r1
     f56:	41 05       	cpc	r20, r1
     f58:	51 05       	cpc	r21, r1
     f5a:	21 f0       	breq	.+8      	; 0xf64 <_fpadd_parts+0x16e>
     f5c:	21 e0       	ldi	r18, 0x01	; 1
     f5e:	30 e0       	ldi	r19, 0x00	; 0
     f60:	40 e0       	ldi	r20, 0x00	; 0
     f62:	50 e0       	ldi	r21, 0x00	; 0
     f64:	59 01       	movw	r10, r18
     f66:	6a 01       	movw	r12, r20
     f68:	a6 28       	or	r10, r6
     f6a:	b7 28       	or	r11, r7
     f6c:	c8 28       	or	r12, r8
     f6e:	d9 28       	or	r13, r9
     f70:	0b c0       	rjmp	.+22     	; 0xf88 <_fpadd_parts+0x192>
     f72:	82 15       	cp	r24, r2
     f74:	93 05       	cpc	r25, r3
     f76:	2c f0       	brlt	.+10     	; 0xf82 <_fpadd_parts+0x18c>
     f78:	1c 01       	movw	r2, r24
     f7a:	aa 24       	eor	r10, r10
     f7c:	bb 24       	eor	r11, r11
     f7e:	65 01       	movw	r12, r10
     f80:	03 c0       	rjmp	.+6      	; 0xf88 <_fpadd_parts+0x192>
     f82:	ee 24       	eor	r14, r14
     f84:	ff 24       	eor	r15, r15
     f86:	87 01       	movw	r16, r14
     f88:	11 96       	adiw	r26, 0x01	; 1
     f8a:	9c 91       	ld	r25, X
     f8c:	d2 01       	movw	r26, r4
     f8e:	11 96       	adiw	r26, 0x01	; 1
     f90:	8c 91       	ld	r24, X
     f92:	98 17       	cp	r25, r24
     f94:	09 f4       	brne	.+2      	; 0xf98 <_fpadd_parts+0x1a2>
     f96:	45 c0       	rjmp	.+138    	; 0x1022 <_fpadd_parts+0x22c>
     f98:	99 23       	and	r25, r25
     f9a:	39 f0       	breq	.+14     	; 0xfaa <_fpadd_parts+0x1b4>
     f9c:	a8 01       	movw	r20, r16
     f9e:	97 01       	movw	r18, r14
     fa0:	2a 19       	sub	r18, r10
     fa2:	3b 09       	sbc	r19, r11
     fa4:	4c 09       	sbc	r20, r12
     fa6:	5d 09       	sbc	r21, r13
     fa8:	06 c0       	rjmp	.+12     	; 0xfb6 <_fpadd_parts+0x1c0>
     faa:	a6 01       	movw	r20, r12
     fac:	95 01       	movw	r18, r10
     fae:	2e 19       	sub	r18, r14
     fb0:	3f 09       	sbc	r19, r15
     fb2:	40 0b       	sbc	r20, r16
     fb4:	51 0b       	sbc	r21, r17
     fb6:	57 fd       	sbrc	r21, 7
     fb8:	08 c0       	rjmp	.+16     	; 0xfca <_fpadd_parts+0x1d4>
     fba:	11 82       	std	Z+1, r1	; 0x01
     fbc:	33 82       	std	Z+3, r3	; 0x03
     fbe:	22 82       	std	Z+2, r2	; 0x02
     fc0:	24 83       	std	Z+4, r18	; 0x04
     fc2:	35 83       	std	Z+5, r19	; 0x05
     fc4:	46 83       	std	Z+6, r20	; 0x06
     fc6:	57 83       	std	Z+7, r21	; 0x07
     fc8:	1d c0       	rjmp	.+58     	; 0x1004 <_fpadd_parts+0x20e>
     fca:	81 e0       	ldi	r24, 0x01	; 1
     fcc:	81 83       	std	Z+1, r24	; 0x01
     fce:	33 82       	std	Z+3, r3	; 0x03
     fd0:	22 82       	std	Z+2, r2	; 0x02
     fd2:	88 27       	eor	r24, r24
     fd4:	99 27       	eor	r25, r25
     fd6:	dc 01       	movw	r26, r24
     fd8:	82 1b       	sub	r24, r18
     fda:	93 0b       	sbc	r25, r19
     fdc:	a4 0b       	sbc	r26, r20
     fde:	b5 0b       	sbc	r27, r21
     fe0:	84 83       	std	Z+4, r24	; 0x04
     fe2:	95 83       	std	Z+5, r25	; 0x05
     fe4:	a6 83       	std	Z+6, r26	; 0x06
     fe6:	b7 83       	std	Z+7, r27	; 0x07
     fe8:	0d c0       	rjmp	.+26     	; 0x1004 <_fpadd_parts+0x20e>
     fea:	22 0f       	add	r18, r18
     fec:	33 1f       	adc	r19, r19
     fee:	44 1f       	adc	r20, r20
     ff0:	55 1f       	adc	r21, r21
     ff2:	24 83       	std	Z+4, r18	; 0x04
     ff4:	35 83       	std	Z+5, r19	; 0x05
     ff6:	46 83       	std	Z+6, r20	; 0x06
     ff8:	57 83       	std	Z+7, r21	; 0x07
     ffa:	82 81       	ldd	r24, Z+2	; 0x02
     ffc:	93 81       	ldd	r25, Z+3	; 0x03
     ffe:	01 97       	sbiw	r24, 0x01	; 1
    1000:	93 83       	std	Z+3, r25	; 0x03
    1002:	82 83       	std	Z+2, r24	; 0x02
    1004:	24 81       	ldd	r18, Z+4	; 0x04
    1006:	35 81       	ldd	r19, Z+5	; 0x05
    1008:	46 81       	ldd	r20, Z+6	; 0x06
    100a:	57 81       	ldd	r21, Z+7	; 0x07
    100c:	da 01       	movw	r26, r20
    100e:	c9 01       	movw	r24, r18
    1010:	01 97       	sbiw	r24, 0x01	; 1
    1012:	a1 09       	sbc	r26, r1
    1014:	b1 09       	sbc	r27, r1
    1016:	8f 5f       	subi	r24, 0xFF	; 255
    1018:	9f 4f       	sbci	r25, 0xFF	; 255
    101a:	af 4f       	sbci	r26, 0xFF	; 255
    101c:	bf 43       	sbci	r27, 0x3F	; 63
    101e:	28 f3       	brcs	.-54     	; 0xfea <_fpadd_parts+0x1f4>
    1020:	0b c0       	rjmp	.+22     	; 0x1038 <_fpadd_parts+0x242>
    1022:	91 83       	std	Z+1, r25	; 0x01
    1024:	33 82       	std	Z+3, r3	; 0x03
    1026:	22 82       	std	Z+2, r2	; 0x02
    1028:	ea 0c       	add	r14, r10
    102a:	fb 1c       	adc	r15, r11
    102c:	0c 1d       	adc	r16, r12
    102e:	1d 1d       	adc	r17, r13
    1030:	e4 82       	std	Z+4, r14	; 0x04
    1032:	f5 82       	std	Z+5, r15	; 0x05
    1034:	06 83       	std	Z+6, r16	; 0x06
    1036:	17 83       	std	Z+7, r17	; 0x07
    1038:	83 e0       	ldi	r24, 0x03	; 3
    103a:	80 83       	st	Z, r24
    103c:	24 81       	ldd	r18, Z+4	; 0x04
    103e:	35 81       	ldd	r19, Z+5	; 0x05
    1040:	46 81       	ldd	r20, Z+6	; 0x06
    1042:	57 81       	ldd	r21, Z+7	; 0x07
    1044:	57 ff       	sbrs	r21, 7
    1046:	1a c0       	rjmp	.+52     	; 0x107c <_fpadd_parts+0x286>
    1048:	c9 01       	movw	r24, r18
    104a:	aa 27       	eor	r26, r26
    104c:	97 fd       	sbrc	r25, 7
    104e:	a0 95       	com	r26
    1050:	ba 2f       	mov	r27, r26
    1052:	81 70       	andi	r24, 0x01	; 1
    1054:	90 70       	andi	r25, 0x00	; 0
    1056:	a0 70       	andi	r26, 0x00	; 0
    1058:	b0 70       	andi	r27, 0x00	; 0
    105a:	56 95       	lsr	r21
    105c:	47 95       	ror	r20
    105e:	37 95       	ror	r19
    1060:	27 95       	ror	r18
    1062:	82 2b       	or	r24, r18
    1064:	93 2b       	or	r25, r19
    1066:	a4 2b       	or	r26, r20
    1068:	b5 2b       	or	r27, r21
    106a:	84 83       	std	Z+4, r24	; 0x04
    106c:	95 83       	std	Z+5, r25	; 0x05
    106e:	a6 83       	std	Z+6, r26	; 0x06
    1070:	b7 83       	std	Z+7, r27	; 0x07
    1072:	82 81       	ldd	r24, Z+2	; 0x02
    1074:	93 81       	ldd	r25, Z+3	; 0x03
    1076:	01 96       	adiw	r24, 0x01	; 1
    1078:	93 83       	std	Z+3, r25	; 0x03
    107a:	82 83       	std	Z+2, r24	; 0x02
    107c:	df 01       	movw	r26, r30
    107e:	01 c0       	rjmp	.+2      	; 0x1082 <_fpadd_parts+0x28c>
    1080:	d2 01       	movw	r26, r4
    1082:	cd 01       	movw	r24, r26
    1084:	cd b7       	in	r28, 0x3d	; 61
    1086:	de b7       	in	r29, 0x3e	; 62
    1088:	e2 e1       	ldi	r30, 0x12	; 18
    108a:	0c 94 9b 0d 	jmp	0x1b36	; 0x1b36 <__epilogue_restores__>

0000108e <__subsf3>:
    108e:	a0 e2       	ldi	r26, 0x20	; 32
    1090:	b0 e0       	ldi	r27, 0x00	; 0
    1092:	ed e4       	ldi	r30, 0x4D	; 77
    1094:	f8 e0       	ldi	r31, 0x08	; 8
    1096:	0c 94 8b 0d 	jmp	0x1b16	; 0x1b16 <__prologue_saves__+0x18>
    109a:	69 83       	std	Y+1, r22	; 0x01
    109c:	7a 83       	std	Y+2, r23	; 0x02
    109e:	8b 83       	std	Y+3, r24	; 0x03
    10a0:	9c 83       	std	Y+4, r25	; 0x04
    10a2:	2d 83       	std	Y+5, r18	; 0x05
    10a4:	3e 83       	std	Y+6, r19	; 0x06
    10a6:	4f 83       	std	Y+7, r20	; 0x07
    10a8:	58 87       	std	Y+8, r21	; 0x08
    10aa:	e9 e0       	ldi	r30, 0x09	; 9
    10ac:	ee 2e       	mov	r14, r30
    10ae:	f1 2c       	mov	r15, r1
    10b0:	ec 0e       	add	r14, r28
    10b2:	fd 1e       	adc	r15, r29
    10b4:	ce 01       	movw	r24, r28
    10b6:	01 96       	adiw	r24, 0x01	; 1
    10b8:	b7 01       	movw	r22, r14
    10ba:	0e 94 ae 0c 	call	0x195c	; 0x195c <__unpack_f>
    10be:	8e 01       	movw	r16, r28
    10c0:	0f 5e       	subi	r16, 0xEF	; 239
    10c2:	1f 4f       	sbci	r17, 0xFF	; 255
    10c4:	ce 01       	movw	r24, r28
    10c6:	05 96       	adiw	r24, 0x05	; 5
    10c8:	b8 01       	movw	r22, r16
    10ca:	0e 94 ae 0c 	call	0x195c	; 0x195c <__unpack_f>
    10ce:	8a 89       	ldd	r24, Y+18	; 0x12
    10d0:	91 e0       	ldi	r25, 0x01	; 1
    10d2:	89 27       	eor	r24, r25
    10d4:	8a 8b       	std	Y+18, r24	; 0x12
    10d6:	c7 01       	movw	r24, r14
    10d8:	b8 01       	movw	r22, r16
    10da:	ae 01       	movw	r20, r28
    10dc:	47 5e       	subi	r20, 0xE7	; 231
    10de:	5f 4f       	sbci	r21, 0xFF	; 255
    10e0:	0e 94 fb 06 	call	0xdf6	; 0xdf6 <_fpadd_parts>
    10e4:	0e 94 d9 0b 	call	0x17b2	; 0x17b2 <__pack_f>
    10e8:	a0 96       	adiw	r28, 0x20	; 32
    10ea:	e6 e0       	ldi	r30, 0x06	; 6
    10ec:	0c 94 a7 0d 	jmp	0x1b4e	; 0x1b4e <__epilogue_restores__+0x18>

000010f0 <__addsf3>:
    10f0:	a0 e2       	ldi	r26, 0x20	; 32
    10f2:	b0 e0       	ldi	r27, 0x00	; 0
    10f4:	ee e7       	ldi	r30, 0x7E	; 126
    10f6:	f8 e0       	ldi	r31, 0x08	; 8
    10f8:	0c 94 8b 0d 	jmp	0x1b16	; 0x1b16 <__prologue_saves__+0x18>
    10fc:	69 83       	std	Y+1, r22	; 0x01
    10fe:	7a 83       	std	Y+2, r23	; 0x02
    1100:	8b 83       	std	Y+3, r24	; 0x03
    1102:	9c 83       	std	Y+4, r25	; 0x04
    1104:	2d 83       	std	Y+5, r18	; 0x05
    1106:	3e 83       	std	Y+6, r19	; 0x06
    1108:	4f 83       	std	Y+7, r20	; 0x07
    110a:	58 87       	std	Y+8, r21	; 0x08
    110c:	f9 e0       	ldi	r31, 0x09	; 9
    110e:	ef 2e       	mov	r14, r31
    1110:	f1 2c       	mov	r15, r1
    1112:	ec 0e       	add	r14, r28
    1114:	fd 1e       	adc	r15, r29
    1116:	ce 01       	movw	r24, r28
    1118:	01 96       	adiw	r24, 0x01	; 1
    111a:	b7 01       	movw	r22, r14
    111c:	0e 94 ae 0c 	call	0x195c	; 0x195c <__unpack_f>
    1120:	8e 01       	movw	r16, r28
    1122:	0f 5e       	subi	r16, 0xEF	; 239
    1124:	1f 4f       	sbci	r17, 0xFF	; 255
    1126:	ce 01       	movw	r24, r28
    1128:	05 96       	adiw	r24, 0x05	; 5
    112a:	b8 01       	movw	r22, r16
    112c:	0e 94 ae 0c 	call	0x195c	; 0x195c <__unpack_f>
    1130:	c7 01       	movw	r24, r14
    1132:	b8 01       	movw	r22, r16
    1134:	ae 01       	movw	r20, r28
    1136:	47 5e       	subi	r20, 0xE7	; 231
    1138:	5f 4f       	sbci	r21, 0xFF	; 255
    113a:	0e 94 fb 06 	call	0xdf6	; 0xdf6 <_fpadd_parts>
    113e:	0e 94 d9 0b 	call	0x17b2	; 0x17b2 <__pack_f>
    1142:	a0 96       	adiw	r28, 0x20	; 32
    1144:	e6 e0       	ldi	r30, 0x06	; 6
    1146:	0c 94 a7 0d 	jmp	0x1b4e	; 0x1b4e <__epilogue_restores__+0x18>

0000114a <__mulsf3>:
    114a:	a0 e2       	ldi	r26, 0x20	; 32
    114c:	b0 e0       	ldi	r27, 0x00	; 0
    114e:	eb ea       	ldi	r30, 0xAB	; 171
    1150:	f8 e0       	ldi	r31, 0x08	; 8
    1152:	0c 94 7f 0d 	jmp	0x1afe	; 0x1afe <__prologue_saves__>
    1156:	69 83       	std	Y+1, r22	; 0x01
    1158:	7a 83       	std	Y+2, r23	; 0x02
    115a:	8b 83       	std	Y+3, r24	; 0x03
    115c:	9c 83       	std	Y+4, r25	; 0x04
    115e:	2d 83       	std	Y+5, r18	; 0x05
    1160:	3e 83       	std	Y+6, r19	; 0x06
    1162:	4f 83       	std	Y+7, r20	; 0x07
    1164:	58 87       	std	Y+8, r21	; 0x08
    1166:	ce 01       	movw	r24, r28
    1168:	01 96       	adiw	r24, 0x01	; 1
    116a:	be 01       	movw	r22, r28
    116c:	67 5f       	subi	r22, 0xF7	; 247
    116e:	7f 4f       	sbci	r23, 0xFF	; 255
    1170:	0e 94 ae 0c 	call	0x195c	; 0x195c <__unpack_f>
    1174:	ce 01       	movw	r24, r28
    1176:	05 96       	adiw	r24, 0x05	; 5
    1178:	be 01       	movw	r22, r28
    117a:	6f 5e       	subi	r22, 0xEF	; 239
    117c:	7f 4f       	sbci	r23, 0xFF	; 255
    117e:	0e 94 ae 0c 	call	0x195c	; 0x195c <__unpack_f>
    1182:	99 85       	ldd	r25, Y+9	; 0x09
    1184:	92 30       	cpi	r25, 0x02	; 2
    1186:	88 f0       	brcs	.+34     	; 0x11aa <__mulsf3+0x60>
    1188:	89 89       	ldd	r24, Y+17	; 0x11
    118a:	82 30       	cpi	r24, 0x02	; 2
    118c:	c8 f0       	brcs	.+50     	; 0x11c0 <__mulsf3+0x76>
    118e:	94 30       	cpi	r25, 0x04	; 4
    1190:	19 f4       	brne	.+6      	; 0x1198 <__mulsf3+0x4e>
    1192:	82 30       	cpi	r24, 0x02	; 2
    1194:	51 f4       	brne	.+20     	; 0x11aa <__mulsf3+0x60>
    1196:	04 c0       	rjmp	.+8      	; 0x11a0 <__mulsf3+0x56>
    1198:	84 30       	cpi	r24, 0x04	; 4
    119a:	29 f4       	brne	.+10     	; 0x11a6 <__mulsf3+0x5c>
    119c:	92 30       	cpi	r25, 0x02	; 2
    119e:	81 f4       	brne	.+32     	; 0x11c0 <__mulsf3+0x76>
    11a0:	80 e0       	ldi	r24, 0x00	; 0
    11a2:	92 e0       	ldi	r25, 0x02	; 2
    11a4:	c6 c0       	rjmp	.+396    	; 0x1332 <__mulsf3+0x1e8>
    11a6:	92 30       	cpi	r25, 0x02	; 2
    11a8:	49 f4       	brne	.+18     	; 0x11bc <__mulsf3+0x72>
    11aa:	20 e0       	ldi	r18, 0x00	; 0
    11ac:	9a 85       	ldd	r25, Y+10	; 0x0a
    11ae:	8a 89       	ldd	r24, Y+18	; 0x12
    11b0:	98 13       	cpse	r25, r24
    11b2:	21 e0       	ldi	r18, 0x01	; 1
    11b4:	2a 87       	std	Y+10, r18	; 0x0a
    11b6:	ce 01       	movw	r24, r28
    11b8:	09 96       	adiw	r24, 0x09	; 9
    11ba:	bb c0       	rjmp	.+374    	; 0x1332 <__mulsf3+0x1e8>
    11bc:	82 30       	cpi	r24, 0x02	; 2
    11be:	49 f4       	brne	.+18     	; 0x11d2 <__mulsf3+0x88>
    11c0:	20 e0       	ldi	r18, 0x00	; 0
    11c2:	9a 85       	ldd	r25, Y+10	; 0x0a
    11c4:	8a 89       	ldd	r24, Y+18	; 0x12
    11c6:	98 13       	cpse	r25, r24
    11c8:	21 e0       	ldi	r18, 0x01	; 1
    11ca:	2a 8b       	std	Y+18, r18	; 0x12
    11cc:	ce 01       	movw	r24, r28
    11ce:	41 96       	adiw	r24, 0x11	; 17
    11d0:	b0 c0       	rjmp	.+352    	; 0x1332 <__mulsf3+0x1e8>
    11d2:	2d 84       	ldd	r2, Y+13	; 0x0d
    11d4:	3e 84       	ldd	r3, Y+14	; 0x0e
    11d6:	4f 84       	ldd	r4, Y+15	; 0x0f
    11d8:	58 88       	ldd	r5, Y+16	; 0x10
    11da:	6d 88       	ldd	r6, Y+21	; 0x15
    11dc:	7e 88       	ldd	r7, Y+22	; 0x16
    11de:	8f 88       	ldd	r8, Y+23	; 0x17
    11e0:	98 8c       	ldd	r9, Y+24	; 0x18
    11e2:	ee 24       	eor	r14, r14
    11e4:	ff 24       	eor	r15, r15
    11e6:	87 01       	movw	r16, r14
    11e8:	aa 24       	eor	r10, r10
    11ea:	bb 24       	eor	r11, r11
    11ec:	65 01       	movw	r12, r10
    11ee:	40 e0       	ldi	r20, 0x00	; 0
    11f0:	50 e0       	ldi	r21, 0x00	; 0
    11f2:	60 e0       	ldi	r22, 0x00	; 0
    11f4:	70 e0       	ldi	r23, 0x00	; 0
    11f6:	e0 e0       	ldi	r30, 0x00	; 0
    11f8:	f0 e0       	ldi	r31, 0x00	; 0
    11fa:	c1 01       	movw	r24, r2
    11fc:	81 70       	andi	r24, 0x01	; 1
    11fe:	90 70       	andi	r25, 0x00	; 0
    1200:	89 2b       	or	r24, r25
    1202:	e9 f0       	breq	.+58     	; 0x123e <__mulsf3+0xf4>
    1204:	e6 0c       	add	r14, r6
    1206:	f7 1c       	adc	r15, r7
    1208:	08 1d       	adc	r16, r8
    120a:	19 1d       	adc	r17, r9
    120c:	9a 01       	movw	r18, r20
    120e:	ab 01       	movw	r20, r22
    1210:	2a 0d       	add	r18, r10
    1212:	3b 1d       	adc	r19, r11
    1214:	4c 1d       	adc	r20, r12
    1216:	5d 1d       	adc	r21, r13
    1218:	80 e0       	ldi	r24, 0x00	; 0
    121a:	90 e0       	ldi	r25, 0x00	; 0
    121c:	a0 e0       	ldi	r26, 0x00	; 0
    121e:	b0 e0       	ldi	r27, 0x00	; 0
    1220:	e6 14       	cp	r14, r6
    1222:	f7 04       	cpc	r15, r7
    1224:	08 05       	cpc	r16, r8
    1226:	19 05       	cpc	r17, r9
    1228:	20 f4       	brcc	.+8      	; 0x1232 <__mulsf3+0xe8>
    122a:	81 e0       	ldi	r24, 0x01	; 1
    122c:	90 e0       	ldi	r25, 0x00	; 0
    122e:	a0 e0       	ldi	r26, 0x00	; 0
    1230:	b0 e0       	ldi	r27, 0x00	; 0
    1232:	ba 01       	movw	r22, r20
    1234:	a9 01       	movw	r20, r18
    1236:	48 0f       	add	r20, r24
    1238:	59 1f       	adc	r21, r25
    123a:	6a 1f       	adc	r22, r26
    123c:	7b 1f       	adc	r23, r27
    123e:	aa 0c       	add	r10, r10
    1240:	bb 1c       	adc	r11, r11
    1242:	cc 1c       	adc	r12, r12
    1244:	dd 1c       	adc	r13, r13
    1246:	97 fe       	sbrs	r9, 7
    1248:	08 c0       	rjmp	.+16     	; 0x125a <__mulsf3+0x110>
    124a:	81 e0       	ldi	r24, 0x01	; 1
    124c:	90 e0       	ldi	r25, 0x00	; 0
    124e:	a0 e0       	ldi	r26, 0x00	; 0
    1250:	b0 e0       	ldi	r27, 0x00	; 0
    1252:	a8 2a       	or	r10, r24
    1254:	b9 2a       	or	r11, r25
    1256:	ca 2a       	or	r12, r26
    1258:	db 2a       	or	r13, r27
    125a:	31 96       	adiw	r30, 0x01	; 1
    125c:	e0 32       	cpi	r30, 0x20	; 32
    125e:	f1 05       	cpc	r31, r1
    1260:	49 f0       	breq	.+18     	; 0x1274 <__mulsf3+0x12a>
    1262:	66 0c       	add	r6, r6
    1264:	77 1c       	adc	r7, r7
    1266:	88 1c       	adc	r8, r8
    1268:	99 1c       	adc	r9, r9
    126a:	56 94       	lsr	r5
    126c:	47 94       	ror	r4
    126e:	37 94       	ror	r3
    1270:	27 94       	ror	r2
    1272:	c3 cf       	rjmp	.-122    	; 0x11fa <__mulsf3+0xb0>
    1274:	fa 85       	ldd	r31, Y+10	; 0x0a
    1276:	ea 89       	ldd	r30, Y+18	; 0x12
    1278:	2b 89       	ldd	r18, Y+19	; 0x13
    127a:	3c 89       	ldd	r19, Y+20	; 0x14
    127c:	8b 85       	ldd	r24, Y+11	; 0x0b
    127e:	9c 85       	ldd	r25, Y+12	; 0x0c
    1280:	28 0f       	add	r18, r24
    1282:	39 1f       	adc	r19, r25
    1284:	2e 5f       	subi	r18, 0xFE	; 254
    1286:	3f 4f       	sbci	r19, 0xFF	; 255
    1288:	17 c0       	rjmp	.+46     	; 0x12b8 <__mulsf3+0x16e>
    128a:	ca 01       	movw	r24, r20
    128c:	81 70       	andi	r24, 0x01	; 1
    128e:	90 70       	andi	r25, 0x00	; 0
    1290:	89 2b       	or	r24, r25
    1292:	61 f0       	breq	.+24     	; 0x12ac <__mulsf3+0x162>
    1294:	16 95       	lsr	r17
    1296:	07 95       	ror	r16
    1298:	f7 94       	ror	r15
    129a:	e7 94       	ror	r14
    129c:	80 e0       	ldi	r24, 0x00	; 0
    129e:	90 e0       	ldi	r25, 0x00	; 0
    12a0:	a0 e0       	ldi	r26, 0x00	; 0
    12a2:	b0 e8       	ldi	r27, 0x80	; 128
    12a4:	e8 2a       	or	r14, r24
    12a6:	f9 2a       	or	r15, r25
    12a8:	0a 2b       	or	r16, r26
    12aa:	1b 2b       	or	r17, r27
    12ac:	76 95       	lsr	r23
    12ae:	67 95       	ror	r22
    12b0:	57 95       	ror	r21
    12b2:	47 95       	ror	r20
    12b4:	2f 5f       	subi	r18, 0xFF	; 255
    12b6:	3f 4f       	sbci	r19, 0xFF	; 255
    12b8:	77 fd       	sbrc	r23, 7
    12ba:	e7 cf       	rjmp	.-50     	; 0x128a <__mulsf3+0x140>
    12bc:	0c c0       	rjmp	.+24     	; 0x12d6 <__mulsf3+0x18c>
    12be:	44 0f       	add	r20, r20
    12c0:	55 1f       	adc	r21, r21
    12c2:	66 1f       	adc	r22, r22
    12c4:	77 1f       	adc	r23, r23
    12c6:	17 fd       	sbrc	r17, 7
    12c8:	41 60       	ori	r20, 0x01	; 1
    12ca:	ee 0c       	add	r14, r14
    12cc:	ff 1c       	adc	r15, r15
    12ce:	00 1f       	adc	r16, r16
    12d0:	11 1f       	adc	r17, r17
    12d2:	21 50       	subi	r18, 0x01	; 1
    12d4:	30 40       	sbci	r19, 0x00	; 0
    12d6:	40 30       	cpi	r20, 0x00	; 0
    12d8:	90 e0       	ldi	r25, 0x00	; 0
    12da:	59 07       	cpc	r21, r25
    12dc:	90 e0       	ldi	r25, 0x00	; 0
    12de:	69 07       	cpc	r22, r25
    12e0:	90 e4       	ldi	r25, 0x40	; 64
    12e2:	79 07       	cpc	r23, r25
    12e4:	60 f3       	brcs	.-40     	; 0x12be <__mulsf3+0x174>
    12e6:	2b 8f       	std	Y+27, r18	; 0x1b
    12e8:	3c 8f       	std	Y+28, r19	; 0x1c
    12ea:	db 01       	movw	r26, r22
    12ec:	ca 01       	movw	r24, r20
    12ee:	8f 77       	andi	r24, 0x7F	; 127
    12f0:	90 70       	andi	r25, 0x00	; 0
    12f2:	a0 70       	andi	r26, 0x00	; 0
    12f4:	b0 70       	andi	r27, 0x00	; 0
    12f6:	80 34       	cpi	r24, 0x40	; 64
    12f8:	91 05       	cpc	r25, r1
    12fa:	a1 05       	cpc	r26, r1
    12fc:	b1 05       	cpc	r27, r1
    12fe:	61 f4       	brne	.+24     	; 0x1318 <__mulsf3+0x1ce>
    1300:	47 fd       	sbrc	r20, 7
    1302:	0a c0       	rjmp	.+20     	; 0x1318 <__mulsf3+0x1ce>
    1304:	e1 14       	cp	r14, r1
    1306:	f1 04       	cpc	r15, r1
    1308:	01 05       	cpc	r16, r1
    130a:	11 05       	cpc	r17, r1
    130c:	29 f0       	breq	.+10     	; 0x1318 <__mulsf3+0x1ce>
    130e:	40 5c       	subi	r20, 0xC0	; 192
    1310:	5f 4f       	sbci	r21, 0xFF	; 255
    1312:	6f 4f       	sbci	r22, 0xFF	; 255
    1314:	7f 4f       	sbci	r23, 0xFF	; 255
    1316:	40 78       	andi	r20, 0x80	; 128
    1318:	1a 8e       	std	Y+26, r1	; 0x1a
    131a:	fe 17       	cp	r31, r30
    131c:	11 f0       	breq	.+4      	; 0x1322 <__mulsf3+0x1d8>
    131e:	81 e0       	ldi	r24, 0x01	; 1
    1320:	8a 8f       	std	Y+26, r24	; 0x1a
    1322:	4d 8f       	std	Y+29, r20	; 0x1d
    1324:	5e 8f       	std	Y+30, r21	; 0x1e
    1326:	6f 8f       	std	Y+31, r22	; 0x1f
    1328:	78 a3       	std	Y+32, r23	; 0x20
    132a:	83 e0       	ldi	r24, 0x03	; 3
    132c:	89 8f       	std	Y+25, r24	; 0x19
    132e:	ce 01       	movw	r24, r28
    1330:	49 96       	adiw	r24, 0x19	; 25
    1332:	0e 94 d9 0b 	call	0x17b2	; 0x17b2 <__pack_f>
    1336:	a0 96       	adiw	r28, 0x20	; 32
    1338:	e2 e1       	ldi	r30, 0x12	; 18
    133a:	0c 94 9b 0d 	jmp	0x1b36	; 0x1b36 <__epilogue_restores__>

0000133e <__gtsf2>:
    133e:	a8 e1       	ldi	r26, 0x18	; 24
    1340:	b0 e0       	ldi	r27, 0x00	; 0
    1342:	e5 ea       	ldi	r30, 0xA5	; 165
    1344:	f9 e0       	ldi	r31, 0x09	; 9
    1346:	0c 94 8b 0d 	jmp	0x1b16	; 0x1b16 <__prologue_saves__+0x18>
    134a:	69 83       	std	Y+1, r22	; 0x01
    134c:	7a 83       	std	Y+2, r23	; 0x02
    134e:	8b 83       	std	Y+3, r24	; 0x03
    1350:	9c 83       	std	Y+4, r25	; 0x04
    1352:	2d 83       	std	Y+5, r18	; 0x05
    1354:	3e 83       	std	Y+6, r19	; 0x06
    1356:	4f 83       	std	Y+7, r20	; 0x07
    1358:	58 87       	std	Y+8, r21	; 0x08
    135a:	89 e0       	ldi	r24, 0x09	; 9
    135c:	e8 2e       	mov	r14, r24
    135e:	f1 2c       	mov	r15, r1
    1360:	ec 0e       	add	r14, r28
    1362:	fd 1e       	adc	r15, r29
    1364:	ce 01       	movw	r24, r28
    1366:	01 96       	adiw	r24, 0x01	; 1
    1368:	b7 01       	movw	r22, r14
    136a:	0e 94 ae 0c 	call	0x195c	; 0x195c <__unpack_f>
    136e:	8e 01       	movw	r16, r28
    1370:	0f 5e       	subi	r16, 0xEF	; 239
    1372:	1f 4f       	sbci	r17, 0xFF	; 255
    1374:	ce 01       	movw	r24, r28
    1376:	05 96       	adiw	r24, 0x05	; 5
    1378:	b8 01       	movw	r22, r16
    137a:	0e 94 ae 0c 	call	0x195c	; 0x195c <__unpack_f>
    137e:	89 85       	ldd	r24, Y+9	; 0x09
    1380:	82 30       	cpi	r24, 0x02	; 2
    1382:	40 f0       	brcs	.+16     	; 0x1394 <__gtsf2+0x56>
    1384:	89 89       	ldd	r24, Y+17	; 0x11
    1386:	82 30       	cpi	r24, 0x02	; 2
    1388:	28 f0       	brcs	.+10     	; 0x1394 <__gtsf2+0x56>
    138a:	c7 01       	movw	r24, r14
    138c:	b8 01       	movw	r22, r16
    138e:	0e 94 26 0d 	call	0x1a4c	; 0x1a4c <__fpcmp_parts_f>
    1392:	01 c0       	rjmp	.+2      	; 0x1396 <__gtsf2+0x58>
    1394:	8f ef       	ldi	r24, 0xFF	; 255
    1396:	68 96       	adiw	r28, 0x18	; 24
    1398:	e6 e0       	ldi	r30, 0x06	; 6
    139a:	0c 94 a7 0d 	jmp	0x1b4e	; 0x1b4e <__epilogue_restores__+0x18>

0000139e <__gesf2>:
    139e:	a8 e1       	ldi	r26, 0x18	; 24
    13a0:	b0 e0       	ldi	r27, 0x00	; 0
    13a2:	e5 ed       	ldi	r30, 0xD5	; 213
    13a4:	f9 e0       	ldi	r31, 0x09	; 9
    13a6:	0c 94 8b 0d 	jmp	0x1b16	; 0x1b16 <__prologue_saves__+0x18>
    13aa:	69 83       	std	Y+1, r22	; 0x01
    13ac:	7a 83       	std	Y+2, r23	; 0x02
    13ae:	8b 83       	std	Y+3, r24	; 0x03
    13b0:	9c 83       	std	Y+4, r25	; 0x04
    13b2:	2d 83       	std	Y+5, r18	; 0x05
    13b4:	3e 83       	std	Y+6, r19	; 0x06
    13b6:	4f 83       	std	Y+7, r20	; 0x07
    13b8:	58 87       	std	Y+8, r21	; 0x08
    13ba:	89 e0       	ldi	r24, 0x09	; 9
    13bc:	e8 2e       	mov	r14, r24
    13be:	f1 2c       	mov	r15, r1
    13c0:	ec 0e       	add	r14, r28
    13c2:	fd 1e       	adc	r15, r29
    13c4:	ce 01       	movw	r24, r28
    13c6:	01 96       	adiw	r24, 0x01	; 1
    13c8:	b7 01       	movw	r22, r14
    13ca:	0e 94 ae 0c 	call	0x195c	; 0x195c <__unpack_f>
    13ce:	8e 01       	movw	r16, r28
    13d0:	0f 5e       	subi	r16, 0xEF	; 239
    13d2:	1f 4f       	sbci	r17, 0xFF	; 255
    13d4:	ce 01       	movw	r24, r28
    13d6:	05 96       	adiw	r24, 0x05	; 5
    13d8:	b8 01       	movw	r22, r16
    13da:	0e 94 ae 0c 	call	0x195c	; 0x195c <__unpack_f>
    13de:	89 85       	ldd	r24, Y+9	; 0x09
    13e0:	82 30       	cpi	r24, 0x02	; 2
    13e2:	40 f0       	brcs	.+16     	; 0x13f4 <__gesf2+0x56>
    13e4:	89 89       	ldd	r24, Y+17	; 0x11
    13e6:	82 30       	cpi	r24, 0x02	; 2
    13e8:	28 f0       	brcs	.+10     	; 0x13f4 <__gesf2+0x56>
    13ea:	c7 01       	movw	r24, r14
    13ec:	b8 01       	movw	r22, r16
    13ee:	0e 94 26 0d 	call	0x1a4c	; 0x1a4c <__fpcmp_parts_f>
    13f2:	01 c0       	rjmp	.+2      	; 0x13f6 <__gesf2+0x58>
    13f4:	8f ef       	ldi	r24, 0xFF	; 255
    13f6:	68 96       	adiw	r28, 0x18	; 24
    13f8:	e6 e0       	ldi	r30, 0x06	; 6
    13fa:	0c 94 a7 0d 	jmp	0x1b4e	; 0x1b4e <__epilogue_restores__+0x18>

000013fe <__ltsf2>:
    13fe:	a8 e1       	ldi	r26, 0x18	; 24
    1400:	b0 e0       	ldi	r27, 0x00	; 0
    1402:	e5 e0       	ldi	r30, 0x05	; 5
    1404:	fa e0       	ldi	r31, 0x0A	; 10
    1406:	0c 94 8b 0d 	jmp	0x1b16	; 0x1b16 <__prologue_saves__+0x18>
    140a:	69 83       	std	Y+1, r22	; 0x01
    140c:	7a 83       	std	Y+2, r23	; 0x02
    140e:	8b 83       	std	Y+3, r24	; 0x03
    1410:	9c 83       	std	Y+4, r25	; 0x04
    1412:	2d 83       	std	Y+5, r18	; 0x05
    1414:	3e 83       	std	Y+6, r19	; 0x06
    1416:	4f 83       	std	Y+7, r20	; 0x07
    1418:	58 87       	std	Y+8, r21	; 0x08
    141a:	89 e0       	ldi	r24, 0x09	; 9
    141c:	e8 2e       	mov	r14, r24
    141e:	f1 2c       	mov	r15, r1
    1420:	ec 0e       	add	r14, r28
    1422:	fd 1e       	adc	r15, r29
    1424:	ce 01       	movw	r24, r28
    1426:	01 96       	adiw	r24, 0x01	; 1
    1428:	b7 01       	movw	r22, r14
    142a:	0e 94 ae 0c 	call	0x195c	; 0x195c <__unpack_f>
    142e:	8e 01       	movw	r16, r28
    1430:	0f 5e       	subi	r16, 0xEF	; 239
    1432:	1f 4f       	sbci	r17, 0xFF	; 255
    1434:	ce 01       	movw	r24, r28
    1436:	05 96       	adiw	r24, 0x05	; 5
    1438:	b8 01       	movw	r22, r16
    143a:	0e 94 ae 0c 	call	0x195c	; 0x195c <__unpack_f>
    143e:	89 85       	ldd	r24, Y+9	; 0x09
    1440:	82 30       	cpi	r24, 0x02	; 2
    1442:	40 f0       	brcs	.+16     	; 0x1454 <__ltsf2+0x56>
    1444:	89 89       	ldd	r24, Y+17	; 0x11
    1446:	82 30       	cpi	r24, 0x02	; 2
    1448:	28 f0       	brcs	.+10     	; 0x1454 <__ltsf2+0x56>
    144a:	c7 01       	movw	r24, r14
    144c:	b8 01       	movw	r22, r16
    144e:	0e 94 26 0d 	call	0x1a4c	; 0x1a4c <__fpcmp_parts_f>
    1452:	01 c0       	rjmp	.+2      	; 0x1456 <__ltsf2+0x58>
    1454:	81 e0       	ldi	r24, 0x01	; 1
    1456:	68 96       	adiw	r28, 0x18	; 24
    1458:	e6 e0       	ldi	r30, 0x06	; 6
    145a:	0c 94 a7 0d 	jmp	0x1b4e	; 0x1b4e <__epilogue_restores__+0x18>

0000145e <__lesf2>:
    145e:	a8 e1       	ldi	r26, 0x18	; 24
    1460:	b0 e0       	ldi	r27, 0x00	; 0
    1462:	e5 e3       	ldi	r30, 0x35	; 53
    1464:	fa e0       	ldi	r31, 0x0A	; 10
    1466:	0c 94 8b 0d 	jmp	0x1b16	; 0x1b16 <__prologue_saves__+0x18>
    146a:	69 83       	std	Y+1, r22	; 0x01
    146c:	7a 83       	std	Y+2, r23	; 0x02
    146e:	8b 83       	std	Y+3, r24	; 0x03
    1470:	9c 83       	std	Y+4, r25	; 0x04
    1472:	2d 83       	std	Y+5, r18	; 0x05
    1474:	3e 83       	std	Y+6, r19	; 0x06
    1476:	4f 83       	std	Y+7, r20	; 0x07
    1478:	58 87       	std	Y+8, r21	; 0x08
    147a:	89 e0       	ldi	r24, 0x09	; 9
    147c:	e8 2e       	mov	r14, r24
    147e:	f1 2c       	mov	r15, r1
    1480:	ec 0e       	add	r14, r28
    1482:	fd 1e       	adc	r15, r29
    1484:	ce 01       	movw	r24, r28
    1486:	01 96       	adiw	r24, 0x01	; 1
    1488:	b7 01       	movw	r22, r14
    148a:	0e 94 ae 0c 	call	0x195c	; 0x195c <__unpack_f>
    148e:	8e 01       	movw	r16, r28
    1490:	0f 5e       	subi	r16, 0xEF	; 239
    1492:	1f 4f       	sbci	r17, 0xFF	; 255
    1494:	ce 01       	movw	r24, r28
    1496:	05 96       	adiw	r24, 0x05	; 5
    1498:	b8 01       	movw	r22, r16
    149a:	0e 94 ae 0c 	call	0x195c	; 0x195c <__unpack_f>
    149e:	89 85       	ldd	r24, Y+9	; 0x09
    14a0:	82 30       	cpi	r24, 0x02	; 2
    14a2:	40 f0       	brcs	.+16     	; 0x14b4 <__lesf2+0x56>
    14a4:	89 89       	ldd	r24, Y+17	; 0x11
    14a6:	82 30       	cpi	r24, 0x02	; 2
    14a8:	28 f0       	brcs	.+10     	; 0x14b4 <__lesf2+0x56>
    14aa:	c7 01       	movw	r24, r14
    14ac:	b8 01       	movw	r22, r16
    14ae:	0e 94 26 0d 	call	0x1a4c	; 0x1a4c <__fpcmp_parts_f>
    14b2:	01 c0       	rjmp	.+2      	; 0x14b6 <__lesf2+0x58>
    14b4:	81 e0       	ldi	r24, 0x01	; 1
    14b6:	68 96       	adiw	r28, 0x18	; 24
    14b8:	e6 e0       	ldi	r30, 0x06	; 6
    14ba:	0c 94 a7 0d 	jmp	0x1b4e	; 0x1b4e <__epilogue_restores__+0x18>

000014be <__floatsisf>:
    14be:	a8 e0       	ldi	r26, 0x08	; 8
    14c0:	b0 e0       	ldi	r27, 0x00	; 0
    14c2:	e5 e6       	ldi	r30, 0x65	; 101
    14c4:	fa e0       	ldi	r31, 0x0A	; 10
    14c6:	0c 94 88 0d 	jmp	0x1b10	; 0x1b10 <__prologue_saves__+0x12>
    14ca:	9b 01       	movw	r18, r22
    14cc:	ac 01       	movw	r20, r24
    14ce:	83 e0       	ldi	r24, 0x03	; 3
    14d0:	89 83       	std	Y+1, r24	; 0x01
    14d2:	da 01       	movw	r26, r20
    14d4:	c9 01       	movw	r24, r18
    14d6:	88 27       	eor	r24, r24
    14d8:	b7 fd       	sbrc	r27, 7
    14da:	83 95       	inc	r24
    14dc:	99 27       	eor	r25, r25
    14de:	aa 27       	eor	r26, r26
    14e0:	bb 27       	eor	r27, r27
    14e2:	b8 2e       	mov	r11, r24
    14e4:	21 15       	cp	r18, r1
    14e6:	31 05       	cpc	r19, r1
    14e8:	41 05       	cpc	r20, r1
    14ea:	51 05       	cpc	r21, r1
    14ec:	19 f4       	brne	.+6      	; 0x14f4 <__floatsisf+0x36>
    14ee:	82 e0       	ldi	r24, 0x02	; 2
    14f0:	89 83       	std	Y+1, r24	; 0x01
    14f2:	3a c0       	rjmp	.+116    	; 0x1568 <__floatsisf+0xaa>
    14f4:	88 23       	and	r24, r24
    14f6:	a9 f0       	breq	.+42     	; 0x1522 <__floatsisf+0x64>
    14f8:	20 30       	cpi	r18, 0x00	; 0
    14fa:	80 e0       	ldi	r24, 0x00	; 0
    14fc:	38 07       	cpc	r19, r24
    14fe:	80 e0       	ldi	r24, 0x00	; 0
    1500:	48 07       	cpc	r20, r24
    1502:	80 e8       	ldi	r24, 0x80	; 128
    1504:	58 07       	cpc	r21, r24
    1506:	29 f4       	brne	.+10     	; 0x1512 <__floatsisf+0x54>
    1508:	60 e0       	ldi	r22, 0x00	; 0
    150a:	70 e0       	ldi	r23, 0x00	; 0
    150c:	80 e0       	ldi	r24, 0x00	; 0
    150e:	9f ec       	ldi	r25, 0xCF	; 207
    1510:	30 c0       	rjmp	.+96     	; 0x1572 <__floatsisf+0xb4>
    1512:	ee 24       	eor	r14, r14
    1514:	ff 24       	eor	r15, r15
    1516:	87 01       	movw	r16, r14
    1518:	e2 1a       	sub	r14, r18
    151a:	f3 0a       	sbc	r15, r19
    151c:	04 0b       	sbc	r16, r20
    151e:	15 0b       	sbc	r17, r21
    1520:	02 c0       	rjmp	.+4      	; 0x1526 <__floatsisf+0x68>
    1522:	79 01       	movw	r14, r18
    1524:	8a 01       	movw	r16, r20
    1526:	8e e1       	ldi	r24, 0x1E	; 30
    1528:	c8 2e       	mov	r12, r24
    152a:	d1 2c       	mov	r13, r1
    152c:	dc 82       	std	Y+4, r13	; 0x04
    152e:	cb 82       	std	Y+3, r12	; 0x03
    1530:	ed 82       	std	Y+5, r14	; 0x05
    1532:	fe 82       	std	Y+6, r15	; 0x06
    1534:	0f 83       	std	Y+7, r16	; 0x07
    1536:	18 87       	std	Y+8, r17	; 0x08
    1538:	c8 01       	movw	r24, r16
    153a:	b7 01       	movw	r22, r14
    153c:	0e 94 8a 0b 	call	0x1714	; 0x1714 <__clzsi2>
    1540:	01 97       	sbiw	r24, 0x01	; 1
    1542:	18 16       	cp	r1, r24
    1544:	19 06       	cpc	r1, r25
    1546:	84 f4       	brge	.+32     	; 0x1568 <__floatsisf+0xaa>
    1548:	08 2e       	mov	r0, r24
    154a:	04 c0       	rjmp	.+8      	; 0x1554 <__floatsisf+0x96>
    154c:	ee 0c       	add	r14, r14
    154e:	ff 1c       	adc	r15, r15
    1550:	00 1f       	adc	r16, r16
    1552:	11 1f       	adc	r17, r17
    1554:	0a 94       	dec	r0
    1556:	d2 f7       	brpl	.-12     	; 0x154c <__floatsisf+0x8e>
    1558:	ed 82       	std	Y+5, r14	; 0x05
    155a:	fe 82       	std	Y+6, r15	; 0x06
    155c:	0f 83       	std	Y+7, r16	; 0x07
    155e:	18 87       	std	Y+8, r17	; 0x08
    1560:	c8 1a       	sub	r12, r24
    1562:	d9 0a       	sbc	r13, r25
    1564:	dc 82       	std	Y+4, r13	; 0x04
    1566:	cb 82       	std	Y+3, r12	; 0x03
    1568:	ba 82       	std	Y+2, r11	; 0x02
    156a:	ce 01       	movw	r24, r28
    156c:	01 96       	adiw	r24, 0x01	; 1
    156e:	0e 94 d9 0b 	call	0x17b2	; 0x17b2 <__pack_f>
    1572:	28 96       	adiw	r28, 0x08	; 8
    1574:	e9 e0       	ldi	r30, 0x09	; 9
    1576:	0c 94 a4 0d 	jmp	0x1b48	; 0x1b48 <__epilogue_restores__+0x12>

0000157a <__fixsfsi>:
    157a:	ac e0       	ldi	r26, 0x0C	; 12
    157c:	b0 e0       	ldi	r27, 0x00	; 0
    157e:	e3 ec       	ldi	r30, 0xC3	; 195
    1580:	fa e0       	ldi	r31, 0x0A	; 10
    1582:	0c 94 8f 0d 	jmp	0x1b1e	; 0x1b1e <__prologue_saves__+0x20>
    1586:	69 83       	std	Y+1, r22	; 0x01
    1588:	7a 83       	std	Y+2, r23	; 0x02
    158a:	8b 83       	std	Y+3, r24	; 0x03
    158c:	9c 83       	std	Y+4, r25	; 0x04
    158e:	ce 01       	movw	r24, r28
    1590:	01 96       	adiw	r24, 0x01	; 1
    1592:	be 01       	movw	r22, r28
    1594:	6b 5f       	subi	r22, 0xFB	; 251
    1596:	7f 4f       	sbci	r23, 0xFF	; 255
    1598:	0e 94 ae 0c 	call	0x195c	; 0x195c <__unpack_f>
    159c:	8d 81       	ldd	r24, Y+5	; 0x05
    159e:	82 30       	cpi	r24, 0x02	; 2
    15a0:	61 f1       	breq	.+88     	; 0x15fa <__fixsfsi+0x80>
    15a2:	82 30       	cpi	r24, 0x02	; 2
    15a4:	50 f1       	brcs	.+84     	; 0x15fa <__fixsfsi+0x80>
    15a6:	84 30       	cpi	r24, 0x04	; 4
    15a8:	21 f4       	brne	.+8      	; 0x15b2 <__fixsfsi+0x38>
    15aa:	8e 81       	ldd	r24, Y+6	; 0x06
    15ac:	88 23       	and	r24, r24
    15ae:	51 f1       	breq	.+84     	; 0x1604 <__fixsfsi+0x8a>
    15b0:	2e c0       	rjmp	.+92     	; 0x160e <__fixsfsi+0x94>
    15b2:	2f 81       	ldd	r18, Y+7	; 0x07
    15b4:	38 85       	ldd	r19, Y+8	; 0x08
    15b6:	37 fd       	sbrc	r19, 7
    15b8:	20 c0       	rjmp	.+64     	; 0x15fa <__fixsfsi+0x80>
    15ba:	6e 81       	ldd	r22, Y+6	; 0x06
    15bc:	2f 31       	cpi	r18, 0x1F	; 31
    15be:	31 05       	cpc	r19, r1
    15c0:	1c f0       	brlt	.+6      	; 0x15c8 <__fixsfsi+0x4e>
    15c2:	66 23       	and	r22, r22
    15c4:	f9 f0       	breq	.+62     	; 0x1604 <__fixsfsi+0x8a>
    15c6:	23 c0       	rjmp	.+70     	; 0x160e <__fixsfsi+0x94>
    15c8:	8e e1       	ldi	r24, 0x1E	; 30
    15ca:	90 e0       	ldi	r25, 0x00	; 0
    15cc:	82 1b       	sub	r24, r18
    15ce:	93 0b       	sbc	r25, r19
    15d0:	29 85       	ldd	r18, Y+9	; 0x09
    15d2:	3a 85       	ldd	r19, Y+10	; 0x0a
    15d4:	4b 85       	ldd	r20, Y+11	; 0x0b
    15d6:	5c 85       	ldd	r21, Y+12	; 0x0c
    15d8:	04 c0       	rjmp	.+8      	; 0x15e2 <__fixsfsi+0x68>
    15da:	56 95       	lsr	r21
    15dc:	47 95       	ror	r20
    15de:	37 95       	ror	r19
    15e0:	27 95       	ror	r18
    15e2:	8a 95       	dec	r24
    15e4:	d2 f7       	brpl	.-12     	; 0x15da <__fixsfsi+0x60>
    15e6:	66 23       	and	r22, r22
    15e8:	b1 f0       	breq	.+44     	; 0x1616 <__fixsfsi+0x9c>
    15ea:	50 95       	com	r21
    15ec:	40 95       	com	r20
    15ee:	30 95       	com	r19
    15f0:	21 95       	neg	r18
    15f2:	3f 4f       	sbci	r19, 0xFF	; 255
    15f4:	4f 4f       	sbci	r20, 0xFF	; 255
    15f6:	5f 4f       	sbci	r21, 0xFF	; 255
    15f8:	0e c0       	rjmp	.+28     	; 0x1616 <__fixsfsi+0x9c>
    15fa:	20 e0       	ldi	r18, 0x00	; 0
    15fc:	30 e0       	ldi	r19, 0x00	; 0
    15fe:	40 e0       	ldi	r20, 0x00	; 0
    1600:	50 e0       	ldi	r21, 0x00	; 0
    1602:	09 c0       	rjmp	.+18     	; 0x1616 <__fixsfsi+0x9c>
    1604:	2f ef       	ldi	r18, 0xFF	; 255
    1606:	3f ef       	ldi	r19, 0xFF	; 255
    1608:	4f ef       	ldi	r20, 0xFF	; 255
    160a:	5f e7       	ldi	r21, 0x7F	; 127
    160c:	04 c0       	rjmp	.+8      	; 0x1616 <__fixsfsi+0x9c>
    160e:	20 e0       	ldi	r18, 0x00	; 0
    1610:	30 e0       	ldi	r19, 0x00	; 0
    1612:	40 e0       	ldi	r20, 0x00	; 0
    1614:	50 e8       	ldi	r21, 0x80	; 128
    1616:	b9 01       	movw	r22, r18
    1618:	ca 01       	movw	r24, r20
    161a:	2c 96       	adiw	r28, 0x0c	; 12
    161c:	e2 e0       	ldi	r30, 0x02	; 2
    161e:	0c 94 ab 0d 	jmp	0x1b56	; 0x1b56 <__epilogue_restores__+0x20>

00001622 <__floatunsisf>:
    1622:	a8 e0       	ldi	r26, 0x08	; 8
    1624:	b0 e0       	ldi	r27, 0x00	; 0
    1626:	e7 e1       	ldi	r30, 0x17	; 23
    1628:	fb e0       	ldi	r31, 0x0B	; 11
    162a:	0c 94 87 0d 	jmp	0x1b0e	; 0x1b0e <__prologue_saves__+0x10>
    162e:	7b 01       	movw	r14, r22
    1630:	8c 01       	movw	r16, r24
    1632:	61 15       	cp	r22, r1
    1634:	71 05       	cpc	r23, r1
    1636:	81 05       	cpc	r24, r1
    1638:	91 05       	cpc	r25, r1
    163a:	19 f4       	brne	.+6      	; 0x1642 <__floatunsisf+0x20>
    163c:	82 e0       	ldi	r24, 0x02	; 2
    163e:	89 83       	std	Y+1, r24	; 0x01
    1640:	60 c0       	rjmp	.+192    	; 0x1702 <__floatunsisf+0xe0>
    1642:	83 e0       	ldi	r24, 0x03	; 3
    1644:	89 83       	std	Y+1, r24	; 0x01
    1646:	8e e1       	ldi	r24, 0x1E	; 30
    1648:	c8 2e       	mov	r12, r24
    164a:	d1 2c       	mov	r13, r1
    164c:	dc 82       	std	Y+4, r13	; 0x04
    164e:	cb 82       	std	Y+3, r12	; 0x03
    1650:	ed 82       	std	Y+5, r14	; 0x05
    1652:	fe 82       	std	Y+6, r15	; 0x06
    1654:	0f 83       	std	Y+7, r16	; 0x07
    1656:	18 87       	std	Y+8, r17	; 0x08
    1658:	c8 01       	movw	r24, r16
    165a:	b7 01       	movw	r22, r14
    165c:	0e 94 8a 0b 	call	0x1714	; 0x1714 <__clzsi2>
    1660:	fc 01       	movw	r30, r24
    1662:	31 97       	sbiw	r30, 0x01	; 1
    1664:	f7 ff       	sbrs	r31, 7
    1666:	3b c0       	rjmp	.+118    	; 0x16de <__floatunsisf+0xbc>
    1668:	22 27       	eor	r18, r18
    166a:	33 27       	eor	r19, r19
    166c:	2e 1b       	sub	r18, r30
    166e:	3f 0b       	sbc	r19, r31
    1670:	57 01       	movw	r10, r14
    1672:	68 01       	movw	r12, r16
    1674:	02 2e       	mov	r0, r18
    1676:	04 c0       	rjmp	.+8      	; 0x1680 <__floatunsisf+0x5e>
    1678:	d6 94       	lsr	r13
    167a:	c7 94       	ror	r12
    167c:	b7 94       	ror	r11
    167e:	a7 94       	ror	r10
    1680:	0a 94       	dec	r0
    1682:	d2 f7       	brpl	.-12     	; 0x1678 <__floatunsisf+0x56>
    1684:	40 e0       	ldi	r20, 0x00	; 0
    1686:	50 e0       	ldi	r21, 0x00	; 0
    1688:	60 e0       	ldi	r22, 0x00	; 0
    168a:	70 e0       	ldi	r23, 0x00	; 0
    168c:	81 e0       	ldi	r24, 0x01	; 1
    168e:	90 e0       	ldi	r25, 0x00	; 0
    1690:	a0 e0       	ldi	r26, 0x00	; 0
    1692:	b0 e0       	ldi	r27, 0x00	; 0
    1694:	04 c0       	rjmp	.+8      	; 0x169e <__floatunsisf+0x7c>
    1696:	88 0f       	add	r24, r24
    1698:	99 1f       	adc	r25, r25
    169a:	aa 1f       	adc	r26, r26
    169c:	bb 1f       	adc	r27, r27
    169e:	2a 95       	dec	r18
    16a0:	d2 f7       	brpl	.-12     	; 0x1696 <__floatunsisf+0x74>
    16a2:	01 97       	sbiw	r24, 0x01	; 1
    16a4:	a1 09       	sbc	r26, r1
    16a6:	b1 09       	sbc	r27, r1
    16a8:	8e 21       	and	r24, r14
    16aa:	9f 21       	and	r25, r15
    16ac:	a0 23       	and	r26, r16
    16ae:	b1 23       	and	r27, r17
    16b0:	00 97       	sbiw	r24, 0x00	; 0
    16b2:	a1 05       	cpc	r26, r1
    16b4:	b1 05       	cpc	r27, r1
    16b6:	21 f0       	breq	.+8      	; 0x16c0 <__floatunsisf+0x9e>
    16b8:	41 e0       	ldi	r20, 0x01	; 1
    16ba:	50 e0       	ldi	r21, 0x00	; 0
    16bc:	60 e0       	ldi	r22, 0x00	; 0
    16be:	70 e0       	ldi	r23, 0x00	; 0
    16c0:	4a 29       	or	r20, r10
    16c2:	5b 29       	or	r21, r11
    16c4:	6c 29       	or	r22, r12
    16c6:	7d 29       	or	r23, r13
    16c8:	4d 83       	std	Y+5, r20	; 0x05
    16ca:	5e 83       	std	Y+6, r21	; 0x06
    16cc:	6f 83       	std	Y+7, r22	; 0x07
    16ce:	78 87       	std	Y+8, r23	; 0x08
    16d0:	8e e1       	ldi	r24, 0x1E	; 30
    16d2:	90 e0       	ldi	r25, 0x00	; 0
    16d4:	8e 1b       	sub	r24, r30
    16d6:	9f 0b       	sbc	r25, r31
    16d8:	9c 83       	std	Y+4, r25	; 0x04
    16da:	8b 83       	std	Y+3, r24	; 0x03
    16dc:	12 c0       	rjmp	.+36     	; 0x1702 <__floatunsisf+0xe0>
    16de:	30 97       	sbiw	r30, 0x00	; 0
    16e0:	81 f0       	breq	.+32     	; 0x1702 <__floatunsisf+0xe0>
    16e2:	0e 2e       	mov	r0, r30
    16e4:	04 c0       	rjmp	.+8      	; 0x16ee <__floatunsisf+0xcc>
    16e6:	ee 0c       	add	r14, r14
    16e8:	ff 1c       	adc	r15, r15
    16ea:	00 1f       	adc	r16, r16
    16ec:	11 1f       	adc	r17, r17
    16ee:	0a 94       	dec	r0
    16f0:	d2 f7       	brpl	.-12     	; 0x16e6 <__floatunsisf+0xc4>
    16f2:	ed 82       	std	Y+5, r14	; 0x05
    16f4:	fe 82       	std	Y+6, r15	; 0x06
    16f6:	0f 83       	std	Y+7, r16	; 0x07
    16f8:	18 87       	std	Y+8, r17	; 0x08
    16fa:	ce 1a       	sub	r12, r30
    16fc:	df 0a       	sbc	r13, r31
    16fe:	dc 82       	std	Y+4, r13	; 0x04
    1700:	cb 82       	std	Y+3, r12	; 0x03
    1702:	1a 82       	std	Y+2, r1	; 0x02
    1704:	ce 01       	movw	r24, r28
    1706:	01 96       	adiw	r24, 0x01	; 1
    1708:	0e 94 d9 0b 	call	0x17b2	; 0x17b2 <__pack_f>
    170c:	28 96       	adiw	r28, 0x08	; 8
    170e:	ea e0       	ldi	r30, 0x0A	; 10
    1710:	0c 94 a3 0d 	jmp	0x1b46	; 0x1b46 <__epilogue_restores__+0x10>

00001714 <__clzsi2>:
    1714:	ef 92       	push	r14
    1716:	ff 92       	push	r15
    1718:	0f 93       	push	r16
    171a:	1f 93       	push	r17
    171c:	7b 01       	movw	r14, r22
    171e:	8c 01       	movw	r16, r24
    1720:	80 e0       	ldi	r24, 0x00	; 0
    1722:	e8 16       	cp	r14, r24
    1724:	80 e0       	ldi	r24, 0x00	; 0
    1726:	f8 06       	cpc	r15, r24
    1728:	81 e0       	ldi	r24, 0x01	; 1
    172a:	08 07       	cpc	r16, r24
    172c:	80 e0       	ldi	r24, 0x00	; 0
    172e:	18 07       	cpc	r17, r24
    1730:	88 f4       	brcc	.+34     	; 0x1754 <__clzsi2+0x40>
    1732:	8f ef       	ldi	r24, 0xFF	; 255
    1734:	e8 16       	cp	r14, r24
    1736:	f1 04       	cpc	r15, r1
    1738:	01 05       	cpc	r16, r1
    173a:	11 05       	cpc	r17, r1
    173c:	31 f0       	breq	.+12     	; 0x174a <__clzsi2+0x36>
    173e:	28 f0       	brcs	.+10     	; 0x174a <__clzsi2+0x36>
    1740:	88 e0       	ldi	r24, 0x08	; 8
    1742:	90 e0       	ldi	r25, 0x00	; 0
    1744:	a0 e0       	ldi	r26, 0x00	; 0
    1746:	b0 e0       	ldi	r27, 0x00	; 0
    1748:	17 c0       	rjmp	.+46     	; 0x1778 <__clzsi2+0x64>
    174a:	80 e0       	ldi	r24, 0x00	; 0
    174c:	90 e0       	ldi	r25, 0x00	; 0
    174e:	a0 e0       	ldi	r26, 0x00	; 0
    1750:	b0 e0       	ldi	r27, 0x00	; 0
    1752:	12 c0       	rjmp	.+36     	; 0x1778 <__clzsi2+0x64>
    1754:	80 e0       	ldi	r24, 0x00	; 0
    1756:	e8 16       	cp	r14, r24
    1758:	80 e0       	ldi	r24, 0x00	; 0
    175a:	f8 06       	cpc	r15, r24
    175c:	80 e0       	ldi	r24, 0x00	; 0
    175e:	08 07       	cpc	r16, r24
    1760:	81 e0       	ldi	r24, 0x01	; 1
    1762:	18 07       	cpc	r17, r24
    1764:	28 f0       	brcs	.+10     	; 0x1770 <__clzsi2+0x5c>
    1766:	88 e1       	ldi	r24, 0x18	; 24
    1768:	90 e0       	ldi	r25, 0x00	; 0
    176a:	a0 e0       	ldi	r26, 0x00	; 0
    176c:	b0 e0       	ldi	r27, 0x00	; 0
    176e:	04 c0       	rjmp	.+8      	; 0x1778 <__clzsi2+0x64>
    1770:	80 e1       	ldi	r24, 0x10	; 16
    1772:	90 e0       	ldi	r25, 0x00	; 0
    1774:	a0 e0       	ldi	r26, 0x00	; 0
    1776:	b0 e0       	ldi	r27, 0x00	; 0
    1778:	20 e2       	ldi	r18, 0x20	; 32
    177a:	30 e0       	ldi	r19, 0x00	; 0
    177c:	40 e0       	ldi	r20, 0x00	; 0
    177e:	50 e0       	ldi	r21, 0x00	; 0
    1780:	28 1b       	sub	r18, r24
    1782:	39 0b       	sbc	r19, r25
    1784:	4a 0b       	sbc	r20, r26
    1786:	5b 0b       	sbc	r21, r27
    1788:	04 c0       	rjmp	.+8      	; 0x1792 <__clzsi2+0x7e>
    178a:	16 95       	lsr	r17
    178c:	07 95       	ror	r16
    178e:	f7 94       	ror	r15
    1790:	e7 94       	ror	r14
    1792:	8a 95       	dec	r24
    1794:	d2 f7       	brpl	.-12     	; 0x178a <__clzsi2+0x76>
    1796:	f7 01       	movw	r30, r14
    1798:	e8 5f       	subi	r30, 0xF8	; 248
    179a:	fd 4f       	sbci	r31, 0xFD	; 253
    179c:	80 81       	ld	r24, Z
    179e:	28 1b       	sub	r18, r24
    17a0:	31 09       	sbc	r19, r1
    17a2:	41 09       	sbc	r20, r1
    17a4:	51 09       	sbc	r21, r1
    17a6:	c9 01       	movw	r24, r18
    17a8:	1f 91       	pop	r17
    17aa:	0f 91       	pop	r16
    17ac:	ff 90       	pop	r15
    17ae:	ef 90       	pop	r14
    17b0:	08 95       	ret

000017b2 <__pack_f>:
    17b2:	df 92       	push	r13
    17b4:	ef 92       	push	r14
    17b6:	ff 92       	push	r15
    17b8:	0f 93       	push	r16
    17ba:	1f 93       	push	r17
    17bc:	fc 01       	movw	r30, r24
    17be:	e4 80       	ldd	r14, Z+4	; 0x04
    17c0:	f5 80       	ldd	r15, Z+5	; 0x05
    17c2:	06 81       	ldd	r16, Z+6	; 0x06
    17c4:	17 81       	ldd	r17, Z+7	; 0x07
    17c6:	d1 80       	ldd	r13, Z+1	; 0x01
    17c8:	80 81       	ld	r24, Z
    17ca:	82 30       	cpi	r24, 0x02	; 2
    17cc:	48 f4       	brcc	.+18     	; 0x17e0 <__pack_f+0x2e>
    17ce:	80 e0       	ldi	r24, 0x00	; 0
    17d0:	90 e0       	ldi	r25, 0x00	; 0
    17d2:	a0 e1       	ldi	r26, 0x10	; 16
    17d4:	b0 e0       	ldi	r27, 0x00	; 0
    17d6:	e8 2a       	or	r14, r24
    17d8:	f9 2a       	or	r15, r25
    17da:	0a 2b       	or	r16, r26
    17dc:	1b 2b       	or	r17, r27
    17de:	a5 c0       	rjmp	.+330    	; 0x192a <__pack_f+0x178>
    17e0:	84 30       	cpi	r24, 0x04	; 4
    17e2:	09 f4       	brne	.+2      	; 0x17e6 <__pack_f+0x34>
    17e4:	9f c0       	rjmp	.+318    	; 0x1924 <__pack_f+0x172>
    17e6:	82 30       	cpi	r24, 0x02	; 2
    17e8:	21 f4       	brne	.+8      	; 0x17f2 <__pack_f+0x40>
    17ea:	ee 24       	eor	r14, r14
    17ec:	ff 24       	eor	r15, r15
    17ee:	87 01       	movw	r16, r14
    17f0:	05 c0       	rjmp	.+10     	; 0x17fc <__pack_f+0x4a>
    17f2:	e1 14       	cp	r14, r1
    17f4:	f1 04       	cpc	r15, r1
    17f6:	01 05       	cpc	r16, r1
    17f8:	11 05       	cpc	r17, r1
    17fa:	19 f4       	brne	.+6      	; 0x1802 <__pack_f+0x50>
    17fc:	e0 e0       	ldi	r30, 0x00	; 0
    17fe:	f0 e0       	ldi	r31, 0x00	; 0
    1800:	96 c0       	rjmp	.+300    	; 0x192e <__pack_f+0x17c>
    1802:	62 81       	ldd	r22, Z+2	; 0x02
    1804:	73 81       	ldd	r23, Z+3	; 0x03
    1806:	9f ef       	ldi	r25, 0xFF	; 255
    1808:	62 38       	cpi	r22, 0x82	; 130
    180a:	79 07       	cpc	r23, r25
    180c:	0c f0       	brlt	.+2      	; 0x1810 <__pack_f+0x5e>
    180e:	5b c0       	rjmp	.+182    	; 0x18c6 <__pack_f+0x114>
    1810:	22 e8       	ldi	r18, 0x82	; 130
    1812:	3f ef       	ldi	r19, 0xFF	; 255
    1814:	26 1b       	sub	r18, r22
    1816:	37 0b       	sbc	r19, r23
    1818:	2a 31       	cpi	r18, 0x1A	; 26
    181a:	31 05       	cpc	r19, r1
    181c:	2c f0       	brlt	.+10     	; 0x1828 <__pack_f+0x76>
    181e:	20 e0       	ldi	r18, 0x00	; 0
    1820:	30 e0       	ldi	r19, 0x00	; 0
    1822:	40 e0       	ldi	r20, 0x00	; 0
    1824:	50 e0       	ldi	r21, 0x00	; 0
    1826:	2a c0       	rjmp	.+84     	; 0x187c <__pack_f+0xca>
    1828:	b8 01       	movw	r22, r16
    182a:	a7 01       	movw	r20, r14
    182c:	02 2e       	mov	r0, r18
    182e:	04 c0       	rjmp	.+8      	; 0x1838 <__pack_f+0x86>
    1830:	76 95       	lsr	r23
    1832:	67 95       	ror	r22
    1834:	57 95       	ror	r21
    1836:	47 95       	ror	r20
    1838:	0a 94       	dec	r0
    183a:	d2 f7       	brpl	.-12     	; 0x1830 <__pack_f+0x7e>
    183c:	81 e0       	ldi	r24, 0x01	; 1
    183e:	90 e0       	ldi	r25, 0x00	; 0
    1840:	a0 e0       	ldi	r26, 0x00	; 0
    1842:	b0 e0       	ldi	r27, 0x00	; 0
    1844:	04 c0       	rjmp	.+8      	; 0x184e <__pack_f+0x9c>
    1846:	88 0f       	add	r24, r24
    1848:	99 1f       	adc	r25, r25
    184a:	aa 1f       	adc	r26, r26
    184c:	bb 1f       	adc	r27, r27
    184e:	2a 95       	dec	r18
    1850:	d2 f7       	brpl	.-12     	; 0x1846 <__pack_f+0x94>
    1852:	01 97       	sbiw	r24, 0x01	; 1
    1854:	a1 09       	sbc	r26, r1
    1856:	b1 09       	sbc	r27, r1
    1858:	8e 21       	and	r24, r14
    185a:	9f 21       	and	r25, r15
    185c:	a0 23       	and	r26, r16
    185e:	b1 23       	and	r27, r17
    1860:	00 97       	sbiw	r24, 0x00	; 0
    1862:	a1 05       	cpc	r26, r1
    1864:	b1 05       	cpc	r27, r1
    1866:	21 f0       	breq	.+8      	; 0x1870 <__pack_f+0xbe>
    1868:	81 e0       	ldi	r24, 0x01	; 1
    186a:	90 e0       	ldi	r25, 0x00	; 0
    186c:	a0 e0       	ldi	r26, 0x00	; 0
    186e:	b0 e0       	ldi	r27, 0x00	; 0
    1870:	9a 01       	movw	r18, r20
    1872:	ab 01       	movw	r20, r22
    1874:	28 2b       	or	r18, r24
    1876:	39 2b       	or	r19, r25
    1878:	4a 2b       	or	r20, r26
    187a:	5b 2b       	or	r21, r27
    187c:	da 01       	movw	r26, r20
    187e:	c9 01       	movw	r24, r18
    1880:	8f 77       	andi	r24, 0x7F	; 127
    1882:	90 70       	andi	r25, 0x00	; 0
    1884:	a0 70       	andi	r26, 0x00	; 0
    1886:	b0 70       	andi	r27, 0x00	; 0
    1888:	80 34       	cpi	r24, 0x40	; 64
    188a:	91 05       	cpc	r25, r1
    188c:	a1 05       	cpc	r26, r1
    188e:	b1 05       	cpc	r27, r1
    1890:	39 f4       	brne	.+14     	; 0x18a0 <__pack_f+0xee>
    1892:	27 ff       	sbrs	r18, 7
    1894:	09 c0       	rjmp	.+18     	; 0x18a8 <__pack_f+0xf6>
    1896:	20 5c       	subi	r18, 0xC0	; 192
    1898:	3f 4f       	sbci	r19, 0xFF	; 255
    189a:	4f 4f       	sbci	r20, 0xFF	; 255
    189c:	5f 4f       	sbci	r21, 0xFF	; 255
    189e:	04 c0       	rjmp	.+8      	; 0x18a8 <__pack_f+0xf6>
    18a0:	21 5c       	subi	r18, 0xC1	; 193
    18a2:	3f 4f       	sbci	r19, 0xFF	; 255
    18a4:	4f 4f       	sbci	r20, 0xFF	; 255
    18a6:	5f 4f       	sbci	r21, 0xFF	; 255
    18a8:	e0 e0       	ldi	r30, 0x00	; 0
    18aa:	f0 e0       	ldi	r31, 0x00	; 0
    18ac:	20 30       	cpi	r18, 0x00	; 0
    18ae:	a0 e0       	ldi	r26, 0x00	; 0
    18b0:	3a 07       	cpc	r19, r26
    18b2:	a0 e0       	ldi	r26, 0x00	; 0
    18b4:	4a 07       	cpc	r20, r26
    18b6:	a0 e4       	ldi	r26, 0x40	; 64
    18b8:	5a 07       	cpc	r21, r26
    18ba:	10 f0       	brcs	.+4      	; 0x18c0 <__pack_f+0x10e>
    18bc:	e1 e0       	ldi	r30, 0x01	; 1
    18be:	f0 e0       	ldi	r31, 0x00	; 0
    18c0:	79 01       	movw	r14, r18
    18c2:	8a 01       	movw	r16, r20
    18c4:	27 c0       	rjmp	.+78     	; 0x1914 <__pack_f+0x162>
    18c6:	60 38       	cpi	r22, 0x80	; 128
    18c8:	71 05       	cpc	r23, r1
    18ca:	64 f5       	brge	.+88     	; 0x1924 <__pack_f+0x172>
    18cc:	fb 01       	movw	r30, r22
    18ce:	e1 58       	subi	r30, 0x81	; 129
    18d0:	ff 4f       	sbci	r31, 0xFF	; 255
    18d2:	d8 01       	movw	r26, r16
    18d4:	c7 01       	movw	r24, r14
    18d6:	8f 77       	andi	r24, 0x7F	; 127
    18d8:	90 70       	andi	r25, 0x00	; 0
    18da:	a0 70       	andi	r26, 0x00	; 0
    18dc:	b0 70       	andi	r27, 0x00	; 0
    18de:	80 34       	cpi	r24, 0x40	; 64
    18e0:	91 05       	cpc	r25, r1
    18e2:	a1 05       	cpc	r26, r1
    18e4:	b1 05       	cpc	r27, r1
    18e6:	39 f4       	brne	.+14     	; 0x18f6 <__pack_f+0x144>
    18e8:	e7 fe       	sbrs	r14, 7
    18ea:	0d c0       	rjmp	.+26     	; 0x1906 <__pack_f+0x154>
    18ec:	80 e4       	ldi	r24, 0x40	; 64
    18ee:	90 e0       	ldi	r25, 0x00	; 0
    18f0:	a0 e0       	ldi	r26, 0x00	; 0
    18f2:	b0 e0       	ldi	r27, 0x00	; 0
    18f4:	04 c0       	rjmp	.+8      	; 0x18fe <__pack_f+0x14c>
    18f6:	8f e3       	ldi	r24, 0x3F	; 63
    18f8:	90 e0       	ldi	r25, 0x00	; 0
    18fa:	a0 e0       	ldi	r26, 0x00	; 0
    18fc:	b0 e0       	ldi	r27, 0x00	; 0
    18fe:	e8 0e       	add	r14, r24
    1900:	f9 1e       	adc	r15, r25
    1902:	0a 1f       	adc	r16, r26
    1904:	1b 1f       	adc	r17, r27
    1906:	17 ff       	sbrs	r17, 7
    1908:	05 c0       	rjmp	.+10     	; 0x1914 <__pack_f+0x162>
    190a:	16 95       	lsr	r17
    190c:	07 95       	ror	r16
    190e:	f7 94       	ror	r15
    1910:	e7 94       	ror	r14
    1912:	31 96       	adiw	r30, 0x01	; 1
    1914:	87 e0       	ldi	r24, 0x07	; 7
    1916:	16 95       	lsr	r17
    1918:	07 95       	ror	r16
    191a:	f7 94       	ror	r15
    191c:	e7 94       	ror	r14
    191e:	8a 95       	dec	r24
    1920:	d1 f7       	brne	.-12     	; 0x1916 <__pack_f+0x164>
    1922:	05 c0       	rjmp	.+10     	; 0x192e <__pack_f+0x17c>
    1924:	ee 24       	eor	r14, r14
    1926:	ff 24       	eor	r15, r15
    1928:	87 01       	movw	r16, r14
    192a:	ef ef       	ldi	r30, 0xFF	; 255
    192c:	f0 e0       	ldi	r31, 0x00	; 0
    192e:	6e 2f       	mov	r22, r30
    1930:	67 95       	ror	r22
    1932:	66 27       	eor	r22, r22
    1934:	67 95       	ror	r22
    1936:	90 2f       	mov	r25, r16
    1938:	9f 77       	andi	r25, 0x7F	; 127
    193a:	d7 94       	ror	r13
    193c:	dd 24       	eor	r13, r13
    193e:	d7 94       	ror	r13
    1940:	8e 2f       	mov	r24, r30
    1942:	86 95       	lsr	r24
    1944:	49 2f       	mov	r20, r25
    1946:	46 2b       	or	r20, r22
    1948:	58 2f       	mov	r21, r24
    194a:	5d 29       	or	r21, r13
    194c:	b7 01       	movw	r22, r14
    194e:	ca 01       	movw	r24, r20
    1950:	1f 91       	pop	r17
    1952:	0f 91       	pop	r16
    1954:	ff 90       	pop	r15
    1956:	ef 90       	pop	r14
    1958:	df 90       	pop	r13
    195a:	08 95       	ret

0000195c <__unpack_f>:
    195c:	fc 01       	movw	r30, r24
    195e:	db 01       	movw	r26, r22
    1960:	40 81       	ld	r20, Z
    1962:	51 81       	ldd	r21, Z+1	; 0x01
    1964:	22 81       	ldd	r18, Z+2	; 0x02
    1966:	62 2f       	mov	r22, r18
    1968:	6f 77       	andi	r22, 0x7F	; 127
    196a:	70 e0       	ldi	r23, 0x00	; 0
    196c:	22 1f       	adc	r18, r18
    196e:	22 27       	eor	r18, r18
    1970:	22 1f       	adc	r18, r18
    1972:	93 81       	ldd	r25, Z+3	; 0x03
    1974:	89 2f       	mov	r24, r25
    1976:	88 0f       	add	r24, r24
    1978:	82 2b       	or	r24, r18
    197a:	28 2f       	mov	r18, r24
    197c:	30 e0       	ldi	r19, 0x00	; 0
    197e:	99 1f       	adc	r25, r25
    1980:	99 27       	eor	r25, r25
    1982:	99 1f       	adc	r25, r25
    1984:	11 96       	adiw	r26, 0x01	; 1
    1986:	9c 93       	st	X, r25
    1988:	11 97       	sbiw	r26, 0x01	; 1
    198a:	21 15       	cp	r18, r1
    198c:	31 05       	cpc	r19, r1
    198e:	a9 f5       	brne	.+106    	; 0x19fa <__unpack_f+0x9e>
    1990:	41 15       	cp	r20, r1
    1992:	51 05       	cpc	r21, r1
    1994:	61 05       	cpc	r22, r1
    1996:	71 05       	cpc	r23, r1
    1998:	11 f4       	brne	.+4      	; 0x199e <__unpack_f+0x42>
    199a:	82 e0       	ldi	r24, 0x02	; 2
    199c:	37 c0       	rjmp	.+110    	; 0x1a0c <__unpack_f+0xb0>
    199e:	82 e8       	ldi	r24, 0x82	; 130
    19a0:	9f ef       	ldi	r25, 0xFF	; 255
    19a2:	13 96       	adiw	r26, 0x03	; 3
    19a4:	9c 93       	st	X, r25
    19a6:	8e 93       	st	-X, r24
    19a8:	12 97       	sbiw	r26, 0x02	; 2
    19aa:	9a 01       	movw	r18, r20
    19ac:	ab 01       	movw	r20, r22
    19ae:	67 e0       	ldi	r22, 0x07	; 7
    19b0:	22 0f       	add	r18, r18
    19b2:	33 1f       	adc	r19, r19
    19b4:	44 1f       	adc	r20, r20
    19b6:	55 1f       	adc	r21, r21
    19b8:	6a 95       	dec	r22
    19ba:	d1 f7       	brne	.-12     	; 0x19b0 <__unpack_f+0x54>
    19bc:	83 e0       	ldi	r24, 0x03	; 3
    19be:	8c 93       	st	X, r24
    19c0:	0d c0       	rjmp	.+26     	; 0x19dc <__unpack_f+0x80>
    19c2:	22 0f       	add	r18, r18
    19c4:	33 1f       	adc	r19, r19
    19c6:	44 1f       	adc	r20, r20
    19c8:	55 1f       	adc	r21, r21
    19ca:	12 96       	adiw	r26, 0x02	; 2
    19cc:	8d 91       	ld	r24, X+
    19ce:	9c 91       	ld	r25, X
    19d0:	13 97       	sbiw	r26, 0x03	; 3
    19d2:	01 97       	sbiw	r24, 0x01	; 1
    19d4:	13 96       	adiw	r26, 0x03	; 3
    19d6:	9c 93       	st	X, r25
    19d8:	8e 93       	st	-X, r24
    19da:	12 97       	sbiw	r26, 0x02	; 2
    19dc:	20 30       	cpi	r18, 0x00	; 0
    19de:	80 e0       	ldi	r24, 0x00	; 0
    19e0:	38 07       	cpc	r19, r24
    19e2:	80 e0       	ldi	r24, 0x00	; 0
    19e4:	48 07       	cpc	r20, r24
    19e6:	80 e4       	ldi	r24, 0x40	; 64
    19e8:	58 07       	cpc	r21, r24
    19ea:	58 f3       	brcs	.-42     	; 0x19c2 <__unpack_f+0x66>
    19ec:	14 96       	adiw	r26, 0x04	; 4
    19ee:	2d 93       	st	X+, r18
    19f0:	3d 93       	st	X+, r19
    19f2:	4d 93       	st	X+, r20
    19f4:	5c 93       	st	X, r21
    19f6:	17 97       	sbiw	r26, 0x07	; 7
    19f8:	08 95       	ret
    19fa:	2f 3f       	cpi	r18, 0xFF	; 255
    19fc:	31 05       	cpc	r19, r1
    19fe:	79 f4       	brne	.+30     	; 0x1a1e <__unpack_f+0xc2>
    1a00:	41 15       	cp	r20, r1
    1a02:	51 05       	cpc	r21, r1
    1a04:	61 05       	cpc	r22, r1
    1a06:	71 05       	cpc	r23, r1
    1a08:	19 f4       	brne	.+6      	; 0x1a10 <__unpack_f+0xb4>
    1a0a:	84 e0       	ldi	r24, 0x04	; 4
    1a0c:	8c 93       	st	X, r24
    1a0e:	08 95       	ret
    1a10:	64 ff       	sbrs	r22, 4
    1a12:	03 c0       	rjmp	.+6      	; 0x1a1a <__unpack_f+0xbe>
    1a14:	81 e0       	ldi	r24, 0x01	; 1
    1a16:	8c 93       	st	X, r24
    1a18:	12 c0       	rjmp	.+36     	; 0x1a3e <__unpack_f+0xe2>
    1a1a:	1c 92       	st	X, r1
    1a1c:	10 c0       	rjmp	.+32     	; 0x1a3e <__unpack_f+0xe2>
    1a1e:	2f 57       	subi	r18, 0x7F	; 127
    1a20:	30 40       	sbci	r19, 0x00	; 0
    1a22:	13 96       	adiw	r26, 0x03	; 3
    1a24:	3c 93       	st	X, r19
    1a26:	2e 93       	st	-X, r18
    1a28:	12 97       	sbiw	r26, 0x02	; 2
    1a2a:	83 e0       	ldi	r24, 0x03	; 3
    1a2c:	8c 93       	st	X, r24
    1a2e:	87 e0       	ldi	r24, 0x07	; 7
    1a30:	44 0f       	add	r20, r20
    1a32:	55 1f       	adc	r21, r21
    1a34:	66 1f       	adc	r22, r22
    1a36:	77 1f       	adc	r23, r23
    1a38:	8a 95       	dec	r24
    1a3a:	d1 f7       	brne	.-12     	; 0x1a30 <__unpack_f+0xd4>
    1a3c:	70 64       	ori	r23, 0x40	; 64
    1a3e:	14 96       	adiw	r26, 0x04	; 4
    1a40:	4d 93       	st	X+, r20
    1a42:	5d 93       	st	X+, r21
    1a44:	6d 93       	st	X+, r22
    1a46:	7c 93       	st	X, r23
    1a48:	17 97       	sbiw	r26, 0x07	; 7
    1a4a:	08 95       	ret

00001a4c <__fpcmp_parts_f>:
    1a4c:	1f 93       	push	r17
    1a4e:	dc 01       	movw	r26, r24
    1a50:	fb 01       	movw	r30, r22
    1a52:	9c 91       	ld	r25, X
    1a54:	92 30       	cpi	r25, 0x02	; 2
    1a56:	08 f4       	brcc	.+2      	; 0x1a5a <__fpcmp_parts_f+0xe>
    1a58:	47 c0       	rjmp	.+142    	; 0x1ae8 <__fpcmp_parts_f+0x9c>
    1a5a:	80 81       	ld	r24, Z
    1a5c:	82 30       	cpi	r24, 0x02	; 2
    1a5e:	08 f4       	brcc	.+2      	; 0x1a62 <__fpcmp_parts_f+0x16>
    1a60:	43 c0       	rjmp	.+134    	; 0x1ae8 <__fpcmp_parts_f+0x9c>
    1a62:	94 30       	cpi	r25, 0x04	; 4
    1a64:	51 f4       	brne	.+20     	; 0x1a7a <__fpcmp_parts_f+0x2e>
    1a66:	11 96       	adiw	r26, 0x01	; 1
    1a68:	1c 91       	ld	r17, X
    1a6a:	84 30       	cpi	r24, 0x04	; 4
    1a6c:	99 f5       	brne	.+102    	; 0x1ad4 <__fpcmp_parts_f+0x88>
    1a6e:	81 81       	ldd	r24, Z+1	; 0x01
    1a70:	68 2f       	mov	r22, r24
    1a72:	70 e0       	ldi	r23, 0x00	; 0
    1a74:	61 1b       	sub	r22, r17
    1a76:	71 09       	sbc	r23, r1
    1a78:	3f c0       	rjmp	.+126    	; 0x1af8 <__fpcmp_parts_f+0xac>
    1a7a:	84 30       	cpi	r24, 0x04	; 4
    1a7c:	21 f0       	breq	.+8      	; 0x1a86 <__fpcmp_parts_f+0x3a>
    1a7e:	92 30       	cpi	r25, 0x02	; 2
    1a80:	31 f4       	brne	.+12     	; 0x1a8e <__fpcmp_parts_f+0x42>
    1a82:	82 30       	cpi	r24, 0x02	; 2
    1a84:	b9 f1       	breq	.+110    	; 0x1af4 <__fpcmp_parts_f+0xa8>
    1a86:	81 81       	ldd	r24, Z+1	; 0x01
    1a88:	88 23       	and	r24, r24
    1a8a:	89 f1       	breq	.+98     	; 0x1aee <__fpcmp_parts_f+0xa2>
    1a8c:	2d c0       	rjmp	.+90     	; 0x1ae8 <__fpcmp_parts_f+0x9c>
    1a8e:	11 96       	adiw	r26, 0x01	; 1
    1a90:	1c 91       	ld	r17, X
    1a92:	11 97       	sbiw	r26, 0x01	; 1
    1a94:	82 30       	cpi	r24, 0x02	; 2
    1a96:	f1 f0       	breq	.+60     	; 0x1ad4 <__fpcmp_parts_f+0x88>
    1a98:	81 81       	ldd	r24, Z+1	; 0x01
    1a9a:	18 17       	cp	r17, r24
    1a9c:	d9 f4       	brne	.+54     	; 0x1ad4 <__fpcmp_parts_f+0x88>
    1a9e:	12 96       	adiw	r26, 0x02	; 2
    1aa0:	2d 91       	ld	r18, X+
    1aa2:	3c 91       	ld	r19, X
    1aa4:	13 97       	sbiw	r26, 0x03	; 3
    1aa6:	82 81       	ldd	r24, Z+2	; 0x02
    1aa8:	93 81       	ldd	r25, Z+3	; 0x03
    1aaa:	82 17       	cp	r24, r18
    1aac:	93 07       	cpc	r25, r19
    1aae:	94 f0       	brlt	.+36     	; 0x1ad4 <__fpcmp_parts_f+0x88>
    1ab0:	28 17       	cp	r18, r24
    1ab2:	39 07       	cpc	r19, r25
    1ab4:	bc f0       	brlt	.+46     	; 0x1ae4 <__fpcmp_parts_f+0x98>
    1ab6:	14 96       	adiw	r26, 0x04	; 4
    1ab8:	8d 91       	ld	r24, X+
    1aba:	9d 91       	ld	r25, X+
    1abc:	0d 90       	ld	r0, X+
    1abe:	bc 91       	ld	r27, X
    1ac0:	a0 2d       	mov	r26, r0
    1ac2:	24 81       	ldd	r18, Z+4	; 0x04
    1ac4:	35 81       	ldd	r19, Z+5	; 0x05
    1ac6:	46 81       	ldd	r20, Z+6	; 0x06
    1ac8:	57 81       	ldd	r21, Z+7	; 0x07
    1aca:	28 17       	cp	r18, r24
    1acc:	39 07       	cpc	r19, r25
    1ace:	4a 07       	cpc	r20, r26
    1ad0:	5b 07       	cpc	r21, r27
    1ad2:	18 f4       	brcc	.+6      	; 0x1ada <__fpcmp_parts_f+0x8e>
    1ad4:	11 23       	and	r17, r17
    1ad6:	41 f0       	breq	.+16     	; 0x1ae8 <__fpcmp_parts_f+0x9c>
    1ad8:	0a c0       	rjmp	.+20     	; 0x1aee <__fpcmp_parts_f+0xa2>
    1ada:	82 17       	cp	r24, r18
    1adc:	93 07       	cpc	r25, r19
    1ade:	a4 07       	cpc	r26, r20
    1ae0:	b5 07       	cpc	r27, r21
    1ae2:	40 f4       	brcc	.+16     	; 0x1af4 <__fpcmp_parts_f+0xa8>
    1ae4:	11 23       	and	r17, r17
    1ae6:	19 f0       	breq	.+6      	; 0x1aee <__fpcmp_parts_f+0xa2>
    1ae8:	61 e0       	ldi	r22, 0x01	; 1
    1aea:	70 e0       	ldi	r23, 0x00	; 0
    1aec:	05 c0       	rjmp	.+10     	; 0x1af8 <__fpcmp_parts_f+0xac>
    1aee:	6f ef       	ldi	r22, 0xFF	; 255
    1af0:	7f ef       	ldi	r23, 0xFF	; 255
    1af2:	02 c0       	rjmp	.+4      	; 0x1af8 <__fpcmp_parts_f+0xac>
    1af4:	60 e0       	ldi	r22, 0x00	; 0
    1af6:	70 e0       	ldi	r23, 0x00	; 0
    1af8:	cb 01       	movw	r24, r22
    1afa:	1f 91       	pop	r17
    1afc:	08 95       	ret

00001afe <__prologue_saves__>:
    1afe:	2f 92       	push	r2
    1b00:	3f 92       	push	r3
    1b02:	4f 92       	push	r4
    1b04:	5f 92       	push	r5
    1b06:	6f 92       	push	r6
    1b08:	7f 92       	push	r7
    1b0a:	8f 92       	push	r8
    1b0c:	9f 92       	push	r9
    1b0e:	af 92       	push	r10
    1b10:	bf 92       	push	r11
    1b12:	cf 92       	push	r12
    1b14:	df 92       	push	r13
    1b16:	ef 92       	push	r14
    1b18:	ff 92       	push	r15
    1b1a:	0f 93       	push	r16
    1b1c:	1f 93       	push	r17
    1b1e:	cf 93       	push	r28
    1b20:	df 93       	push	r29
    1b22:	cd b7       	in	r28, 0x3d	; 61
    1b24:	de b7       	in	r29, 0x3e	; 62
    1b26:	ca 1b       	sub	r28, r26
    1b28:	db 0b       	sbc	r29, r27
    1b2a:	0f b6       	in	r0, 0x3f	; 63
    1b2c:	f8 94       	cli
    1b2e:	de bf       	out	0x3e, r29	; 62
    1b30:	0f be       	out	0x3f, r0	; 63
    1b32:	cd bf       	out	0x3d, r28	; 61
    1b34:	19 94       	eijmp

00001b36 <__epilogue_restores__>:
    1b36:	2a 88       	ldd	r2, Y+18	; 0x12
    1b38:	39 88       	ldd	r3, Y+17	; 0x11
    1b3a:	48 88       	ldd	r4, Y+16	; 0x10
    1b3c:	5f 84       	ldd	r5, Y+15	; 0x0f
    1b3e:	6e 84       	ldd	r6, Y+14	; 0x0e
    1b40:	7d 84       	ldd	r7, Y+13	; 0x0d
    1b42:	8c 84       	ldd	r8, Y+12	; 0x0c
    1b44:	9b 84       	ldd	r9, Y+11	; 0x0b
    1b46:	aa 84       	ldd	r10, Y+10	; 0x0a
    1b48:	b9 84       	ldd	r11, Y+9	; 0x09
    1b4a:	c8 84       	ldd	r12, Y+8	; 0x08
    1b4c:	df 80       	ldd	r13, Y+7	; 0x07
    1b4e:	ee 80       	ldd	r14, Y+6	; 0x06
    1b50:	fd 80       	ldd	r15, Y+5	; 0x05
    1b52:	0c 81       	ldd	r16, Y+4	; 0x04
    1b54:	1b 81       	ldd	r17, Y+3	; 0x03
    1b56:	aa 81       	ldd	r26, Y+2	; 0x02
    1b58:	b9 81       	ldd	r27, Y+1	; 0x01
    1b5a:	ce 0f       	add	r28, r30
    1b5c:	d1 1d       	adc	r29, r1
    1b5e:	0f b6       	in	r0, 0x3f	; 63
    1b60:	f8 94       	cli
    1b62:	de bf       	out	0x3e, r29	; 62
    1b64:	0f be       	out	0x3f, r0	; 63
    1b66:	cd bf       	out	0x3d, r28	; 61
    1b68:	ed 01       	movw	r28, r26
    1b6a:	08 95       	ret

00001b6c <_exit>:
    1b6c:	f8 94       	cli

00001b6e <__stop_program>:
    1b6e:	ff cf       	rjmp	.-2      	; 0x1b6e <__stop_program>
