
bin\Debug\project_b3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000108  00800200  0000193c  000019f0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000193c  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000018  00800308  00800308  00001af8  2**0
                  ALLOC
  3 .fuse         00000003  00820000  00820000  00001af8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .debug_aranges 00000220  00000000  00000000  00001afb  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000461  00000000  00000000  00001d1b  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000029ff  00000000  00000000  0000217c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000163a  00000000  00000000  00004b7b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000018d8  00000000  00000000  000061b5  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000320  00000000  00000000  00007a90  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004b8  00000000  00000000  00007db0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000996  00000000  00000000  00008268  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  00008bfe  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__ctors_end>
       4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
       8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
       c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      10:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      14:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      18:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      1c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      20:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      24:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      28:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      2c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      30:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      34:	0c 94 5d 04 	jmp	0x8ba	; 0x8ba <__vector_13>
      38:	0c 94 9a 04 	jmp	0x934	; 0x934 <__vector_14>
      3c:	0c 94 20 04 	jmp	0x840	; 0x840 <__vector_15>
      40:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      44:	0c 94 ce 02 	jmp	0x59c	; 0x59c <__vector_17>
      48:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      4c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      50:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      54:	0c 94 27 05 	jmp	0xa4e	; 0xa4e <__vector_21>
      58:	0c 94 4e 05 	jmp	0xa9c	; 0xa9c <__vector_22>
      5c:	0c 94 d7 04 	jmp	0x9ae	; 0x9ae <__vector_23>
      60:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      64:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      68:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      6c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      70:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      74:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      78:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      7c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      80:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      84:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      88:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      8c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      90:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      94:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      98:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      9c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      a0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      a4:	0c 94 f9 02 	jmp	0x5f2	; 0x5f2 <__vector_41>
      a8:	0c 94 f2 03 	jmp	0x7e4	; 0x7e4 <__vector_42>
      ac:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      b0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      b4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      b8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      bc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      c0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      c4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      c8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      cc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      d0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      d4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      d8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      dc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      e0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	13 e0       	ldi	r17, 0x03	; 3
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b2 e0       	ldi	r27, 0x02	; 2
      fa:	ec e3       	ldi	r30, 0x3C	; 60
      fc:	f9 e1       	ldi	r31, 0x19	; 25
      fe:	00 e0       	ldi	r16, 0x00	; 0
     100:	0b bf       	out	0x3b, r16	; 59
     102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
     104:	07 90       	elpm	r0, Z+
     106:	0d 92       	st	X+, r0
     108:	a8 30       	cpi	r26, 0x08	; 8
     10a:	b1 07       	cpc	r27, r17
     10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
     10e:	13 e0       	ldi	r17, 0x03	; 3
     110:	a8 e0       	ldi	r26, 0x08	; 8
     112:	b3 e0       	ldi	r27, 0x03	; 3
     114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
     116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
     118:	a0 32       	cpi	r26, 0x20	; 32
     11a:	b1 07       	cpc	r27, r17
     11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
     11e:	0e 94 95 00 	call	0x12a	; 0x12a <main>
     122:	0c 94 9c 0c 	jmp	0x1938	; 0x1938 <_exit>

00000126 <__bad_interrupt>:
     126:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000012a <main>:
#include "Header.h"



int main(void)
{
     12a:	df 93       	push	r29
     12c:	cf 93       	push	r28
     12e:	cd b7       	in	r28, 0x3d	; 61
     130:	de b7       	in	r29, 0x3e	; 62
     132:	2e 97       	sbiw	r28, 0x0e	; 14
     134:	0f b6       	in	r0, 0x3f	; 63
     136:	f8 94       	cli
     138:	de bf       	out	0x3e, r29	; 62
     13a:	0f be       	out	0x3f, r0	; 63
     13c:	cd bf       	out	0x3d, r28	; 61
    init();
     13e:	0e 94 61 01 	call	0x2c2	; 0x2c2 <init>
    init_motor();
     142:	0e 94 75 05 	call	0xaea	; 0xaea <init_motor>
    while(1)
    {
        if ((!(PIND & (1 << PD0))) && (!(PIND & (1 << PD1))))
     146:	e9 e2       	ldi	r30, 0x29	; 41
     148:	f0 e0       	ldi	r31, 0x00	; 0
     14a:	80 81       	ld	r24, Z
     14c:	88 2f       	mov	r24, r24
     14e:	90 e0       	ldi	r25, 0x00	; 0
     150:	81 70       	andi	r24, 0x01	; 1
     152:	90 70       	andi	r25, 0x00	; 0
     154:	00 97       	sbiw	r24, 0x00	; 0
     156:	09 f0       	breq	.+2      	; 0x15a <main+0x30>
     158:	88 c0       	rjmp	.+272    	; 0x26a <main+0x140>
     15a:	e9 e2       	ldi	r30, 0x29	; 41
     15c:	f0 e0       	ldi	r31, 0x00	; 0
     15e:	80 81       	ld	r24, Z
     160:	88 2f       	mov	r24, r24
     162:	90 e0       	ldi	r25, 0x00	; 0
     164:	82 70       	andi	r24, 0x02	; 2
     166:	90 70       	andi	r25, 0x00	; 0
     168:	00 97       	sbiw	r24, 0x00	; 0
     16a:	09 f0       	breq	.+2      	; 0x16e <main+0x44>
     16c:	7e c0       	rjmp	.+252    	; 0x26a <main+0x140>
        {
            motor(0,0);
     16e:	80 e0       	ldi	r24, 0x00	; 0
     170:	90 e0       	ldi	r25, 0x00	; 0
     172:	60 e0       	ldi	r22, 0x00	; 0
     174:	70 e0       	ldi	r23, 0x00	; 0
     176:	0e 94 9c 05 	call	0xb38	; 0xb38 <motor>
            motor(170,170);
     17a:	8a ea       	ldi	r24, 0xAA	; 170
     17c:	90 e0       	ldi	r25, 0x00	; 0
     17e:	6a ea       	ldi	r22, 0xAA	; 170
     180:	70 e0       	ldi	r23, 0x00	; 0
     182:	0e 94 9c 05 	call	0xb38	; 0xb38 <motor>
     186:	80 e0       	ldi	r24, 0x00	; 0
     188:	90 e0       	ldi	r25, 0x00	; 0
     18a:	a0 ea       	ldi	r26, 0xA0	; 160
     18c:	b1 e4       	ldi	r27, 0x41	; 65
     18e:	8b 87       	std	Y+11, r24	; 0x0b
     190:	9c 87       	std	Y+12, r25	; 0x0c
     192:	ad 87       	std	Y+13, r26	; 0x0d
     194:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     196:	6b 85       	ldd	r22, Y+11	; 0x0b
     198:	7c 85       	ldd	r23, Y+12	; 0x0c
     19a:	8d 85       	ldd	r24, Y+13	; 0x0d
     19c:	9e 85       	ldd	r25, Y+14	; 0x0e
     19e:	20 e0       	ldi	r18, 0x00	; 0
     1a0:	30 e0       	ldi	r19, 0x00	; 0
     1a2:	4a e7       	ldi	r20, 0x7A	; 122
     1a4:	55 e4       	ldi	r21, 0x45	; 69
     1a6:	0e 94 8b 07 	call	0xf16	; 0xf16 <__mulsf3>
     1aa:	dc 01       	movw	r26, r24
     1ac:	cb 01       	movw	r24, r22
     1ae:	8f 83       	std	Y+7, r24	; 0x07
     1b0:	98 87       	std	Y+8, r25	; 0x08
     1b2:	a9 87       	std	Y+9, r26	; 0x09
     1b4:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     1b6:	6f 81       	ldd	r22, Y+7	; 0x07
     1b8:	78 85       	ldd	r23, Y+8	; 0x08
     1ba:	89 85       	ldd	r24, Y+9	; 0x09
     1bc:	9a 85       	ldd	r25, Y+10	; 0x0a
     1be:	20 e0       	ldi	r18, 0x00	; 0
     1c0:	30 e0       	ldi	r19, 0x00	; 0
     1c2:	40 e8       	ldi	r20, 0x80	; 128
     1c4:	5f e3       	ldi	r21, 0x3F	; 63
     1c6:	0e 94 e5 08 	call	0x11ca	; 0x11ca <__ltsf2>
     1ca:	88 23       	and	r24, r24
     1cc:	2c f4       	brge	.+10     	; 0x1d8 <main+0xae>
		__ticks = 1;
     1ce:	81 e0       	ldi	r24, 0x01	; 1
     1d0:	90 e0       	ldi	r25, 0x00	; 0
     1d2:	9e 83       	std	Y+6, r25	; 0x06
     1d4:	8d 83       	std	Y+5, r24	; 0x05
     1d6:	3f c0       	rjmp	.+126    	; 0x256 <main+0x12c>
	else if (__tmp > 65535)
     1d8:	6f 81       	ldd	r22, Y+7	; 0x07
     1da:	78 85       	ldd	r23, Y+8	; 0x08
     1dc:	89 85       	ldd	r24, Y+9	; 0x09
     1de:	9a 85       	ldd	r25, Y+10	; 0x0a
     1e0:	20 e0       	ldi	r18, 0x00	; 0
     1e2:	3f ef       	ldi	r19, 0xFF	; 255
     1e4:	4f e7       	ldi	r20, 0x7F	; 127
     1e6:	57 e4       	ldi	r21, 0x47	; 71
     1e8:	0e 94 85 08 	call	0x110a	; 0x110a <__gtsf2>
     1ec:	18 16       	cp	r1, r24
     1ee:	4c f5       	brge	.+82     	; 0x242 <main+0x118>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     1f0:	6b 85       	ldd	r22, Y+11	; 0x0b
     1f2:	7c 85       	ldd	r23, Y+12	; 0x0c
     1f4:	8d 85       	ldd	r24, Y+13	; 0x0d
     1f6:	9e 85       	ldd	r25, Y+14	; 0x0e
     1f8:	20 e0       	ldi	r18, 0x00	; 0
     1fa:	30 e0       	ldi	r19, 0x00	; 0
     1fc:	40 e2       	ldi	r20, 0x20	; 32
     1fe:	51 e4       	ldi	r21, 0x41	; 65
     200:	0e 94 8b 07 	call	0xf16	; 0xf16 <__mulsf3>
     204:	dc 01       	movw	r26, r24
     206:	cb 01       	movw	r24, r22
     208:	bc 01       	movw	r22, r24
     20a:	cd 01       	movw	r24, r26
     20c:	0e 94 b5 05 	call	0xb6a	; 0xb6a <__fixunssfsi>
     210:	dc 01       	movw	r26, r24
     212:	cb 01       	movw	r24, r22
     214:	9e 83       	std	Y+6, r25	; 0x06
     216:	8d 83       	std	Y+5, r24	; 0x05
     218:	0f c0       	rjmp	.+30     	; 0x238 <main+0x10e>
     21a:	80 e9       	ldi	r24, 0x90	; 144
     21c:	91 e0       	ldi	r25, 0x01	; 1
     21e:	9c 83       	std	Y+4, r25	; 0x04
     220:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     222:	8b 81       	ldd	r24, Y+3	; 0x03
     224:	9c 81       	ldd	r25, Y+4	; 0x04
     226:	01 97       	sbiw	r24, 0x01	; 1
     228:	f1 f7       	brne	.-4      	; 0x226 <main+0xfc>
     22a:	9c 83       	std	Y+4, r25	; 0x04
     22c:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     22e:	8d 81       	ldd	r24, Y+5	; 0x05
     230:	9e 81       	ldd	r25, Y+6	; 0x06
     232:	01 97       	sbiw	r24, 0x01	; 1
     234:	9e 83       	std	Y+6, r25	; 0x06
     236:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     238:	8d 81       	ldd	r24, Y+5	; 0x05
     23a:	9e 81       	ldd	r25, Y+6	; 0x06
     23c:	00 97       	sbiw	r24, 0x00	; 0
     23e:	69 f7       	brne	.-38     	; 0x21a <main+0xf0>
     240:	14 c0       	rjmp	.+40     	; 0x26a <main+0x140>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     242:	6f 81       	ldd	r22, Y+7	; 0x07
     244:	78 85       	ldd	r23, Y+8	; 0x08
     246:	89 85       	ldd	r24, Y+9	; 0x09
     248:	9a 85       	ldd	r25, Y+10	; 0x0a
     24a:	0e 94 b5 05 	call	0xb6a	; 0xb6a <__fixunssfsi>
     24e:	dc 01       	movw	r26, r24
     250:	cb 01       	movw	r24, r22
     252:	9e 83       	std	Y+6, r25	; 0x06
     254:	8d 83       	std	Y+5, r24	; 0x05
     256:	8d 81       	ldd	r24, Y+5	; 0x05
     258:	9e 81       	ldd	r25, Y+6	; 0x06
     25a:	9a 83       	std	Y+2, r25	; 0x02
     25c:	89 83       	std	Y+1, r24	; 0x01
     25e:	89 81       	ldd	r24, Y+1	; 0x01
     260:	9a 81       	ldd	r25, Y+2	; 0x02
     262:	01 97       	sbiw	r24, 0x01	; 1
     264:	f1 f7       	brne	.-4      	; 0x262 <main+0x138>
     266:	9a 83       	std	Y+2, r25	; 0x02
     268:	89 83       	std	Y+1, r24	; 0x01
            _delay_ms(20);
        }
        if (PIND &(1 << PD0))
     26a:	e9 e2       	ldi	r30, 0x29	; 41
     26c:	f0 e0       	ldi	r31, 0x00	; 0
     26e:	80 81       	ld	r24, Z
     270:	88 2f       	mov	r24, r24
     272:	90 e0       	ldi	r25, 0x00	; 0
     274:	81 70       	andi	r24, 0x01	; 1
     276:	90 70       	andi	r25, 0x00	; 0
     278:	88 23       	and	r24, r24
     27a:	61 f0       	breq	.+24     	; 0x294 <main+0x16a>
        {
            motor(0,0);
     27c:	80 e0       	ldi	r24, 0x00	; 0
     27e:	90 e0       	ldi	r25, 0x00	; 0
     280:	60 e0       	ldi	r22, 0x00	; 0
     282:	70 e0       	ldi	r23, 0x00	; 0
     284:	0e 94 9c 05 	call	0xb38	; 0xb38 <motor>
            motor (170,0);
     288:	8a ea       	ldi	r24, 0xAA	; 170
     28a:	90 e0       	ldi	r25, 0x00	; 0
     28c:	60 e0       	ldi	r22, 0x00	; 0
     28e:	70 e0       	ldi	r23, 0x00	; 0
     290:	0e 94 9c 05 	call	0xb38	; 0xb38 <motor>
            // _delay_ms(40);
        }
        if (PIND &(1 << PD1))
     294:	e9 e2       	ldi	r30, 0x29	; 41
     296:	f0 e0       	ldi	r31, 0x00	; 0
     298:	80 81       	ld	r24, Z
     29a:	88 2f       	mov	r24, r24
     29c:	90 e0       	ldi	r25, 0x00	; 0
     29e:	82 70       	andi	r24, 0x02	; 2
     2a0:	90 70       	andi	r25, 0x00	; 0
     2a2:	00 97       	sbiw	r24, 0x00	; 0
     2a4:	09 f4       	brne	.+2      	; 0x2a8 <main+0x17e>
     2a6:	4f cf       	rjmp	.-354    	; 0x146 <main+0x1c>
        {
            motor(0,0);
     2a8:	80 e0       	ldi	r24, 0x00	; 0
     2aa:	90 e0       	ldi	r25, 0x00	; 0
     2ac:	60 e0       	ldi	r22, 0x00	; 0
     2ae:	70 e0       	ldi	r23, 0x00	; 0
     2b0:	0e 94 9c 05 	call	0xb38	; 0xb38 <motor>
            motor (0,170);
     2b4:	80 e0       	ldi	r24, 0x00	; 0
     2b6:	90 e0       	ldi	r25, 0x00	; 0
     2b8:	6a ea       	ldi	r22, 0xAA	; 170
     2ba:	70 e0       	ldi	r23, 0x00	; 0
     2bc:	0e 94 9c 05 	call	0xb38	; 0xb38 <motor>
     2c0:	42 cf       	rjmp	.-380    	; 0x146 <main+0x1c>

000002c2 <init>:
#include <avr/io.h>
#include <avr/interrupt.h>
#include "Header.h"

void init (void)
{
     2c2:	df 93       	push	r29
     2c4:	cf 93       	push	r28
     2c6:	cd b7       	in	r28, 0x3d	; 61
     2c8:	de b7       	in	r29, 0x3e	; 62
    DDRE |= (1 << PE3);     //pwm links
     2ca:	ad e2       	ldi	r26, 0x2D	; 45
     2cc:	b0 e0       	ldi	r27, 0x00	; 0
     2ce:	ed e2       	ldi	r30, 0x2D	; 45
     2d0:	f0 e0       	ldi	r31, 0x00	; 0
     2d2:	80 81       	ld	r24, Z
     2d4:	88 60       	ori	r24, 0x08	; 8
     2d6:	8c 93       	st	X, r24
    DDRE |= (1 << PE4);     //pwm rechts
     2d8:	ad e2       	ldi	r26, 0x2D	; 45
     2da:	b0 e0       	ldi	r27, 0x00	; 0
     2dc:	ed e2       	ldi	r30, 0x2D	; 45
     2de:	f0 e0       	ldi	r31, 0x00	; 0
     2e0:	80 81       	ld	r24, Z
     2e2:	80 61       	ori	r24, 0x10	; 16
     2e4:	8c 93       	st	X, r24
	DDRH |= (1 << PH4);     //lampje
     2e6:	a1 e0       	ldi	r26, 0x01	; 1
     2e8:	b1 e0       	ldi	r27, 0x01	; 1
     2ea:	e1 e0       	ldi	r30, 0x01	; 1
     2ec:	f1 e0       	ldi	r31, 0x01	; 1
     2ee:	80 81       	ld	r24, Z
     2f0:	80 61       	ori	r24, 0x10	; 16
     2f2:	8c 93       	st	X, r24
	DDRE |= (1 << PJ1);     //motorrichting links
     2f4:	ad e2       	ldi	r26, 0x2D	; 45
     2f6:	b0 e0       	ldi	r27, 0x00	; 0
     2f8:	ed e2       	ldi	r30, 0x2D	; 45
     2fa:	f0 e0       	ldi	r31, 0x00	; 0
     2fc:	80 81       	ld	r24, Z
     2fe:	82 60       	ori	r24, 0x02	; 2
     300:	8c 93       	st	X, r24
	DDRE |= (1 << PJ0);     //motorrichting rechts
     302:	ad e2       	ldi	r26, 0x2D	; 45
     304:	b0 e0       	ldi	r27, 0x00	; 0
     306:	ed e2       	ldi	r30, 0x2D	; 45
     308:	f0 e0       	ldi	r31, 0x00	; 0
     30a:	80 81       	ld	r24, Z
     30c:	81 60       	ori	r24, 0x01	; 1
     30e:	8c 93       	st	X, r24
    DDRA &= ~(1 << PD0);    //Nadering links
     310:	a1 e2       	ldi	r26, 0x21	; 33
     312:	b0 e0       	ldi	r27, 0x00	; 0
     314:	e1 e2       	ldi	r30, 0x21	; 33
     316:	f0 e0       	ldi	r31, 0x00	; 0
     318:	80 81       	ld	r24, Z
     31a:	8e 7f       	andi	r24, 0xFE	; 254
     31c:	8c 93       	st	X, r24
    DDRA &= ~(1 << PD1);    //Nadering rechts
     31e:	a1 e2       	ldi	r26, 0x21	; 33
     320:	b0 e0       	ldi	r27, 0x00	; 0
     322:	e1 e2       	ldi	r30, 0x21	; 33
     324:	f0 e0       	ldi	r31, 0x00	; 0
     326:	80 81       	ld	r24, Z
     328:	8d 7f       	andi	r24, 0xFD	; 253
     32a:	8c 93       	st	X, r24
	DDRL &= ~(1 << PL0);    //Ultrasoon echopin
     32c:	aa e0       	ldi	r26, 0x0A	; 10
     32e:	b1 e0       	ldi	r27, 0x01	; 1
     330:	ea e0       	ldi	r30, 0x0A	; 10
     332:	f1 e0       	ldi	r31, 0x01	; 1
     334:	80 81       	ld	r24, Z
     336:	8e 7f       	andi	r24, 0xFE	; 254
     338:	8c 93       	st	X, r24
	DDRA |= (1 << PA3);     //Ultrasoon trigger
     33a:	a1 e2       	ldi	r26, 0x21	; 33
     33c:	b0 e0       	ldi	r27, 0x00	; 0
     33e:	e1 e2       	ldi	r30, 0x21	; 33
     340:	f0 e0       	ldi	r31, 0x00	; 0
     342:	80 81       	ld	r24, Z
     344:	88 60       	ori	r24, 0x08	; 8
     346:	8c 93       	st	X, r24
	DDRC |= (1<<PC7);       //Ultrasoon rechts 30
     348:	a7 e2       	ldi	r26, 0x27	; 39
     34a:	b0 e0       	ldi	r27, 0x00	; 0
     34c:	e7 e2       	ldi	r30, 0x27	; 39
     34e:	f0 e0       	ldi	r31, 0x00	; 0
     350:	80 81       	ld	r24, Z
     352:	80 68       	ori	r24, 0x80	; 128
     354:	8c 93       	st	X, r24
	DDRC |= (1<<PC6);       //Ultrasoon links 31
     356:	a7 e2       	ldi	r26, 0x27	; 39
     358:	b0 e0       	ldi	r27, 0x00	; 0
     35a:	e7 e2       	ldi	r30, 0x27	; 39
     35c:	f0 e0       	ldi	r31, 0x00	; 0
     35e:	80 81       	ld	r24, Z
     360:	80 64       	ori	r24, 0x40	; 64
     362:	8c 93       	st	X, r24
	DDRC |= (1<<PC5);       //Ultrasoon voor 32
     364:	a7 e2       	ldi	r26, 0x27	; 39
     366:	b0 e0       	ldi	r27, 0x00	; 0
     368:	e7 e2       	ldi	r30, 0x27	; 39
     36a:	f0 e0       	ldi	r31, 0x00	; 0
     36c:	80 81       	ld	r24, Z
     36e:	80 62       	ori	r24, 0x20	; 32
     370:	8c 93       	st	X, r24
}
     372:	cf 91       	pop	r28
     374:	df 91       	pop	r29
     376:	08 95       	ret

00000378 <rechte_lijn>:

void rechte_lijn(void)
{
     378:	df 93       	push	r29
     37a:	cf 93       	push	r28
     37c:	0f 92       	push	r0
     37e:	0f 92       	push	r0
     380:	cd b7       	in	r28, 0x3d	; 61
     382:	de b7       	in	r29, 0x3e	; 62
	int vlag;
	TCNT1 = 0;
     384:	e4 e8       	ldi	r30, 0x84	; 132
     386:	f0 e0       	ldi	r31, 0x00	; 0
     388:	11 82       	std	Z+1, r1	; 0x01
     38a:	10 82       	st	Z, r1
	Grote_klok = 0;
     38c:	10 92 15 03 	sts	0x0315, r1
     390:	10 92 14 03 	sts	0x0314, r1
		//{
        //if ((!(PINA & (1 << PA0))) && (!(PINA & (1 << PA1))))
        //{
        //        motor(170,170);
        //}
        if (PINA &(1 << PA0))
     394:	e0 e2       	ldi	r30, 0x20	; 32
     396:	f0 e0       	ldi	r31, 0x00	; 0
     398:	80 81       	ld	r24, Z
     39a:	88 2f       	mov	r24, r24
     39c:	90 e0       	ldi	r25, 0x00	; 0
     39e:	81 70       	andi	r24, 0x01	; 1
     3a0:	90 70       	andi	r25, 0x00	; 0
     3a2:	88 23       	and	r24, r24
     3a4:	31 f0       	breq	.+12     	; 0x3b2 <rechte_lijn+0x3a>
        {
                motor (170,0);
     3a6:	8a ea       	ldi	r24, 0xAA	; 170
     3a8:	90 e0       	ldi	r25, 0x00	; 0
     3aa:	60 e0       	ldi	r22, 0x00	; 0
     3ac:	70 e0       	ldi	r23, 0x00	; 0
     3ae:	0e 94 9c 05 	call	0xb38	; 0xb38 <motor>
               // _delay_ms(40);
        }
        if (PINA &(1 << PA1))
     3b2:	e0 e2       	ldi	r30, 0x20	; 32
     3b4:	f0 e0       	ldi	r31, 0x00	; 0
     3b6:	80 81       	ld	r24, Z
     3b8:	88 2f       	mov	r24, r24
     3ba:	90 e0       	ldi	r25, 0x00	; 0
     3bc:	82 70       	andi	r24, 0x02	; 2
     3be:	90 70       	andi	r25, 0x00	; 0
     3c0:	00 97       	sbiw	r24, 0x00	; 0
     3c2:	31 f0       	breq	.+12     	; 0x3d0 <rechte_lijn+0x58>
        {
                motor (170,0);
     3c4:	8a ea       	ldi	r24, 0xAA	; 170
     3c6:	90 e0       	ldi	r25, 0x00	; 0
     3c8:	60 e0       	ldi	r22, 0x00	; 0
     3ca:	70 e0       	ldi	r23, 0x00	; 0
     3cc:	0e 94 9c 05 	call	0xb38	; 0xb38 <motor>
			//_delay_ms(500);
			//PORTH &= ~(1 << PH4);
//		}

    //}
}
     3d0:	0f 90       	pop	r0
     3d2:	0f 90       	pop	r0
     3d4:	cf 91       	pop	r28
     3d6:	df 91       	pop	r29
     3d8:	08 95       	ret

000003da <bocht_links>:

void bocht_links (void)
{
     3da:	df 93       	push	r29
     3dc:	cf 93       	push	r28
     3de:	0f 92       	push	r0
     3e0:	0f 92       	push	r0
     3e2:	cd b7       	in	r28, 0x3d	; 61
     3e4:	de b7       	in	r29, 0x3e	; 62
	int vlag;
	TCNT1 = 0;
     3e6:	e4 e8       	ldi	r30, 0x84	; 132
     3e8:	f0 e0       	ldi	r31, 0x00	; 0
     3ea:	11 82       	std	Z+1, r1	; 0x01
     3ec:	10 82       	st	Z, r1
	Grote_klok = 0;
     3ee:	10 92 15 03 	sts	0x0315, r1
     3f2:	10 92 14 03 	sts	0x0314, r1
     3f6:	45 c0       	rjmp	.+138    	; 0x482 <bocht_links+0xa8>
	while ((PINA &(1 << PA0)) && (vlag == 1))
	{
		motor(35,170); //bocht naar rechts maken
     3f8:	83 e2       	ldi	r24, 0x23	; 35
     3fa:	90 e0       	ldi	r25, 0x00	; 0
     3fc:	6a ea       	ldi	r22, 0xAA	; 170
     3fe:	70 e0       	ldi	r23, 0x00	; 0
     400:	0e 94 9c 05 	call	0xb38	; 0xb38 <motor>
		if ((PINA &(1 << PA0)) && (Grote_klok <= 11.3)) //waarde
     404:	e0 e2       	ldi	r30, 0x20	; 32
     406:	f0 e0       	ldi	r31, 0x00	; 0
     408:	80 81       	ld	r24, Z
     40a:	88 2f       	mov	r24, r24
     40c:	90 e0       	ldi	r25, 0x00	; 0
     40e:	81 70       	andi	r24, 0x01	; 1
     410:	90 70       	andi	r25, 0x00	; 0
     412:	88 23       	and	r24, r24
     414:	d1 f0       	breq	.+52     	; 0x44a <bocht_links+0x70>
     416:	80 91 14 03 	lds	r24, 0x0314
     41a:	90 91 15 03 	lds	r25, 0x0315
     41e:	aa 27       	eor	r26, r26
     420:	97 fd       	sbrc	r25, 7
     422:	a0 95       	com	r26
     424:	ba 2f       	mov	r27, r26
     426:	bc 01       	movw	r22, r24
     428:	cd 01       	movw	r24, r26
     42a:	0e 94 45 09 	call	0x128a	; 0x128a <__floatsisf>
     42e:	dc 01       	movw	r26, r24
     430:	cb 01       	movw	r24, r22
     432:	bc 01       	movw	r22, r24
     434:	cd 01       	movw	r24, r26
     436:	2d ec       	ldi	r18, 0xCD	; 205
     438:	3c ec       	ldi	r19, 0xCC	; 204
     43a:	44 e3       	ldi	r20, 0x34	; 52
     43c:	51 e4       	ldi	r21, 0x41	; 65
     43e:	0e 94 15 09 	call	0x122a	; 0x122a <__lesf2>
     442:	18 16       	cp	r1, r24
     444:	14 f0       	brlt	.+4      	; 0x44a <bocht_links+0x70>
		{
			error();
     446:	0e 94 c3 02 	call	0x586	; 0x586 <error>
		}
		if (Grote_klok >= 11.3)
     44a:	80 91 14 03 	lds	r24, 0x0314
     44e:	90 91 15 03 	lds	r25, 0x0315
     452:	aa 27       	eor	r26, r26
     454:	97 fd       	sbrc	r25, 7
     456:	a0 95       	com	r26
     458:	ba 2f       	mov	r27, r26
     45a:	bc 01       	movw	r22, r24
     45c:	cd 01       	movw	r24, r26
     45e:	0e 94 45 09 	call	0x128a	; 0x128a <__floatsisf>
     462:	dc 01       	movw	r26, r24
     464:	cb 01       	movw	r24, r22
     466:	bc 01       	movw	r22, r24
     468:	cd 01       	movw	r24, r26
     46a:	2d ec       	ldi	r18, 0xCD	; 205
     46c:	3c ec       	ldi	r19, 0xCC	; 204
     46e:	44 e3       	ldi	r20, 0x34	; 52
     470:	51 e4       	ldi	r21, 0x41	; 65
     472:	0e 94 b5 08 	call	0x116a	; 0x116a <__gesf2>
     476:	88 23       	and	r24, r24
     478:	24 f0       	brlt	.+8      	; 0x482 <bocht_links+0xa8>
		{
			vlag = 1;
     47a:	81 e0       	ldi	r24, 0x01	; 1
     47c:	90 e0       	ldi	r25, 0x00	; 0
     47e:	9a 83       	std	Y+2, r25	; 0x02
     480:	89 83       	std	Y+1, r24	; 0x01
void bocht_links (void)
{
	int vlag;
	TCNT1 = 0;
	Grote_klok = 0;
	while ((PINA &(1 << PA0)) && (vlag == 1))
     482:	e0 e2       	ldi	r30, 0x20	; 32
     484:	f0 e0       	ldi	r31, 0x00	; 0
     486:	80 81       	ld	r24, Z
     488:	88 2f       	mov	r24, r24
     48a:	90 e0       	ldi	r25, 0x00	; 0
     48c:	81 70       	andi	r24, 0x01	; 1
     48e:	90 70       	andi	r25, 0x00	; 0
     490:	98 2f       	mov	r25, r24
     492:	81 e0       	ldi	r24, 0x01	; 1
     494:	89 27       	eor	r24, r25
     496:	88 23       	and	r24, r24
     498:	31 f4       	brne	.+12     	; 0x4a6 <bocht_links+0xcc>
     49a:	89 81       	ldd	r24, Y+1	; 0x01
     49c:	9a 81       	ldd	r25, Y+2	; 0x02
     49e:	81 30       	cpi	r24, 0x01	; 1
     4a0:	91 05       	cpc	r25, r1
     4a2:	09 f4       	brne	.+2      	; 0x4a6 <bocht_links+0xcc>
     4a4:	a9 cf       	rjmp	.-174    	; 0x3f8 <bocht_links+0x1e>
			vlag = 1;
		}

	}

}
     4a6:	0f 90       	pop	r0
     4a8:	0f 90       	pop	r0
     4aa:	cf 91       	pop	r28
     4ac:	df 91       	pop	r29
     4ae:	08 95       	ret

000004b0 <bocht_rechts>:

void bocht_rechts (void)
{
     4b0:	df 93       	push	r29
     4b2:	cf 93       	push	r28
     4b4:	0f 92       	push	r0
     4b6:	0f 92       	push	r0
     4b8:	cd b7       	in	r28, 0x3d	; 61
     4ba:	de b7       	in	r29, 0x3e	; 62
	int vlag;
	TCNT1 = 0;
     4bc:	e4 e8       	ldi	r30, 0x84	; 132
     4be:	f0 e0       	ldi	r31, 0x00	; 0
     4c0:	11 82       	std	Z+1, r1	; 0x01
     4c2:	10 82       	st	Z, r1
	Grote_klok = 0;
     4c4:	10 92 15 03 	sts	0x0315, r1
     4c8:	10 92 14 03 	sts	0x0314, r1
     4cc:	45 c0       	rjmp	.+138    	; 0x558 <bocht_rechts+0xa8>
	while ((PINA &(1 << PA0)) && (vlag == 1))
	{
		motor(170,35); //bocht naar rechts maken
     4ce:	8a ea       	ldi	r24, 0xAA	; 170
     4d0:	90 e0       	ldi	r25, 0x00	; 0
     4d2:	63 e2       	ldi	r22, 0x23	; 35
     4d4:	70 e0       	ldi	r23, 0x00	; 0
     4d6:	0e 94 9c 05 	call	0xb38	; 0xb38 <motor>
		if ((PINA &(1 << PA0)) && (Grote_klok <= 11.3)) //waarde
     4da:	e0 e2       	ldi	r30, 0x20	; 32
     4dc:	f0 e0       	ldi	r31, 0x00	; 0
     4de:	80 81       	ld	r24, Z
     4e0:	88 2f       	mov	r24, r24
     4e2:	90 e0       	ldi	r25, 0x00	; 0
     4e4:	81 70       	andi	r24, 0x01	; 1
     4e6:	90 70       	andi	r25, 0x00	; 0
     4e8:	88 23       	and	r24, r24
     4ea:	d1 f0       	breq	.+52     	; 0x520 <bocht_rechts+0x70>
     4ec:	80 91 14 03 	lds	r24, 0x0314
     4f0:	90 91 15 03 	lds	r25, 0x0315
     4f4:	aa 27       	eor	r26, r26
     4f6:	97 fd       	sbrc	r25, 7
     4f8:	a0 95       	com	r26
     4fa:	ba 2f       	mov	r27, r26
     4fc:	bc 01       	movw	r22, r24
     4fe:	cd 01       	movw	r24, r26
     500:	0e 94 45 09 	call	0x128a	; 0x128a <__floatsisf>
     504:	dc 01       	movw	r26, r24
     506:	cb 01       	movw	r24, r22
     508:	bc 01       	movw	r22, r24
     50a:	cd 01       	movw	r24, r26
     50c:	2d ec       	ldi	r18, 0xCD	; 205
     50e:	3c ec       	ldi	r19, 0xCC	; 204
     510:	44 e3       	ldi	r20, 0x34	; 52
     512:	51 e4       	ldi	r21, 0x41	; 65
     514:	0e 94 15 09 	call	0x122a	; 0x122a <__lesf2>
     518:	18 16       	cp	r1, r24
     51a:	14 f0       	brlt	.+4      	; 0x520 <bocht_rechts+0x70>
		{
			error();
     51c:	0e 94 c3 02 	call	0x586	; 0x586 <error>
		}
		if (Grote_klok >= 11.3)
     520:	80 91 14 03 	lds	r24, 0x0314
     524:	90 91 15 03 	lds	r25, 0x0315
     528:	aa 27       	eor	r26, r26
     52a:	97 fd       	sbrc	r25, 7
     52c:	a0 95       	com	r26
     52e:	ba 2f       	mov	r27, r26
     530:	bc 01       	movw	r22, r24
     532:	cd 01       	movw	r24, r26
     534:	0e 94 45 09 	call	0x128a	; 0x128a <__floatsisf>
     538:	dc 01       	movw	r26, r24
     53a:	cb 01       	movw	r24, r22
     53c:	bc 01       	movw	r22, r24
     53e:	cd 01       	movw	r24, r26
     540:	2d ec       	ldi	r18, 0xCD	; 205
     542:	3c ec       	ldi	r19, 0xCC	; 204
     544:	44 e3       	ldi	r20, 0x34	; 52
     546:	51 e4       	ldi	r21, 0x41	; 65
     548:	0e 94 b5 08 	call	0x116a	; 0x116a <__gesf2>
     54c:	88 23       	and	r24, r24
     54e:	24 f0       	brlt	.+8      	; 0x558 <bocht_rechts+0xa8>
		{
			vlag = 1;
     550:	81 e0       	ldi	r24, 0x01	; 1
     552:	90 e0       	ldi	r25, 0x00	; 0
     554:	9a 83       	std	Y+2, r25	; 0x02
     556:	89 83       	std	Y+1, r24	; 0x01
void bocht_rechts (void)
{
	int vlag;
	TCNT1 = 0;
	Grote_klok = 0;
	while ((PINA &(1 << PA0)) && (vlag == 1))
     558:	e0 e2       	ldi	r30, 0x20	; 32
     55a:	f0 e0       	ldi	r31, 0x00	; 0
     55c:	80 81       	ld	r24, Z
     55e:	88 2f       	mov	r24, r24
     560:	90 e0       	ldi	r25, 0x00	; 0
     562:	81 70       	andi	r24, 0x01	; 1
     564:	90 70       	andi	r25, 0x00	; 0
     566:	98 2f       	mov	r25, r24
     568:	81 e0       	ldi	r24, 0x01	; 1
     56a:	89 27       	eor	r24, r25
     56c:	88 23       	and	r24, r24
     56e:	31 f4       	brne	.+12     	; 0x57c <bocht_rechts+0xcc>
     570:	89 81       	ldd	r24, Y+1	; 0x01
     572:	9a 81       	ldd	r25, Y+2	; 0x02
     574:	81 30       	cpi	r24, 0x01	; 1
     576:	91 05       	cpc	r25, r1
     578:	09 f4       	brne	.+2      	; 0x57c <bocht_rechts+0xcc>
     57a:	a9 cf       	rjmp	.-174    	; 0x4ce <bocht_rechts+0x1e>
			vlag = 1;
		}

	}

}
     57c:	0f 90       	pop	r0
     57e:	0f 90       	pop	r0
     580:	cf 91       	pop	r28
     582:	df 91       	pop	r29
     584:	08 95       	ret

00000586 <error>:

void error (void) //om een probleem optelossen todat we een betere oplossing hebben of niet
{
     586:	df 93       	push	r29
     588:	cf 93       	push	r28
     58a:	cd b7       	in	r28, 0x3d	; 61
     58c:	de b7       	in	r29, 0x3e	; 62
	while (1)
	{
	motor(0,0);
     58e:	80 e0       	ldi	r24, 0x00	; 0
     590:	90 e0       	ldi	r25, 0x00	; 0
     592:	60 e0       	ldi	r22, 0x00	; 0
     594:	70 e0       	ldi	r23, 0x00	; 0
     596:	0e 94 9c 05 	call	0xb38	; 0xb38 <motor>
     59a:	f9 cf       	rjmp	.-14     	; 0x58e <error+0x8>

0000059c <__vector_17>:
uint16_t waarde2;
uint32_t counts;
int ultasoon_nr;

ISR(TIMER1_COMPA_vect)
{
     59c:	1f 92       	push	r1
     59e:	0f 92       	push	r0
     5a0:	0f b6       	in	r0, 0x3f	; 63
     5a2:	0f 92       	push	r0
     5a4:	00 90 5b 00 	lds	r0, 0x005B
     5a8:	0f 92       	push	r0
     5aa:	11 24       	eor	r1, r1
     5ac:	8f 93       	push	r24
     5ae:	9f 93       	push	r25
     5b0:	ef 93       	push	r30
     5b2:	ff 93       	push	r31
     5b4:	df 93       	push	r29
     5b6:	cf 93       	push	r28
     5b8:	cd b7       	in	r28, 0x3d	; 61
     5ba:	de b7       	in	r29, 0x3e	; 62
    TCNT1 = 0;
     5bc:	e4 e8       	ldi	r30, 0x84	; 132
     5be:	f0 e0       	ldi	r31, 0x00	; 0
     5c0:	11 82       	std	Z+1, r1	; 0x01
     5c2:	10 82       	st	Z, r1
    Grote_klok++;
     5c4:	80 91 14 03 	lds	r24, 0x0314
     5c8:	90 91 15 03 	lds	r25, 0x0315
     5cc:	01 96       	adiw	r24, 0x01	; 1
     5ce:	90 93 15 03 	sts	0x0315, r25
     5d2:	80 93 14 03 	sts	0x0314, r24
}
     5d6:	cf 91       	pop	r28
     5d8:	df 91       	pop	r29
     5da:	ff 91       	pop	r31
     5dc:	ef 91       	pop	r30
     5de:	9f 91       	pop	r25
     5e0:	8f 91       	pop	r24
     5e2:	0f 90       	pop	r0
     5e4:	00 92 5b 00 	sts	0x005B, r0
     5e8:	0f 90       	pop	r0
     5ea:	0f be       	out	0x3f, r0	; 63
     5ec:	0f 90       	pop	r0
     5ee:	1f 90       	pop	r1
     5f0:	18 95       	reti

000005f2 <__vector_41>:

ISR (TIMER4_CAPT_vect)
{
     5f2:	1f 92       	push	r1
     5f4:	0f 92       	push	r0
     5f6:	0f b6       	in	r0, 0x3f	; 63
     5f8:	0f 92       	push	r0
     5fa:	00 90 5b 00 	lds	r0, 0x005B
     5fe:	0f 92       	push	r0
     600:	11 24       	eor	r1, r1
     602:	ef 92       	push	r14
     604:	ff 92       	push	r15
     606:	0f 93       	push	r16
     608:	1f 93       	push	r17
     60a:	2f 93       	push	r18
     60c:	3f 93       	push	r19
     60e:	4f 93       	push	r20
     610:	5f 93       	push	r21
     612:	6f 93       	push	r22
     614:	7f 93       	push	r23
     616:	8f 93       	push	r24
     618:	9f 93       	push	r25
     61a:	af 93       	push	r26
     61c:	bf 93       	push	r27
     61e:	ef 93       	push	r30
     620:	ff 93       	push	r31
     622:	df 93       	push	r29
     624:	cf 93       	push	r28
     626:	cd b7       	in	r28, 0x3d	; 61
     628:	de b7       	in	r29, 0x3e	; 62
    if (TCCR4B & (1<<ICES4)) // On rising edge
     62a:	e1 ea       	ldi	r30, 0xA1	; 161
     62c:	f0 e0       	ldi	r31, 0x00	; 0
     62e:	80 81       	ld	r24, Z
     630:	88 2f       	mov	r24, r24
     632:	90 e0       	ldi	r25, 0x00	; 0
     634:	80 74       	andi	r24, 0x40	; 64
     636:	90 70       	andi	r25, 0x00	; 0
     638:	00 97       	sbiw	r24, 0x00	; 0
     63a:	81 f0       	breq	.+32     	; 0x65c <__vector_41+0x6a>
    {
        TCCR4B &= ~(1<<ICES4); // Next time detect falling edge
     63c:	a1 ea       	ldi	r26, 0xA1	; 161
     63e:	b0 e0       	ldi	r27, 0x00	; 0
     640:	e1 ea       	ldi	r30, 0xA1	; 161
     642:	f0 e0       	ldi	r31, 0x00	; 0
     644:	80 81       	ld	r24, Z
     646:	8f 7b       	andi	r24, 0xBF	; 191
     648:	8c 93       	st	X, r24
        waarde1 = TCNT4; // Save current count
     64a:	e4 ea       	ldi	r30, 0xA4	; 164
     64c:	f0 e0       	ldi	r31, 0x00	; 0
     64e:	80 81       	ld	r24, Z
     650:	91 81       	ldd	r25, Z+1	; 0x01
     652:	90 93 1f 03 	sts	0x031F, r25
     656:	80 93 1e 03 	sts	0x031E, r24
     65a:	aa c0       	rjmp	.+340    	; 0x7b0 <__vector_41+0x1be>
    }
    else // On falling edge
    {
        TCCR4B |= 0; // geen interrupts meer
     65c:	a1 ea       	ldi	r26, 0xA1	; 161
     65e:	b0 e0       	ldi	r27, 0x00	; 0
     660:	e1 ea       	ldi	r30, 0xA1	; 161
     662:	f0 e0       	ldi	r31, 0x00	; 0
     664:	80 81       	ld	r24, Z
     666:	8c 93       	st	X, r24
        waarde2 = TCNT4; // Save current count
     668:	e4 ea       	ldi	r30, 0xA4	; 164
     66a:	f0 e0       	ldi	r31, 0x00	; 0
     66c:	80 81       	ld	r24, Z
     66e:	91 81       	ldd	r25, Z+1	; 0x01
     670:	90 93 19 03 	sts	0x0319, r25
     674:	80 93 18 03 	sts	0x0318, r24
        counts = (uint32_t)waarde1 - (uint32_t)waarde2;
     678:	80 91 1e 03 	lds	r24, 0x031E
     67c:	90 91 1f 03 	lds	r25, 0x031F
     680:	9c 01       	movw	r18, r24
     682:	40 e0       	ldi	r20, 0x00	; 0
     684:	50 e0       	ldi	r21, 0x00	; 0
     686:	80 91 18 03 	lds	r24, 0x0318
     68a:	90 91 19 03 	lds	r25, 0x0319
     68e:	cc 01       	movw	r24, r24
     690:	a0 e0       	ldi	r26, 0x00	; 0
     692:	b0 e0       	ldi	r27, 0x00	; 0
     694:	79 01       	movw	r14, r18
     696:	8a 01       	movw	r16, r20
     698:	e8 1a       	sub	r14, r24
     69a:	f9 0a       	sbc	r15, r25
     69c:	0a 0b       	sbc	r16, r26
     69e:	1b 0b       	sbc	r17, r27
     6a0:	d8 01       	movw	r26, r16
     6a2:	c7 01       	movw	r24, r14
     6a4:	80 93 1a 03 	sts	0x031A, r24
     6a8:	90 93 1b 03 	sts	0x031B, r25
     6ac:	a0 93 1c 03 	sts	0x031C, r26
     6b0:	b0 93 1d 03 	sts	0x031D, r27
		if ((ultasoon_nr = 3))
     6b4:	83 e0       	ldi	r24, 0x03	; 3
     6b6:	90 e0       	ldi	r25, 0x00	; 0
     6b8:	90 93 17 03 	sts	0x0317, r25
     6bc:	80 93 16 03 	sts	0x0316, r24
		{
        ultrasoon = (counts/2)*0.01715; //snelheid van geluid keer de tijd die de klok vertegenwoordigd (16/8 = 2 1/2E6= 5E-7)
     6c0:	80 91 1a 03 	lds	r24, 0x031A
     6c4:	90 91 1b 03 	lds	r25, 0x031B
     6c8:	a0 91 1c 03 	lds	r26, 0x031C
     6cc:	b0 91 1d 03 	lds	r27, 0x031D
     6d0:	b6 95       	lsr	r27
     6d2:	a7 95       	ror	r26
     6d4:	97 95       	ror	r25
     6d6:	87 95       	ror	r24
     6d8:	bc 01       	movw	r22, r24
     6da:	cd 01       	movw	r24, r26
     6dc:	0e 94 f7 09 	call	0x13ee	; 0x13ee <__floatunsisf>
     6e0:	dc 01       	movw	r26, r24
     6e2:	cb 01       	movw	r24, r22
     6e4:	bc 01       	movw	r22, r24
     6e6:	cd 01       	movw	r24, r26
     6e8:	28 e2       	ldi	r18, 0x28	; 40
     6ea:	3e e7       	ldi	r19, 0x7E	; 126
     6ec:	4c e8       	ldi	r20, 0x8C	; 140
     6ee:	5c e3       	ldi	r21, 0x3C	; 60
     6f0:	0e 94 8b 07 	call	0xf16	; 0xf16 <__mulsf3>
     6f4:	dc 01       	movw	r26, r24
     6f6:	cb 01       	movw	r24, r22
     6f8:	80 93 08 03 	sts	0x0308, r24
     6fc:	90 93 09 03 	sts	0x0309, r25
     700:	a0 93 0a 03 	sts	0x030A, r26
     704:	b0 93 0b 03 	sts	0x030B, r27
		}
		if ((ultasoon_nr = 2))
     708:	82 e0       	ldi	r24, 0x02	; 2
     70a:	90 e0       	ldi	r25, 0x00	; 0
     70c:	90 93 17 03 	sts	0x0317, r25
     710:	80 93 16 03 	sts	0x0316, r24
		{
        ultrasoon_links = (counts/2)*0.01715; //snelheid van geluid keer de tijd die de klok vertegenwoordigd (16/8 = 2 1/2E6= 5E-7)
     714:	80 91 1a 03 	lds	r24, 0x031A
     718:	90 91 1b 03 	lds	r25, 0x031B
     71c:	a0 91 1c 03 	lds	r26, 0x031C
     720:	b0 91 1d 03 	lds	r27, 0x031D
     724:	b6 95       	lsr	r27
     726:	a7 95       	ror	r26
     728:	97 95       	ror	r25
     72a:	87 95       	ror	r24
     72c:	bc 01       	movw	r22, r24
     72e:	cd 01       	movw	r24, r26
     730:	0e 94 f7 09 	call	0x13ee	; 0x13ee <__floatunsisf>
     734:	dc 01       	movw	r26, r24
     736:	cb 01       	movw	r24, r22
     738:	bc 01       	movw	r22, r24
     73a:	cd 01       	movw	r24, r26
     73c:	28 e2       	ldi	r18, 0x28	; 40
     73e:	3e e7       	ldi	r19, 0x7E	; 126
     740:	4c e8       	ldi	r20, 0x8C	; 140
     742:	5c e3       	ldi	r21, 0x3C	; 60
     744:	0e 94 8b 07 	call	0xf16	; 0xf16 <__mulsf3>
     748:	dc 01       	movw	r26, r24
     74a:	cb 01       	movw	r24, r22
     74c:	80 93 0c 03 	sts	0x030C, r24
     750:	90 93 0d 03 	sts	0x030D, r25
     754:	a0 93 0e 03 	sts	0x030E, r26
     758:	b0 93 0f 03 	sts	0x030F, r27
		}
		if ((ultasoon_nr = 1))
     75c:	81 e0       	ldi	r24, 0x01	; 1
     75e:	90 e0       	ldi	r25, 0x00	; 0
     760:	90 93 17 03 	sts	0x0317, r25
     764:	80 93 16 03 	sts	0x0316, r24
		{
        ultrasoon_rechts = (counts/2)*0.01715; //snelheid van geluid keer de tijd die de klok vertegenwoordigd (16/8 = 2 1/2E6= 5E-7)
     768:	80 91 1a 03 	lds	r24, 0x031A
     76c:	90 91 1b 03 	lds	r25, 0x031B
     770:	a0 91 1c 03 	lds	r26, 0x031C
     774:	b0 91 1d 03 	lds	r27, 0x031D
     778:	b6 95       	lsr	r27
     77a:	a7 95       	ror	r26
     77c:	97 95       	ror	r25
     77e:	87 95       	ror	r24
     780:	bc 01       	movw	r22, r24
     782:	cd 01       	movw	r24, r26
     784:	0e 94 f7 09 	call	0x13ee	; 0x13ee <__floatunsisf>
     788:	dc 01       	movw	r26, r24
     78a:	cb 01       	movw	r24, r22
     78c:	bc 01       	movw	r22, r24
     78e:	cd 01       	movw	r24, r26
     790:	28 e2       	ldi	r18, 0x28	; 40
     792:	3e e7       	ldi	r19, 0x7E	; 126
     794:	4c e8       	ldi	r20, 0x8C	; 140
     796:	5c e3       	ldi	r21, 0x3C	; 60
     798:	0e 94 8b 07 	call	0xf16	; 0xf16 <__mulsf3>
     79c:	dc 01       	movw	r26, r24
     79e:	cb 01       	movw	r24, r22
     7a0:	80 93 10 03 	sts	0x0310, r24
     7a4:	90 93 11 03 	sts	0x0311, r25
     7a8:	a0 93 12 03 	sts	0x0312, r26
     7ac:	b0 93 13 03 	sts	0x0313, r27
		}
    }
}
     7b0:	cf 91       	pop	r28
     7b2:	df 91       	pop	r29
     7b4:	ff 91       	pop	r31
     7b6:	ef 91       	pop	r30
     7b8:	bf 91       	pop	r27
     7ba:	af 91       	pop	r26
     7bc:	9f 91       	pop	r25
     7be:	8f 91       	pop	r24
     7c0:	7f 91       	pop	r23
     7c2:	6f 91       	pop	r22
     7c4:	5f 91       	pop	r21
     7c6:	4f 91       	pop	r20
     7c8:	3f 91       	pop	r19
     7ca:	2f 91       	pop	r18
     7cc:	1f 91       	pop	r17
     7ce:	0f 91       	pop	r16
     7d0:	ff 90       	pop	r15
     7d2:	ef 90       	pop	r14
     7d4:	0f 90       	pop	r0
     7d6:	00 92 5b 00 	sts	0x005B, r0
     7da:	0f 90       	pop	r0
     7dc:	0f be       	out	0x3f, r0	; 63
     7de:	0f 90       	pop	r0
     7e0:	1f 90       	pop	r1
     7e2:	18 95       	reti

000007e4 <__vector_42>:

ISR(TIMER4_COMPA_vect)
{
     7e4:	1f 92       	push	r1
     7e6:	0f 92       	push	r0
     7e8:	0f b6       	in	r0, 0x3f	; 63
     7ea:	0f 92       	push	r0
     7ec:	00 90 5b 00 	lds	r0, 0x005B
     7f0:	0f 92       	push	r0
     7f2:	11 24       	eor	r1, r1
     7f4:	8f 93       	push	r24
     7f6:	af 93       	push	r26
     7f8:	bf 93       	push	r27
     7fa:	ef 93       	push	r30
     7fc:	ff 93       	push	r31
     7fe:	df 93       	push	r29
     800:	cf 93       	push	r28
     802:	cd b7       	in	r28, 0x3d	; 61
     804:	de b7       	in	r29, 0x3e	; 62
    PORTC = 0;
     806:	e8 e2       	ldi	r30, 0x28	; 40
     808:	f0 e0       	ldi	r31, 0x00	; 0
     80a:	10 82       	st	Z, r1
    TIMSK4 = (1 << ICIE4);
     80c:	e2 e7       	ldi	r30, 0x72	; 114
     80e:	f0 e0       	ldi	r31, 0x00	; 0
     810:	80 e2       	ldi	r24, 0x20	; 32
     812:	80 83       	st	Z, r24
    TCCR4B |= (1 << ICES4);
     814:	a1 ea       	ldi	r26, 0xA1	; 161
     816:	b0 e0       	ldi	r27, 0x00	; 0
     818:	e1 ea       	ldi	r30, 0xA1	; 161
     81a:	f0 e0       	ldi	r31, 0x00	; 0
     81c:	80 81       	ld	r24, Z
     81e:	80 64       	ori	r24, 0x40	; 64
     820:	8c 93       	st	X, r24
}
     822:	cf 91       	pop	r28
     824:	df 91       	pop	r29
     826:	ff 91       	pop	r31
     828:	ef 91       	pop	r30
     82a:	bf 91       	pop	r27
     82c:	af 91       	pop	r26
     82e:	8f 91       	pop	r24
     830:	0f 90       	pop	r0
     832:	00 92 5b 00 	sts	0x005B, r0
     836:	0f 90       	pop	r0
     838:	0f be       	out	0x3f, r0	; 63
     83a:	0f 90       	pop	r0
     83c:	1f 90       	pop	r1
     83e:	18 95       	reti

00000840 <__vector_15>:

ISR(TIMER2_OVF_vect)
{
     840:	1f 92       	push	r1
     842:	0f 92       	push	r0
     844:	0f b6       	in	r0, 0x3f	; 63
     846:	0f 92       	push	r0
     848:	00 90 5b 00 	lds	r0, 0x005B
     84c:	0f 92       	push	r0
     84e:	11 24       	eor	r1, r1
     850:	8f 93       	push	r24
     852:	9f 93       	push	r25
     854:	af 93       	push	r26
     856:	bf 93       	push	r27
     858:	ef 93       	push	r30
     85a:	ff 93       	push	r31
     85c:	df 93       	push	r29
     85e:	cf 93       	push	r28
     860:	cd b7       	in	r28, 0x3d	; 61
     862:	de b7       	in	r29, 0x3e	; 62
    TIMSK4 = (1<<OCIE4A);
     864:	e2 e7       	ldi	r30, 0x72	; 114
     866:	f0 e0       	ldi	r31, 0x00	; 0
     868:	82 e0       	ldi	r24, 0x02	; 2
     86a:	80 83       	st	Z, r24
    PORTA |= (1<<PC5);
     86c:	a2 e2       	ldi	r26, 0x22	; 34
     86e:	b0 e0       	ldi	r27, 0x00	; 0
     870:	e2 e2       	ldi	r30, 0x22	; 34
     872:	f0 e0       	ldi	r31, 0x00	; 0
     874:	80 81       	ld	r24, Z
     876:	80 62       	ori	r24, 0x20	; 32
     878:	8c 93       	st	X, r24
    TCNT4 =0;
     87a:	e4 ea       	ldi	r30, 0xA4	; 164
     87c:	f0 e0       	ldi	r31, 0x00	; 0
     87e:	11 82       	std	Z+1, r1	; 0x01
     880:	10 82       	st	Z, r1
    OCR4A = 20000;
     882:	e8 ea       	ldi	r30, 0xA8	; 168
     884:	f0 e0       	ldi	r31, 0x00	; 0
     886:	80 e2       	ldi	r24, 0x20	; 32
     888:	9e e4       	ldi	r25, 0x4E	; 78
     88a:	91 83       	std	Z+1, r25	; 0x01
     88c:	80 83       	st	Z, r24
	ultasoon_nr = 3; //VOOR
     88e:	83 e0       	ldi	r24, 0x03	; 3
     890:	90 e0       	ldi	r25, 0x00	; 0
     892:	90 93 17 03 	sts	0x0317, r25
     896:	80 93 16 03 	sts	0x0316, r24
}
     89a:	cf 91       	pop	r28
     89c:	df 91       	pop	r29
     89e:	ff 91       	pop	r31
     8a0:	ef 91       	pop	r30
     8a2:	bf 91       	pop	r27
     8a4:	af 91       	pop	r26
     8a6:	9f 91       	pop	r25
     8a8:	8f 91       	pop	r24
     8aa:	0f 90       	pop	r0
     8ac:	00 92 5b 00 	sts	0x005B, r0
     8b0:	0f 90       	pop	r0
     8b2:	0f be       	out	0x3f, r0	; 63
     8b4:	0f 90       	pop	r0
     8b6:	1f 90       	pop	r1
     8b8:	18 95       	reti

000008ba <__vector_13>:

ISR(TIMER2_COMPA_vect)
{
     8ba:	1f 92       	push	r1
     8bc:	0f 92       	push	r0
     8be:	0f b6       	in	r0, 0x3f	; 63
     8c0:	0f 92       	push	r0
     8c2:	00 90 5b 00 	lds	r0, 0x005B
     8c6:	0f 92       	push	r0
     8c8:	11 24       	eor	r1, r1
     8ca:	8f 93       	push	r24
     8cc:	9f 93       	push	r25
     8ce:	af 93       	push	r26
     8d0:	bf 93       	push	r27
     8d2:	ef 93       	push	r30
     8d4:	ff 93       	push	r31
     8d6:	df 93       	push	r29
     8d8:	cf 93       	push	r28
     8da:	cd b7       	in	r28, 0x3d	; 61
     8dc:	de b7       	in	r29, 0x3e	; 62
    TIMSK4 = (1<<OCIE4A);
     8de:	e2 e7       	ldi	r30, 0x72	; 114
     8e0:	f0 e0       	ldi	r31, 0x00	; 0
     8e2:	82 e0       	ldi	r24, 0x02	; 2
     8e4:	80 83       	st	Z, r24
    PORTA |= (1<<PC6); //LINKS
     8e6:	a2 e2       	ldi	r26, 0x22	; 34
     8e8:	b0 e0       	ldi	r27, 0x00	; 0
     8ea:	e2 e2       	ldi	r30, 0x22	; 34
     8ec:	f0 e0       	ldi	r31, 0x00	; 0
     8ee:	80 81       	ld	r24, Z
     8f0:	80 64       	ori	r24, 0x40	; 64
     8f2:	8c 93       	st	X, r24
    TCNT4 =0;
     8f4:	e4 ea       	ldi	r30, 0xA4	; 164
     8f6:	f0 e0       	ldi	r31, 0x00	; 0
     8f8:	11 82       	std	Z+1, r1	; 0x01
     8fa:	10 82       	st	Z, r1
    OCR4A = 20000;
     8fc:	e8 ea       	ldi	r30, 0xA8	; 168
     8fe:	f0 e0       	ldi	r31, 0x00	; 0
     900:	80 e2       	ldi	r24, 0x20	; 32
     902:	9e e4       	ldi	r25, 0x4E	; 78
     904:	91 83       	std	Z+1, r25	; 0x01
     906:	80 83       	st	Z, r24
	ultasoon_nr = 2;
     908:	82 e0       	ldi	r24, 0x02	; 2
     90a:	90 e0       	ldi	r25, 0x00	; 0
     90c:	90 93 17 03 	sts	0x0317, r25
     910:	80 93 16 03 	sts	0x0316, r24
}
     914:	cf 91       	pop	r28
     916:	df 91       	pop	r29
     918:	ff 91       	pop	r31
     91a:	ef 91       	pop	r30
     91c:	bf 91       	pop	r27
     91e:	af 91       	pop	r26
     920:	9f 91       	pop	r25
     922:	8f 91       	pop	r24
     924:	0f 90       	pop	r0
     926:	00 92 5b 00 	sts	0x005B, r0
     92a:	0f 90       	pop	r0
     92c:	0f be       	out	0x3f, r0	; 63
     92e:	0f 90       	pop	r0
     930:	1f 90       	pop	r1
     932:	18 95       	reti

00000934 <__vector_14>:

ISR(TIMER2_COMPB_vect)
{
     934:	1f 92       	push	r1
     936:	0f 92       	push	r0
     938:	0f b6       	in	r0, 0x3f	; 63
     93a:	0f 92       	push	r0
     93c:	00 90 5b 00 	lds	r0, 0x005B
     940:	0f 92       	push	r0
     942:	11 24       	eor	r1, r1
     944:	8f 93       	push	r24
     946:	9f 93       	push	r25
     948:	af 93       	push	r26
     94a:	bf 93       	push	r27
     94c:	ef 93       	push	r30
     94e:	ff 93       	push	r31
     950:	df 93       	push	r29
     952:	cf 93       	push	r28
     954:	cd b7       	in	r28, 0x3d	; 61
     956:	de b7       	in	r29, 0x3e	; 62
    TIMSK4 = (1<<OCIE4A);
     958:	e2 e7       	ldi	r30, 0x72	; 114
     95a:	f0 e0       	ldi	r31, 0x00	; 0
     95c:	82 e0       	ldi	r24, 0x02	; 2
     95e:	80 83       	st	Z, r24
    PORTA |= (1<<PC5); //RECHTS
     960:	a2 e2       	ldi	r26, 0x22	; 34
     962:	b0 e0       	ldi	r27, 0x00	; 0
     964:	e2 e2       	ldi	r30, 0x22	; 34
     966:	f0 e0       	ldi	r31, 0x00	; 0
     968:	80 81       	ld	r24, Z
     96a:	80 62       	ori	r24, 0x20	; 32
     96c:	8c 93       	st	X, r24
    TCNT4 =0;
     96e:	e4 ea       	ldi	r30, 0xA4	; 164
     970:	f0 e0       	ldi	r31, 0x00	; 0
     972:	11 82       	std	Z+1, r1	; 0x01
     974:	10 82       	st	Z, r1
    OCR4A = 20000;
     976:	e8 ea       	ldi	r30, 0xA8	; 168
     978:	f0 e0       	ldi	r31, 0x00	; 0
     97a:	80 e2       	ldi	r24, 0x20	; 32
     97c:	9e e4       	ldi	r25, 0x4E	; 78
     97e:	91 83       	std	Z+1, r25	; 0x01
     980:	80 83       	st	Z, r24
	ultasoon_nr = 1;
     982:	81 e0       	ldi	r24, 0x01	; 1
     984:	90 e0       	ldi	r25, 0x00	; 0
     986:	90 93 17 03 	sts	0x0317, r25
     98a:	80 93 16 03 	sts	0x0316, r24
}
     98e:	cf 91       	pop	r28
     990:	df 91       	pop	r29
     992:	ff 91       	pop	r31
     994:	ef 91       	pop	r30
     996:	bf 91       	pop	r27
     998:	af 91       	pop	r26
     99a:	9f 91       	pop	r25
     99c:	8f 91       	pop	r24
     99e:	0f 90       	pop	r0
     9a0:	00 92 5b 00 	sts	0x005B, r0
     9a4:	0f 90       	pop	r0
     9a6:	0f be       	out	0x3f, r0	; 63
     9a8:	0f 90       	pop	r0
     9aa:	1f 90       	pop	r1
     9ac:	18 95       	reti

000009ae <__vector_23>:

ISR(TIMER0_OVF_vect)
{
     9ae:	1f 92       	push	r1
     9b0:	0f 92       	push	r0
     9b2:	0f b6       	in	r0, 0x3f	; 63
     9b4:	0f 92       	push	r0
     9b6:	00 90 5b 00 	lds	r0, 0x005B
     9ba:	0f 92       	push	r0
     9bc:	11 24       	eor	r1, r1
     9be:	8f 93       	push	r24
     9c0:	af 93       	push	r26
     9c2:	bf 93       	push	r27
     9c4:	ef 93       	push	r30
     9c6:	ff 93       	push	r31
     9c8:	df 93       	push	r29
     9ca:	cf 93       	push	r28
     9cc:	cd b7       	in	r28, 0x3d	; 61
     9ce:	de b7       	in	r29, 0x3e	; 62
    if (OCR0A == 0)
     9d0:	e7 e4       	ldi	r30, 0x47	; 71
     9d2:	f0 e0       	ldi	r31, 0x00	; 0
     9d4:	80 81       	ld	r24, Z
     9d6:	88 23       	and	r24, r24
     9d8:	39 f4       	brne	.+14     	; 0x9e8 <__vector_23+0x3a>
    {
        PORTE &= ~(1<<PE4);
     9da:	ae e2       	ldi	r26, 0x2E	; 46
     9dc:	b0 e0       	ldi	r27, 0x00	; 0
     9de:	ee e2       	ldi	r30, 0x2E	; 46
     9e0:	f0 e0       	ldi	r31, 0x00	; 0
     9e2:	80 81       	ld	r24, Z
     9e4:	8f 7e       	andi	r24, 0xEF	; 239
     9e6:	8c 93       	st	X, r24
    }
    if (OCR0B == 0)
     9e8:	e8 e4       	ldi	r30, 0x48	; 72
     9ea:	f0 e0       	ldi	r31, 0x00	; 0
     9ec:	80 81       	ld	r24, Z
     9ee:	88 23       	and	r24, r24
     9f0:	39 f4       	brne	.+14     	; 0xa00 <__vector_23+0x52>
    {
        PORTE &= ~(1<<PE3);
     9f2:	ae e2       	ldi	r26, 0x2E	; 46
     9f4:	b0 e0       	ldi	r27, 0x00	; 0
     9f6:	ee e2       	ldi	r30, 0x2E	; 46
     9f8:	f0 e0       	ldi	r31, 0x00	; 0
     9fa:	80 81       	ld	r24, Z
     9fc:	87 7f       	andi	r24, 0xF7	; 247
     9fe:	8c 93       	st	X, r24
    }
    if (OCR0A != 0)
     a00:	e7 e4       	ldi	r30, 0x47	; 71
     a02:	f0 e0       	ldi	r31, 0x00	; 0
     a04:	80 81       	ld	r24, Z
     a06:	88 23       	and	r24, r24
     a08:	39 f0       	breq	.+14     	; 0xa18 <__vector_23+0x6a>
    {
        PORTE |= (1<<PE4);
     a0a:	ae e2       	ldi	r26, 0x2E	; 46
     a0c:	b0 e0       	ldi	r27, 0x00	; 0
     a0e:	ee e2       	ldi	r30, 0x2E	; 46
     a10:	f0 e0       	ldi	r31, 0x00	; 0
     a12:	80 81       	ld	r24, Z
     a14:	80 61       	ori	r24, 0x10	; 16
     a16:	8c 93       	st	X, r24
    }
    if (OCR0B != 0)
     a18:	e8 e4       	ldi	r30, 0x48	; 72
     a1a:	f0 e0       	ldi	r31, 0x00	; 0
     a1c:	80 81       	ld	r24, Z
     a1e:	88 23       	and	r24, r24
     a20:	39 f0       	breq	.+14     	; 0xa30 <__vector_23+0x82>
    {
        PORTE |= (1<<PE3);
     a22:	ae e2       	ldi	r26, 0x2E	; 46
     a24:	b0 e0       	ldi	r27, 0x00	; 0
     a26:	ee e2       	ldi	r30, 0x2E	; 46
     a28:	f0 e0       	ldi	r31, 0x00	; 0
     a2a:	80 81       	ld	r24, Z
     a2c:	88 60       	ori	r24, 0x08	; 8
     a2e:	8c 93       	st	X, r24
    }
}
     a30:	cf 91       	pop	r28
     a32:	df 91       	pop	r29
     a34:	ff 91       	pop	r31
     a36:	ef 91       	pop	r30
     a38:	bf 91       	pop	r27
     a3a:	af 91       	pop	r26
     a3c:	8f 91       	pop	r24
     a3e:	0f 90       	pop	r0
     a40:	00 92 5b 00 	sts	0x005B, r0
     a44:	0f 90       	pop	r0
     a46:	0f be       	out	0x3f, r0	; 63
     a48:	0f 90       	pop	r0
     a4a:	1f 90       	pop	r1
     a4c:	18 95       	reti

00000a4e <__vector_21>:

ISR(TIMER0_COMPA_vect)
{
     a4e:	1f 92       	push	r1
     a50:	0f 92       	push	r0
     a52:	0f b6       	in	r0, 0x3f	; 63
     a54:	0f 92       	push	r0
     a56:	00 90 5b 00 	lds	r0, 0x005B
     a5a:	0f 92       	push	r0
     a5c:	11 24       	eor	r1, r1
     a5e:	8f 93       	push	r24
     a60:	af 93       	push	r26
     a62:	bf 93       	push	r27
     a64:	ef 93       	push	r30
     a66:	ff 93       	push	r31
     a68:	df 93       	push	r29
     a6a:	cf 93       	push	r28
     a6c:	cd b7       	in	r28, 0x3d	; 61
     a6e:	de b7       	in	r29, 0x3e	; 62
    PORTE &= ~(1<<PE4);
     a70:	ae e2       	ldi	r26, 0x2E	; 46
     a72:	b0 e0       	ldi	r27, 0x00	; 0
     a74:	ee e2       	ldi	r30, 0x2E	; 46
     a76:	f0 e0       	ldi	r31, 0x00	; 0
     a78:	80 81       	ld	r24, Z
     a7a:	8f 7e       	andi	r24, 0xEF	; 239
     a7c:	8c 93       	st	X, r24
}
     a7e:	cf 91       	pop	r28
     a80:	df 91       	pop	r29
     a82:	ff 91       	pop	r31
     a84:	ef 91       	pop	r30
     a86:	bf 91       	pop	r27
     a88:	af 91       	pop	r26
     a8a:	8f 91       	pop	r24
     a8c:	0f 90       	pop	r0
     a8e:	00 92 5b 00 	sts	0x005B, r0
     a92:	0f 90       	pop	r0
     a94:	0f be       	out	0x3f, r0	; 63
     a96:	0f 90       	pop	r0
     a98:	1f 90       	pop	r1
     a9a:	18 95       	reti

00000a9c <__vector_22>:

ISR(TIMER0_COMPB_vect)
{
     a9c:	1f 92       	push	r1
     a9e:	0f 92       	push	r0
     aa0:	0f b6       	in	r0, 0x3f	; 63
     aa2:	0f 92       	push	r0
     aa4:	00 90 5b 00 	lds	r0, 0x005B
     aa8:	0f 92       	push	r0
     aaa:	11 24       	eor	r1, r1
     aac:	8f 93       	push	r24
     aae:	af 93       	push	r26
     ab0:	bf 93       	push	r27
     ab2:	ef 93       	push	r30
     ab4:	ff 93       	push	r31
     ab6:	df 93       	push	r29
     ab8:	cf 93       	push	r28
     aba:	cd b7       	in	r28, 0x3d	; 61
     abc:	de b7       	in	r29, 0x3e	; 62
    PORTE &= ~(1<<PE3);
     abe:	ae e2       	ldi	r26, 0x2E	; 46
     ac0:	b0 e0       	ldi	r27, 0x00	; 0
     ac2:	ee e2       	ldi	r30, 0x2E	; 46
     ac4:	f0 e0       	ldi	r31, 0x00	; 0
     ac6:	80 81       	ld	r24, Z
     ac8:	87 7f       	andi	r24, 0xF7	; 247
     aca:	8c 93       	st	X, r24
}
     acc:	cf 91       	pop	r28
     ace:	df 91       	pop	r29
     ad0:	ff 91       	pop	r31
     ad2:	ef 91       	pop	r30
     ad4:	bf 91       	pop	r27
     ad6:	af 91       	pop	r26
     ad8:	8f 91       	pop	r24
     ada:	0f 90       	pop	r0
     adc:	00 92 5b 00 	sts	0x005B, r0
     ae0:	0f 90       	pop	r0
     ae2:	0f be       	out	0x3f, r0	; 63
     ae4:	0f 90       	pop	r0
     ae6:	1f 90       	pop	r1
     ae8:	18 95       	reti

00000aea <init_motor>:

void init_motor (void)
{
     aea:	df 93       	push	r29
     aec:	cf 93       	push	r28
     aee:	cd b7       	in	r28, 0x3d	; 61
     af0:	de b7       	in	r29, 0x3e	; 62
    // Output low
    PORTE &= ~(1<<PE4);
     af2:	ae e2       	ldi	r26, 0x2E	; 46
     af4:	b0 e0       	ldi	r27, 0x00	; 0
     af6:	ee e2       	ldi	r30, 0x2E	; 46
     af8:	f0 e0       	ldi	r31, 0x00	; 0
     afa:	80 81       	ld	r24, Z
     afc:	8f 7e       	andi	r24, 0xEF	; 239
     afe:	8c 93       	st	X, r24
    PORTE &= ~(1<<PE3);
     b00:	ae e2       	ldi	r26, 0x2E	; 46
     b02:	b0 e0       	ldi	r27, 0x00	; 0
     b04:	ee e2       	ldi	r30, 0x2E	; 46
     b06:	f0 e0       	ldi	r31, 0x00	; 0
     b08:	80 81       	ld	r24, Z
     b0a:	87 7f       	andi	r24, 0xF7	; 247
     b0c:	8c 93       	st	X, r24

    // Use mode 0, clkdiv = 64 klok 0 Pwm signalen
    TCCR0A = 0;
     b0e:	e4 e4       	ldi	r30, 0x44	; 68
     b10:	f0 e0       	ldi	r31, 0x00	; 0
     b12:	10 82       	st	Z, r1
    TCCR0B = (0<<CS02) | (1<<CS01) | (1<<CS00);
     b14:	e5 e4       	ldi	r30, 0x45	; 69
     b16:	f0 e0       	ldi	r31, 0x00	; 0
     b18:	83 e0       	ldi	r24, 0x03	; 3
     b1a:	80 83       	st	Z, r24
    TIMSK0 = (1<<OCIE0B) | (1<<OCIE0A) | (1<<TOIE0);
     b1c:	ee e6       	ldi	r30, 0x6E	; 110
     b1e:	f0 e0       	ldi	r31, 0x00	; 0
     b20:	87 e0       	ldi	r24, 0x07	; 7
     b22:	80 83       	st	Z, r24
    OCR0A = 0;
     b24:	e7 e4       	ldi	r30, 0x47	; 71
     b26:	f0 e0       	ldi	r31, 0x00	; 0
     b28:	10 82       	st	Z, r1
    OCR0B = 0;
     b2a:	e8 e4       	ldi	r30, 0x48	; 72
     b2c:	f0 e0       	ldi	r31, 0x00	; 0
     b2e:	10 82       	st	Z, r1
    TCCR4A = 0;
    TCCR4B = (0<<CS42) | (1<<CS41) | (0<<CS40);


    // Interupts geactiveerd*/
    sei();
     b30:	78 94       	sei
}
     b32:	cf 91       	pop	r28
     b34:	df 91       	pop	r29
     b36:	08 95       	ret

00000b38 <motor>:

void motor (int Af, int Bf)
{
     b38:	df 93       	push	r29
     b3a:	cf 93       	push	r28
     b3c:	00 d0       	rcall	.+0      	; 0xb3e <motor+0x6>
     b3e:	0f 92       	push	r0
     b40:	cd b7       	in	r28, 0x3d	; 61
     b42:	de b7       	in	r29, 0x3e	; 62
     b44:	9a 83       	std	Y+2, r25	; 0x02
     b46:	89 83       	std	Y+1, r24	; 0x01
     b48:	7c 83       	std	Y+4, r23	; 0x04
     b4a:	6b 83       	std	Y+3, r22	; 0x03

            OCR0A = Af;
     b4c:	e7 e4       	ldi	r30, 0x47	; 71
     b4e:	f0 e0       	ldi	r31, 0x00	; 0
     b50:	89 81       	ldd	r24, Y+1	; 0x01
     b52:	80 83       	st	Z, r24
            OCR0B = Bf;
     b54:	e8 e4       	ldi	r30, 0x48	; 72
     b56:	f0 e0       	ldi	r31, 0x00	; 0
     b58:	8b 81       	ldd	r24, Y+3	; 0x03
     b5a:	80 83       	st	Z, r24
}
     b5c:	0f 90       	pop	r0
     b5e:	0f 90       	pop	r0
     b60:	0f 90       	pop	r0
     b62:	0f 90       	pop	r0
     b64:	cf 91       	pop	r28
     b66:	df 91       	pop	r29
     b68:	08 95       	ret

00000b6a <__fixunssfsi>:
     b6a:	ef 92       	push	r14
     b6c:	ff 92       	push	r15
     b6e:	0f 93       	push	r16
     b70:	1f 93       	push	r17
     b72:	7b 01       	movw	r14, r22
     b74:	8c 01       	movw	r16, r24
     b76:	20 e0       	ldi	r18, 0x00	; 0
     b78:	30 e0       	ldi	r19, 0x00	; 0
     b7a:	40 e0       	ldi	r20, 0x00	; 0
     b7c:	5f e4       	ldi	r21, 0x4F	; 79
     b7e:	0e 94 b5 08 	call	0x116a	; 0x116a <__gesf2>
     b82:	88 23       	and	r24, r24
     b84:	8c f0       	brlt	.+34     	; 0xba8 <__fixunssfsi+0x3e>
     b86:	c8 01       	movw	r24, r16
     b88:	b7 01       	movw	r22, r14
     b8a:	20 e0       	ldi	r18, 0x00	; 0
     b8c:	30 e0       	ldi	r19, 0x00	; 0
     b8e:	40 e0       	ldi	r20, 0x00	; 0
     b90:	5f e4       	ldi	r21, 0x4F	; 79
     b92:	0e 94 2d 07 	call	0xe5a	; 0xe5a <__subsf3>
     b96:	0e 94 a3 09 	call	0x1346	; 0x1346 <__fixsfsi>
     b9a:	9b 01       	movw	r18, r22
     b9c:	ac 01       	movw	r20, r24
     b9e:	20 50       	subi	r18, 0x00	; 0
     ba0:	30 40       	sbci	r19, 0x00	; 0
     ba2:	40 40       	sbci	r20, 0x00	; 0
     ba4:	50 48       	sbci	r21, 0x80	; 128
     ba6:	06 c0       	rjmp	.+12     	; 0xbb4 <__fixunssfsi+0x4a>
     ba8:	c8 01       	movw	r24, r16
     baa:	b7 01       	movw	r22, r14
     bac:	0e 94 a3 09 	call	0x1346	; 0x1346 <__fixsfsi>
     bb0:	9b 01       	movw	r18, r22
     bb2:	ac 01       	movw	r20, r24
     bb4:	b9 01       	movw	r22, r18
     bb6:	ca 01       	movw	r24, r20
     bb8:	1f 91       	pop	r17
     bba:	0f 91       	pop	r16
     bbc:	ff 90       	pop	r15
     bbe:	ef 90       	pop	r14
     bc0:	08 95       	ret

00000bc2 <_fpadd_parts>:
     bc2:	a0 e0       	ldi	r26, 0x00	; 0
     bc4:	b0 e0       	ldi	r27, 0x00	; 0
     bc6:	e7 ee       	ldi	r30, 0xE7	; 231
     bc8:	f5 e0       	ldi	r31, 0x05	; 5
     bca:	0c 94 65 0c 	jmp	0x18ca	; 0x18ca <__prologue_saves__>
     bce:	dc 01       	movw	r26, r24
     bd0:	2b 01       	movw	r4, r22
     bd2:	fa 01       	movw	r30, r20
     bd4:	9c 91       	ld	r25, X
     bd6:	92 30       	cpi	r25, 0x02	; 2
     bd8:	08 f4       	brcc	.+2      	; 0xbdc <_fpadd_parts+0x1a>
     bda:	39 c1       	rjmp	.+626    	; 0xe4e <_fpadd_parts+0x28c>
     bdc:	eb 01       	movw	r28, r22
     bde:	88 81       	ld	r24, Y
     be0:	82 30       	cpi	r24, 0x02	; 2
     be2:	08 f4       	brcc	.+2      	; 0xbe6 <_fpadd_parts+0x24>
     be4:	33 c1       	rjmp	.+614    	; 0xe4c <_fpadd_parts+0x28a>
     be6:	94 30       	cpi	r25, 0x04	; 4
     be8:	69 f4       	brne	.+26     	; 0xc04 <_fpadd_parts+0x42>
     bea:	84 30       	cpi	r24, 0x04	; 4
     bec:	09 f0       	breq	.+2      	; 0xbf0 <_fpadd_parts+0x2e>
     bee:	2f c1       	rjmp	.+606    	; 0xe4e <_fpadd_parts+0x28c>
     bf0:	11 96       	adiw	r26, 0x01	; 1
     bf2:	9c 91       	ld	r25, X
     bf4:	11 97       	sbiw	r26, 0x01	; 1
     bf6:	89 81       	ldd	r24, Y+1	; 0x01
     bf8:	98 17       	cp	r25, r24
     bfa:	09 f4       	brne	.+2      	; 0xbfe <_fpadd_parts+0x3c>
     bfc:	28 c1       	rjmp	.+592    	; 0xe4e <_fpadd_parts+0x28c>
     bfe:	a0 e0       	ldi	r26, 0x00	; 0
     c00:	b2 e0       	ldi	r27, 0x02	; 2
     c02:	25 c1       	rjmp	.+586    	; 0xe4e <_fpadd_parts+0x28c>
     c04:	84 30       	cpi	r24, 0x04	; 4
     c06:	09 f4       	brne	.+2      	; 0xc0a <_fpadd_parts+0x48>
     c08:	21 c1       	rjmp	.+578    	; 0xe4c <_fpadd_parts+0x28a>
     c0a:	82 30       	cpi	r24, 0x02	; 2
     c0c:	a9 f4       	brne	.+42     	; 0xc38 <_fpadd_parts+0x76>
     c0e:	92 30       	cpi	r25, 0x02	; 2
     c10:	09 f0       	breq	.+2      	; 0xc14 <_fpadd_parts+0x52>
     c12:	1d c1       	rjmp	.+570    	; 0xe4e <_fpadd_parts+0x28c>
     c14:	9a 01       	movw	r18, r20
     c16:	ad 01       	movw	r20, r26
     c18:	88 e0       	ldi	r24, 0x08	; 8
     c1a:	ea 01       	movw	r28, r20
     c1c:	09 90       	ld	r0, Y+
     c1e:	ae 01       	movw	r20, r28
     c20:	e9 01       	movw	r28, r18
     c22:	09 92       	st	Y+, r0
     c24:	9e 01       	movw	r18, r28
     c26:	81 50       	subi	r24, 0x01	; 1
     c28:	c1 f7       	brne	.-16     	; 0xc1a <_fpadd_parts+0x58>
     c2a:	e2 01       	movw	r28, r4
     c2c:	89 81       	ldd	r24, Y+1	; 0x01
     c2e:	11 96       	adiw	r26, 0x01	; 1
     c30:	9c 91       	ld	r25, X
     c32:	89 23       	and	r24, r25
     c34:	81 83       	std	Z+1, r24	; 0x01
     c36:	08 c1       	rjmp	.+528    	; 0xe48 <_fpadd_parts+0x286>
     c38:	92 30       	cpi	r25, 0x02	; 2
     c3a:	09 f4       	brne	.+2      	; 0xc3e <_fpadd_parts+0x7c>
     c3c:	07 c1       	rjmp	.+526    	; 0xe4c <_fpadd_parts+0x28a>
     c3e:	12 96       	adiw	r26, 0x02	; 2
     c40:	2d 90       	ld	r2, X+
     c42:	3c 90       	ld	r3, X
     c44:	13 97       	sbiw	r26, 0x03	; 3
     c46:	eb 01       	movw	r28, r22
     c48:	8a 81       	ldd	r24, Y+2	; 0x02
     c4a:	9b 81       	ldd	r25, Y+3	; 0x03
     c4c:	14 96       	adiw	r26, 0x04	; 4
     c4e:	ad 90       	ld	r10, X+
     c50:	bd 90       	ld	r11, X+
     c52:	cd 90       	ld	r12, X+
     c54:	dc 90       	ld	r13, X
     c56:	17 97       	sbiw	r26, 0x07	; 7
     c58:	ec 80       	ldd	r14, Y+4	; 0x04
     c5a:	fd 80       	ldd	r15, Y+5	; 0x05
     c5c:	0e 81       	ldd	r16, Y+6	; 0x06
     c5e:	1f 81       	ldd	r17, Y+7	; 0x07
     c60:	91 01       	movw	r18, r2
     c62:	28 1b       	sub	r18, r24
     c64:	39 0b       	sbc	r19, r25
     c66:	b9 01       	movw	r22, r18
     c68:	37 ff       	sbrs	r19, 7
     c6a:	04 c0       	rjmp	.+8      	; 0xc74 <_fpadd_parts+0xb2>
     c6c:	66 27       	eor	r22, r22
     c6e:	77 27       	eor	r23, r23
     c70:	62 1b       	sub	r22, r18
     c72:	73 0b       	sbc	r23, r19
     c74:	60 32       	cpi	r22, 0x20	; 32
     c76:	71 05       	cpc	r23, r1
     c78:	0c f0       	brlt	.+2      	; 0xc7c <_fpadd_parts+0xba>
     c7a:	61 c0       	rjmp	.+194    	; 0xd3e <_fpadd_parts+0x17c>
     c7c:	12 16       	cp	r1, r18
     c7e:	13 06       	cpc	r1, r19
     c80:	6c f5       	brge	.+90     	; 0xcdc <_fpadd_parts+0x11a>
     c82:	37 01       	movw	r6, r14
     c84:	48 01       	movw	r8, r16
     c86:	06 2e       	mov	r0, r22
     c88:	04 c0       	rjmp	.+8      	; 0xc92 <_fpadd_parts+0xd0>
     c8a:	96 94       	lsr	r9
     c8c:	87 94       	ror	r8
     c8e:	77 94       	ror	r7
     c90:	67 94       	ror	r6
     c92:	0a 94       	dec	r0
     c94:	d2 f7       	brpl	.-12     	; 0xc8a <_fpadd_parts+0xc8>
     c96:	21 e0       	ldi	r18, 0x01	; 1
     c98:	30 e0       	ldi	r19, 0x00	; 0
     c9a:	40 e0       	ldi	r20, 0x00	; 0
     c9c:	50 e0       	ldi	r21, 0x00	; 0
     c9e:	04 c0       	rjmp	.+8      	; 0xca8 <_fpadd_parts+0xe6>
     ca0:	22 0f       	add	r18, r18
     ca2:	33 1f       	adc	r19, r19
     ca4:	44 1f       	adc	r20, r20
     ca6:	55 1f       	adc	r21, r21
     ca8:	6a 95       	dec	r22
     caa:	d2 f7       	brpl	.-12     	; 0xca0 <_fpadd_parts+0xde>
     cac:	21 50       	subi	r18, 0x01	; 1
     cae:	30 40       	sbci	r19, 0x00	; 0
     cb0:	40 40       	sbci	r20, 0x00	; 0
     cb2:	50 40       	sbci	r21, 0x00	; 0
     cb4:	2e 21       	and	r18, r14
     cb6:	3f 21       	and	r19, r15
     cb8:	40 23       	and	r20, r16
     cba:	51 23       	and	r21, r17
     cbc:	21 15       	cp	r18, r1
     cbe:	31 05       	cpc	r19, r1
     cc0:	41 05       	cpc	r20, r1
     cc2:	51 05       	cpc	r21, r1
     cc4:	21 f0       	breq	.+8      	; 0xcce <_fpadd_parts+0x10c>
     cc6:	21 e0       	ldi	r18, 0x01	; 1
     cc8:	30 e0       	ldi	r19, 0x00	; 0
     cca:	40 e0       	ldi	r20, 0x00	; 0
     ccc:	50 e0       	ldi	r21, 0x00	; 0
     cce:	79 01       	movw	r14, r18
     cd0:	8a 01       	movw	r16, r20
     cd2:	e6 28       	or	r14, r6
     cd4:	f7 28       	or	r15, r7
     cd6:	08 29       	or	r16, r8
     cd8:	19 29       	or	r17, r9
     cda:	3c c0       	rjmp	.+120    	; 0xd54 <_fpadd_parts+0x192>
     cdc:	23 2b       	or	r18, r19
     cde:	d1 f1       	breq	.+116    	; 0xd54 <_fpadd_parts+0x192>
     ce0:	26 0e       	add	r2, r22
     ce2:	37 1e       	adc	r3, r23
     ce4:	35 01       	movw	r6, r10
     ce6:	46 01       	movw	r8, r12
     ce8:	06 2e       	mov	r0, r22
     cea:	04 c0       	rjmp	.+8      	; 0xcf4 <_fpadd_parts+0x132>
     cec:	96 94       	lsr	r9
     cee:	87 94       	ror	r8
     cf0:	77 94       	ror	r7
     cf2:	67 94       	ror	r6
     cf4:	0a 94       	dec	r0
     cf6:	d2 f7       	brpl	.-12     	; 0xcec <_fpadd_parts+0x12a>
     cf8:	21 e0       	ldi	r18, 0x01	; 1
     cfa:	30 e0       	ldi	r19, 0x00	; 0
     cfc:	40 e0       	ldi	r20, 0x00	; 0
     cfe:	50 e0       	ldi	r21, 0x00	; 0
     d00:	04 c0       	rjmp	.+8      	; 0xd0a <_fpadd_parts+0x148>
     d02:	22 0f       	add	r18, r18
     d04:	33 1f       	adc	r19, r19
     d06:	44 1f       	adc	r20, r20
     d08:	55 1f       	adc	r21, r21
     d0a:	6a 95       	dec	r22
     d0c:	d2 f7       	brpl	.-12     	; 0xd02 <_fpadd_parts+0x140>
     d0e:	21 50       	subi	r18, 0x01	; 1
     d10:	30 40       	sbci	r19, 0x00	; 0
     d12:	40 40       	sbci	r20, 0x00	; 0
     d14:	50 40       	sbci	r21, 0x00	; 0
     d16:	2a 21       	and	r18, r10
     d18:	3b 21       	and	r19, r11
     d1a:	4c 21       	and	r20, r12
     d1c:	5d 21       	and	r21, r13
     d1e:	21 15       	cp	r18, r1
     d20:	31 05       	cpc	r19, r1
     d22:	41 05       	cpc	r20, r1
     d24:	51 05       	cpc	r21, r1
     d26:	21 f0       	breq	.+8      	; 0xd30 <_fpadd_parts+0x16e>
     d28:	21 e0       	ldi	r18, 0x01	; 1
     d2a:	30 e0       	ldi	r19, 0x00	; 0
     d2c:	40 e0       	ldi	r20, 0x00	; 0
     d2e:	50 e0       	ldi	r21, 0x00	; 0
     d30:	59 01       	movw	r10, r18
     d32:	6a 01       	movw	r12, r20
     d34:	a6 28       	or	r10, r6
     d36:	b7 28       	or	r11, r7
     d38:	c8 28       	or	r12, r8
     d3a:	d9 28       	or	r13, r9
     d3c:	0b c0       	rjmp	.+22     	; 0xd54 <_fpadd_parts+0x192>
     d3e:	82 15       	cp	r24, r2
     d40:	93 05       	cpc	r25, r3
     d42:	2c f0       	brlt	.+10     	; 0xd4e <_fpadd_parts+0x18c>
     d44:	1c 01       	movw	r2, r24
     d46:	aa 24       	eor	r10, r10
     d48:	bb 24       	eor	r11, r11
     d4a:	65 01       	movw	r12, r10
     d4c:	03 c0       	rjmp	.+6      	; 0xd54 <_fpadd_parts+0x192>
     d4e:	ee 24       	eor	r14, r14
     d50:	ff 24       	eor	r15, r15
     d52:	87 01       	movw	r16, r14
     d54:	11 96       	adiw	r26, 0x01	; 1
     d56:	9c 91       	ld	r25, X
     d58:	d2 01       	movw	r26, r4
     d5a:	11 96       	adiw	r26, 0x01	; 1
     d5c:	8c 91       	ld	r24, X
     d5e:	98 17       	cp	r25, r24
     d60:	09 f4       	brne	.+2      	; 0xd64 <_fpadd_parts+0x1a2>
     d62:	45 c0       	rjmp	.+138    	; 0xdee <_fpadd_parts+0x22c>
     d64:	99 23       	and	r25, r25
     d66:	39 f0       	breq	.+14     	; 0xd76 <_fpadd_parts+0x1b4>
     d68:	a8 01       	movw	r20, r16
     d6a:	97 01       	movw	r18, r14
     d6c:	2a 19       	sub	r18, r10
     d6e:	3b 09       	sbc	r19, r11
     d70:	4c 09       	sbc	r20, r12
     d72:	5d 09       	sbc	r21, r13
     d74:	06 c0       	rjmp	.+12     	; 0xd82 <_fpadd_parts+0x1c0>
     d76:	a6 01       	movw	r20, r12
     d78:	95 01       	movw	r18, r10
     d7a:	2e 19       	sub	r18, r14
     d7c:	3f 09       	sbc	r19, r15
     d7e:	40 0b       	sbc	r20, r16
     d80:	51 0b       	sbc	r21, r17
     d82:	57 fd       	sbrc	r21, 7
     d84:	08 c0       	rjmp	.+16     	; 0xd96 <_fpadd_parts+0x1d4>
     d86:	11 82       	std	Z+1, r1	; 0x01
     d88:	33 82       	std	Z+3, r3	; 0x03
     d8a:	22 82       	std	Z+2, r2	; 0x02
     d8c:	24 83       	std	Z+4, r18	; 0x04
     d8e:	35 83       	std	Z+5, r19	; 0x05
     d90:	46 83       	std	Z+6, r20	; 0x06
     d92:	57 83       	std	Z+7, r21	; 0x07
     d94:	1d c0       	rjmp	.+58     	; 0xdd0 <_fpadd_parts+0x20e>
     d96:	81 e0       	ldi	r24, 0x01	; 1
     d98:	81 83       	std	Z+1, r24	; 0x01
     d9a:	33 82       	std	Z+3, r3	; 0x03
     d9c:	22 82       	std	Z+2, r2	; 0x02
     d9e:	88 27       	eor	r24, r24
     da0:	99 27       	eor	r25, r25
     da2:	dc 01       	movw	r26, r24
     da4:	82 1b       	sub	r24, r18
     da6:	93 0b       	sbc	r25, r19
     da8:	a4 0b       	sbc	r26, r20
     daa:	b5 0b       	sbc	r27, r21
     dac:	84 83       	std	Z+4, r24	; 0x04
     dae:	95 83       	std	Z+5, r25	; 0x05
     db0:	a6 83       	std	Z+6, r26	; 0x06
     db2:	b7 83       	std	Z+7, r27	; 0x07
     db4:	0d c0       	rjmp	.+26     	; 0xdd0 <_fpadd_parts+0x20e>
     db6:	22 0f       	add	r18, r18
     db8:	33 1f       	adc	r19, r19
     dba:	44 1f       	adc	r20, r20
     dbc:	55 1f       	adc	r21, r21
     dbe:	24 83       	std	Z+4, r18	; 0x04
     dc0:	35 83       	std	Z+5, r19	; 0x05
     dc2:	46 83       	std	Z+6, r20	; 0x06
     dc4:	57 83       	std	Z+7, r21	; 0x07
     dc6:	82 81       	ldd	r24, Z+2	; 0x02
     dc8:	93 81       	ldd	r25, Z+3	; 0x03
     dca:	01 97       	sbiw	r24, 0x01	; 1
     dcc:	93 83       	std	Z+3, r25	; 0x03
     dce:	82 83       	std	Z+2, r24	; 0x02
     dd0:	24 81       	ldd	r18, Z+4	; 0x04
     dd2:	35 81       	ldd	r19, Z+5	; 0x05
     dd4:	46 81       	ldd	r20, Z+6	; 0x06
     dd6:	57 81       	ldd	r21, Z+7	; 0x07
     dd8:	da 01       	movw	r26, r20
     dda:	c9 01       	movw	r24, r18
     ddc:	01 97       	sbiw	r24, 0x01	; 1
     dde:	a1 09       	sbc	r26, r1
     de0:	b1 09       	sbc	r27, r1
     de2:	8f 5f       	subi	r24, 0xFF	; 255
     de4:	9f 4f       	sbci	r25, 0xFF	; 255
     de6:	af 4f       	sbci	r26, 0xFF	; 255
     de8:	bf 43       	sbci	r27, 0x3F	; 63
     dea:	28 f3       	brcs	.-54     	; 0xdb6 <_fpadd_parts+0x1f4>
     dec:	0b c0       	rjmp	.+22     	; 0xe04 <_fpadd_parts+0x242>
     dee:	91 83       	std	Z+1, r25	; 0x01
     df0:	33 82       	std	Z+3, r3	; 0x03
     df2:	22 82       	std	Z+2, r2	; 0x02
     df4:	ea 0c       	add	r14, r10
     df6:	fb 1c       	adc	r15, r11
     df8:	0c 1d       	adc	r16, r12
     dfa:	1d 1d       	adc	r17, r13
     dfc:	e4 82       	std	Z+4, r14	; 0x04
     dfe:	f5 82       	std	Z+5, r15	; 0x05
     e00:	06 83       	std	Z+6, r16	; 0x06
     e02:	17 83       	std	Z+7, r17	; 0x07
     e04:	83 e0       	ldi	r24, 0x03	; 3
     e06:	80 83       	st	Z, r24
     e08:	24 81       	ldd	r18, Z+4	; 0x04
     e0a:	35 81       	ldd	r19, Z+5	; 0x05
     e0c:	46 81       	ldd	r20, Z+6	; 0x06
     e0e:	57 81       	ldd	r21, Z+7	; 0x07
     e10:	57 ff       	sbrs	r21, 7
     e12:	1a c0       	rjmp	.+52     	; 0xe48 <_fpadd_parts+0x286>
     e14:	c9 01       	movw	r24, r18
     e16:	aa 27       	eor	r26, r26
     e18:	97 fd       	sbrc	r25, 7
     e1a:	a0 95       	com	r26
     e1c:	ba 2f       	mov	r27, r26
     e1e:	81 70       	andi	r24, 0x01	; 1
     e20:	90 70       	andi	r25, 0x00	; 0
     e22:	a0 70       	andi	r26, 0x00	; 0
     e24:	b0 70       	andi	r27, 0x00	; 0
     e26:	56 95       	lsr	r21
     e28:	47 95       	ror	r20
     e2a:	37 95       	ror	r19
     e2c:	27 95       	ror	r18
     e2e:	82 2b       	or	r24, r18
     e30:	93 2b       	or	r25, r19
     e32:	a4 2b       	or	r26, r20
     e34:	b5 2b       	or	r27, r21
     e36:	84 83       	std	Z+4, r24	; 0x04
     e38:	95 83       	std	Z+5, r25	; 0x05
     e3a:	a6 83       	std	Z+6, r26	; 0x06
     e3c:	b7 83       	std	Z+7, r27	; 0x07
     e3e:	82 81       	ldd	r24, Z+2	; 0x02
     e40:	93 81       	ldd	r25, Z+3	; 0x03
     e42:	01 96       	adiw	r24, 0x01	; 1
     e44:	93 83       	std	Z+3, r25	; 0x03
     e46:	82 83       	std	Z+2, r24	; 0x02
     e48:	df 01       	movw	r26, r30
     e4a:	01 c0       	rjmp	.+2      	; 0xe4e <_fpadd_parts+0x28c>
     e4c:	d2 01       	movw	r26, r4
     e4e:	cd 01       	movw	r24, r26
     e50:	cd b7       	in	r28, 0x3d	; 61
     e52:	de b7       	in	r29, 0x3e	; 62
     e54:	e2 e1       	ldi	r30, 0x12	; 18
     e56:	0c 94 81 0c 	jmp	0x1902	; 0x1902 <__epilogue_restores__>

00000e5a <__subsf3>:
     e5a:	a0 e2       	ldi	r26, 0x20	; 32
     e5c:	b0 e0       	ldi	r27, 0x00	; 0
     e5e:	e3 e3       	ldi	r30, 0x33	; 51
     e60:	f7 e0       	ldi	r31, 0x07	; 7
     e62:	0c 94 71 0c 	jmp	0x18e2	; 0x18e2 <__prologue_saves__+0x18>
     e66:	69 83       	std	Y+1, r22	; 0x01
     e68:	7a 83       	std	Y+2, r23	; 0x02
     e6a:	8b 83       	std	Y+3, r24	; 0x03
     e6c:	9c 83       	std	Y+4, r25	; 0x04
     e6e:	2d 83       	std	Y+5, r18	; 0x05
     e70:	3e 83       	std	Y+6, r19	; 0x06
     e72:	4f 83       	std	Y+7, r20	; 0x07
     e74:	58 87       	std	Y+8, r21	; 0x08
     e76:	e9 e0       	ldi	r30, 0x09	; 9
     e78:	ee 2e       	mov	r14, r30
     e7a:	f1 2c       	mov	r15, r1
     e7c:	ec 0e       	add	r14, r28
     e7e:	fd 1e       	adc	r15, r29
     e80:	ce 01       	movw	r24, r28
     e82:	01 96       	adiw	r24, 0x01	; 1
     e84:	b7 01       	movw	r22, r14
     e86:	0e 94 94 0b 	call	0x1728	; 0x1728 <__unpack_f>
     e8a:	8e 01       	movw	r16, r28
     e8c:	0f 5e       	subi	r16, 0xEF	; 239
     e8e:	1f 4f       	sbci	r17, 0xFF	; 255
     e90:	ce 01       	movw	r24, r28
     e92:	05 96       	adiw	r24, 0x05	; 5
     e94:	b8 01       	movw	r22, r16
     e96:	0e 94 94 0b 	call	0x1728	; 0x1728 <__unpack_f>
     e9a:	8a 89       	ldd	r24, Y+18	; 0x12
     e9c:	91 e0       	ldi	r25, 0x01	; 1
     e9e:	89 27       	eor	r24, r25
     ea0:	8a 8b       	std	Y+18, r24	; 0x12
     ea2:	c7 01       	movw	r24, r14
     ea4:	b8 01       	movw	r22, r16
     ea6:	ae 01       	movw	r20, r28
     ea8:	47 5e       	subi	r20, 0xE7	; 231
     eaa:	5f 4f       	sbci	r21, 0xFF	; 255
     eac:	0e 94 e1 05 	call	0xbc2	; 0xbc2 <_fpadd_parts>
     eb0:	0e 94 bf 0a 	call	0x157e	; 0x157e <__pack_f>
     eb4:	a0 96       	adiw	r28, 0x20	; 32
     eb6:	e6 e0       	ldi	r30, 0x06	; 6
     eb8:	0c 94 8d 0c 	jmp	0x191a	; 0x191a <__epilogue_restores__+0x18>

00000ebc <__addsf3>:
     ebc:	a0 e2       	ldi	r26, 0x20	; 32
     ebe:	b0 e0       	ldi	r27, 0x00	; 0
     ec0:	e4 e6       	ldi	r30, 0x64	; 100
     ec2:	f7 e0       	ldi	r31, 0x07	; 7
     ec4:	0c 94 71 0c 	jmp	0x18e2	; 0x18e2 <__prologue_saves__+0x18>
     ec8:	69 83       	std	Y+1, r22	; 0x01
     eca:	7a 83       	std	Y+2, r23	; 0x02
     ecc:	8b 83       	std	Y+3, r24	; 0x03
     ece:	9c 83       	std	Y+4, r25	; 0x04
     ed0:	2d 83       	std	Y+5, r18	; 0x05
     ed2:	3e 83       	std	Y+6, r19	; 0x06
     ed4:	4f 83       	std	Y+7, r20	; 0x07
     ed6:	58 87       	std	Y+8, r21	; 0x08
     ed8:	f9 e0       	ldi	r31, 0x09	; 9
     eda:	ef 2e       	mov	r14, r31
     edc:	f1 2c       	mov	r15, r1
     ede:	ec 0e       	add	r14, r28
     ee0:	fd 1e       	adc	r15, r29
     ee2:	ce 01       	movw	r24, r28
     ee4:	01 96       	adiw	r24, 0x01	; 1
     ee6:	b7 01       	movw	r22, r14
     ee8:	0e 94 94 0b 	call	0x1728	; 0x1728 <__unpack_f>
     eec:	8e 01       	movw	r16, r28
     eee:	0f 5e       	subi	r16, 0xEF	; 239
     ef0:	1f 4f       	sbci	r17, 0xFF	; 255
     ef2:	ce 01       	movw	r24, r28
     ef4:	05 96       	adiw	r24, 0x05	; 5
     ef6:	b8 01       	movw	r22, r16
     ef8:	0e 94 94 0b 	call	0x1728	; 0x1728 <__unpack_f>
     efc:	c7 01       	movw	r24, r14
     efe:	b8 01       	movw	r22, r16
     f00:	ae 01       	movw	r20, r28
     f02:	47 5e       	subi	r20, 0xE7	; 231
     f04:	5f 4f       	sbci	r21, 0xFF	; 255
     f06:	0e 94 e1 05 	call	0xbc2	; 0xbc2 <_fpadd_parts>
     f0a:	0e 94 bf 0a 	call	0x157e	; 0x157e <__pack_f>
     f0e:	a0 96       	adiw	r28, 0x20	; 32
     f10:	e6 e0       	ldi	r30, 0x06	; 6
     f12:	0c 94 8d 0c 	jmp	0x191a	; 0x191a <__epilogue_restores__+0x18>

00000f16 <__mulsf3>:
     f16:	a0 e2       	ldi	r26, 0x20	; 32
     f18:	b0 e0       	ldi	r27, 0x00	; 0
     f1a:	e1 e9       	ldi	r30, 0x91	; 145
     f1c:	f7 e0       	ldi	r31, 0x07	; 7
     f1e:	0c 94 65 0c 	jmp	0x18ca	; 0x18ca <__prologue_saves__>
     f22:	69 83       	std	Y+1, r22	; 0x01
     f24:	7a 83       	std	Y+2, r23	; 0x02
     f26:	8b 83       	std	Y+3, r24	; 0x03
     f28:	9c 83       	std	Y+4, r25	; 0x04
     f2a:	2d 83       	std	Y+5, r18	; 0x05
     f2c:	3e 83       	std	Y+6, r19	; 0x06
     f2e:	4f 83       	std	Y+7, r20	; 0x07
     f30:	58 87       	std	Y+8, r21	; 0x08
     f32:	ce 01       	movw	r24, r28
     f34:	01 96       	adiw	r24, 0x01	; 1
     f36:	be 01       	movw	r22, r28
     f38:	67 5f       	subi	r22, 0xF7	; 247
     f3a:	7f 4f       	sbci	r23, 0xFF	; 255
     f3c:	0e 94 94 0b 	call	0x1728	; 0x1728 <__unpack_f>
     f40:	ce 01       	movw	r24, r28
     f42:	05 96       	adiw	r24, 0x05	; 5
     f44:	be 01       	movw	r22, r28
     f46:	6f 5e       	subi	r22, 0xEF	; 239
     f48:	7f 4f       	sbci	r23, 0xFF	; 255
     f4a:	0e 94 94 0b 	call	0x1728	; 0x1728 <__unpack_f>
     f4e:	99 85       	ldd	r25, Y+9	; 0x09
     f50:	92 30       	cpi	r25, 0x02	; 2
     f52:	88 f0       	brcs	.+34     	; 0xf76 <__mulsf3+0x60>
     f54:	89 89       	ldd	r24, Y+17	; 0x11
     f56:	82 30       	cpi	r24, 0x02	; 2
     f58:	c8 f0       	brcs	.+50     	; 0xf8c <__mulsf3+0x76>
     f5a:	94 30       	cpi	r25, 0x04	; 4
     f5c:	19 f4       	brne	.+6      	; 0xf64 <__mulsf3+0x4e>
     f5e:	82 30       	cpi	r24, 0x02	; 2
     f60:	51 f4       	brne	.+20     	; 0xf76 <__mulsf3+0x60>
     f62:	04 c0       	rjmp	.+8      	; 0xf6c <__mulsf3+0x56>
     f64:	84 30       	cpi	r24, 0x04	; 4
     f66:	29 f4       	brne	.+10     	; 0xf72 <__mulsf3+0x5c>
     f68:	92 30       	cpi	r25, 0x02	; 2
     f6a:	81 f4       	brne	.+32     	; 0xf8c <__mulsf3+0x76>
     f6c:	80 e0       	ldi	r24, 0x00	; 0
     f6e:	92 e0       	ldi	r25, 0x02	; 2
     f70:	c6 c0       	rjmp	.+396    	; 0x10fe <__mulsf3+0x1e8>
     f72:	92 30       	cpi	r25, 0x02	; 2
     f74:	49 f4       	brne	.+18     	; 0xf88 <__mulsf3+0x72>
     f76:	20 e0       	ldi	r18, 0x00	; 0
     f78:	9a 85       	ldd	r25, Y+10	; 0x0a
     f7a:	8a 89       	ldd	r24, Y+18	; 0x12
     f7c:	98 13       	cpse	r25, r24
     f7e:	21 e0       	ldi	r18, 0x01	; 1
     f80:	2a 87       	std	Y+10, r18	; 0x0a
     f82:	ce 01       	movw	r24, r28
     f84:	09 96       	adiw	r24, 0x09	; 9
     f86:	bb c0       	rjmp	.+374    	; 0x10fe <__mulsf3+0x1e8>
     f88:	82 30       	cpi	r24, 0x02	; 2
     f8a:	49 f4       	brne	.+18     	; 0xf9e <__mulsf3+0x88>
     f8c:	20 e0       	ldi	r18, 0x00	; 0
     f8e:	9a 85       	ldd	r25, Y+10	; 0x0a
     f90:	8a 89       	ldd	r24, Y+18	; 0x12
     f92:	98 13       	cpse	r25, r24
     f94:	21 e0       	ldi	r18, 0x01	; 1
     f96:	2a 8b       	std	Y+18, r18	; 0x12
     f98:	ce 01       	movw	r24, r28
     f9a:	41 96       	adiw	r24, 0x11	; 17
     f9c:	b0 c0       	rjmp	.+352    	; 0x10fe <__mulsf3+0x1e8>
     f9e:	2d 84       	ldd	r2, Y+13	; 0x0d
     fa0:	3e 84       	ldd	r3, Y+14	; 0x0e
     fa2:	4f 84       	ldd	r4, Y+15	; 0x0f
     fa4:	58 88       	ldd	r5, Y+16	; 0x10
     fa6:	6d 88       	ldd	r6, Y+21	; 0x15
     fa8:	7e 88       	ldd	r7, Y+22	; 0x16
     faa:	8f 88       	ldd	r8, Y+23	; 0x17
     fac:	98 8c       	ldd	r9, Y+24	; 0x18
     fae:	ee 24       	eor	r14, r14
     fb0:	ff 24       	eor	r15, r15
     fb2:	87 01       	movw	r16, r14
     fb4:	aa 24       	eor	r10, r10
     fb6:	bb 24       	eor	r11, r11
     fb8:	65 01       	movw	r12, r10
     fba:	40 e0       	ldi	r20, 0x00	; 0
     fbc:	50 e0       	ldi	r21, 0x00	; 0
     fbe:	60 e0       	ldi	r22, 0x00	; 0
     fc0:	70 e0       	ldi	r23, 0x00	; 0
     fc2:	e0 e0       	ldi	r30, 0x00	; 0
     fc4:	f0 e0       	ldi	r31, 0x00	; 0
     fc6:	c1 01       	movw	r24, r2
     fc8:	81 70       	andi	r24, 0x01	; 1
     fca:	90 70       	andi	r25, 0x00	; 0
     fcc:	89 2b       	or	r24, r25
     fce:	e9 f0       	breq	.+58     	; 0x100a <__mulsf3+0xf4>
     fd0:	e6 0c       	add	r14, r6
     fd2:	f7 1c       	adc	r15, r7
     fd4:	08 1d       	adc	r16, r8
     fd6:	19 1d       	adc	r17, r9
     fd8:	9a 01       	movw	r18, r20
     fda:	ab 01       	movw	r20, r22
     fdc:	2a 0d       	add	r18, r10
     fde:	3b 1d       	adc	r19, r11
     fe0:	4c 1d       	adc	r20, r12
     fe2:	5d 1d       	adc	r21, r13
     fe4:	80 e0       	ldi	r24, 0x00	; 0
     fe6:	90 e0       	ldi	r25, 0x00	; 0
     fe8:	a0 e0       	ldi	r26, 0x00	; 0
     fea:	b0 e0       	ldi	r27, 0x00	; 0
     fec:	e6 14       	cp	r14, r6
     fee:	f7 04       	cpc	r15, r7
     ff0:	08 05       	cpc	r16, r8
     ff2:	19 05       	cpc	r17, r9
     ff4:	20 f4       	brcc	.+8      	; 0xffe <__mulsf3+0xe8>
     ff6:	81 e0       	ldi	r24, 0x01	; 1
     ff8:	90 e0       	ldi	r25, 0x00	; 0
     ffa:	a0 e0       	ldi	r26, 0x00	; 0
     ffc:	b0 e0       	ldi	r27, 0x00	; 0
     ffe:	ba 01       	movw	r22, r20
    1000:	a9 01       	movw	r20, r18
    1002:	48 0f       	add	r20, r24
    1004:	59 1f       	adc	r21, r25
    1006:	6a 1f       	adc	r22, r26
    1008:	7b 1f       	adc	r23, r27
    100a:	aa 0c       	add	r10, r10
    100c:	bb 1c       	adc	r11, r11
    100e:	cc 1c       	adc	r12, r12
    1010:	dd 1c       	adc	r13, r13
    1012:	97 fe       	sbrs	r9, 7
    1014:	08 c0       	rjmp	.+16     	; 0x1026 <__mulsf3+0x110>
    1016:	81 e0       	ldi	r24, 0x01	; 1
    1018:	90 e0       	ldi	r25, 0x00	; 0
    101a:	a0 e0       	ldi	r26, 0x00	; 0
    101c:	b0 e0       	ldi	r27, 0x00	; 0
    101e:	a8 2a       	or	r10, r24
    1020:	b9 2a       	or	r11, r25
    1022:	ca 2a       	or	r12, r26
    1024:	db 2a       	or	r13, r27
    1026:	31 96       	adiw	r30, 0x01	; 1
    1028:	e0 32       	cpi	r30, 0x20	; 32
    102a:	f1 05       	cpc	r31, r1
    102c:	49 f0       	breq	.+18     	; 0x1040 <__mulsf3+0x12a>
    102e:	66 0c       	add	r6, r6
    1030:	77 1c       	adc	r7, r7
    1032:	88 1c       	adc	r8, r8
    1034:	99 1c       	adc	r9, r9
    1036:	56 94       	lsr	r5
    1038:	47 94       	ror	r4
    103a:	37 94       	ror	r3
    103c:	27 94       	ror	r2
    103e:	c3 cf       	rjmp	.-122    	; 0xfc6 <__mulsf3+0xb0>
    1040:	fa 85       	ldd	r31, Y+10	; 0x0a
    1042:	ea 89       	ldd	r30, Y+18	; 0x12
    1044:	2b 89       	ldd	r18, Y+19	; 0x13
    1046:	3c 89       	ldd	r19, Y+20	; 0x14
    1048:	8b 85       	ldd	r24, Y+11	; 0x0b
    104a:	9c 85       	ldd	r25, Y+12	; 0x0c
    104c:	28 0f       	add	r18, r24
    104e:	39 1f       	adc	r19, r25
    1050:	2e 5f       	subi	r18, 0xFE	; 254
    1052:	3f 4f       	sbci	r19, 0xFF	; 255
    1054:	17 c0       	rjmp	.+46     	; 0x1084 <__mulsf3+0x16e>
    1056:	ca 01       	movw	r24, r20
    1058:	81 70       	andi	r24, 0x01	; 1
    105a:	90 70       	andi	r25, 0x00	; 0
    105c:	89 2b       	or	r24, r25
    105e:	61 f0       	breq	.+24     	; 0x1078 <__mulsf3+0x162>
    1060:	16 95       	lsr	r17
    1062:	07 95       	ror	r16
    1064:	f7 94       	ror	r15
    1066:	e7 94       	ror	r14
    1068:	80 e0       	ldi	r24, 0x00	; 0
    106a:	90 e0       	ldi	r25, 0x00	; 0
    106c:	a0 e0       	ldi	r26, 0x00	; 0
    106e:	b0 e8       	ldi	r27, 0x80	; 128
    1070:	e8 2a       	or	r14, r24
    1072:	f9 2a       	or	r15, r25
    1074:	0a 2b       	or	r16, r26
    1076:	1b 2b       	or	r17, r27
    1078:	76 95       	lsr	r23
    107a:	67 95       	ror	r22
    107c:	57 95       	ror	r21
    107e:	47 95       	ror	r20
    1080:	2f 5f       	subi	r18, 0xFF	; 255
    1082:	3f 4f       	sbci	r19, 0xFF	; 255
    1084:	77 fd       	sbrc	r23, 7
    1086:	e7 cf       	rjmp	.-50     	; 0x1056 <__mulsf3+0x140>
    1088:	0c c0       	rjmp	.+24     	; 0x10a2 <__mulsf3+0x18c>
    108a:	44 0f       	add	r20, r20
    108c:	55 1f       	adc	r21, r21
    108e:	66 1f       	adc	r22, r22
    1090:	77 1f       	adc	r23, r23
    1092:	17 fd       	sbrc	r17, 7
    1094:	41 60       	ori	r20, 0x01	; 1
    1096:	ee 0c       	add	r14, r14
    1098:	ff 1c       	adc	r15, r15
    109a:	00 1f       	adc	r16, r16
    109c:	11 1f       	adc	r17, r17
    109e:	21 50       	subi	r18, 0x01	; 1
    10a0:	30 40       	sbci	r19, 0x00	; 0
    10a2:	40 30       	cpi	r20, 0x00	; 0
    10a4:	90 e0       	ldi	r25, 0x00	; 0
    10a6:	59 07       	cpc	r21, r25
    10a8:	90 e0       	ldi	r25, 0x00	; 0
    10aa:	69 07       	cpc	r22, r25
    10ac:	90 e4       	ldi	r25, 0x40	; 64
    10ae:	79 07       	cpc	r23, r25
    10b0:	60 f3       	brcs	.-40     	; 0x108a <__mulsf3+0x174>
    10b2:	2b 8f       	std	Y+27, r18	; 0x1b
    10b4:	3c 8f       	std	Y+28, r19	; 0x1c
    10b6:	db 01       	movw	r26, r22
    10b8:	ca 01       	movw	r24, r20
    10ba:	8f 77       	andi	r24, 0x7F	; 127
    10bc:	90 70       	andi	r25, 0x00	; 0
    10be:	a0 70       	andi	r26, 0x00	; 0
    10c0:	b0 70       	andi	r27, 0x00	; 0
    10c2:	80 34       	cpi	r24, 0x40	; 64
    10c4:	91 05       	cpc	r25, r1
    10c6:	a1 05       	cpc	r26, r1
    10c8:	b1 05       	cpc	r27, r1
    10ca:	61 f4       	brne	.+24     	; 0x10e4 <__mulsf3+0x1ce>
    10cc:	47 fd       	sbrc	r20, 7
    10ce:	0a c0       	rjmp	.+20     	; 0x10e4 <__mulsf3+0x1ce>
    10d0:	e1 14       	cp	r14, r1
    10d2:	f1 04       	cpc	r15, r1
    10d4:	01 05       	cpc	r16, r1
    10d6:	11 05       	cpc	r17, r1
    10d8:	29 f0       	breq	.+10     	; 0x10e4 <__mulsf3+0x1ce>
    10da:	40 5c       	subi	r20, 0xC0	; 192
    10dc:	5f 4f       	sbci	r21, 0xFF	; 255
    10de:	6f 4f       	sbci	r22, 0xFF	; 255
    10e0:	7f 4f       	sbci	r23, 0xFF	; 255
    10e2:	40 78       	andi	r20, 0x80	; 128
    10e4:	1a 8e       	std	Y+26, r1	; 0x1a
    10e6:	fe 17       	cp	r31, r30
    10e8:	11 f0       	breq	.+4      	; 0x10ee <__mulsf3+0x1d8>
    10ea:	81 e0       	ldi	r24, 0x01	; 1
    10ec:	8a 8f       	std	Y+26, r24	; 0x1a
    10ee:	4d 8f       	std	Y+29, r20	; 0x1d
    10f0:	5e 8f       	std	Y+30, r21	; 0x1e
    10f2:	6f 8f       	std	Y+31, r22	; 0x1f
    10f4:	78 a3       	std	Y+32, r23	; 0x20
    10f6:	83 e0       	ldi	r24, 0x03	; 3
    10f8:	89 8f       	std	Y+25, r24	; 0x19
    10fa:	ce 01       	movw	r24, r28
    10fc:	49 96       	adiw	r24, 0x19	; 25
    10fe:	0e 94 bf 0a 	call	0x157e	; 0x157e <__pack_f>
    1102:	a0 96       	adiw	r28, 0x20	; 32
    1104:	e2 e1       	ldi	r30, 0x12	; 18
    1106:	0c 94 81 0c 	jmp	0x1902	; 0x1902 <__epilogue_restores__>

0000110a <__gtsf2>:
    110a:	a8 e1       	ldi	r26, 0x18	; 24
    110c:	b0 e0       	ldi	r27, 0x00	; 0
    110e:	eb e8       	ldi	r30, 0x8B	; 139
    1110:	f8 e0       	ldi	r31, 0x08	; 8
    1112:	0c 94 71 0c 	jmp	0x18e2	; 0x18e2 <__prologue_saves__+0x18>
    1116:	69 83       	std	Y+1, r22	; 0x01
    1118:	7a 83       	std	Y+2, r23	; 0x02
    111a:	8b 83       	std	Y+3, r24	; 0x03
    111c:	9c 83       	std	Y+4, r25	; 0x04
    111e:	2d 83       	std	Y+5, r18	; 0x05
    1120:	3e 83       	std	Y+6, r19	; 0x06
    1122:	4f 83       	std	Y+7, r20	; 0x07
    1124:	58 87       	std	Y+8, r21	; 0x08
    1126:	89 e0       	ldi	r24, 0x09	; 9
    1128:	e8 2e       	mov	r14, r24
    112a:	f1 2c       	mov	r15, r1
    112c:	ec 0e       	add	r14, r28
    112e:	fd 1e       	adc	r15, r29
    1130:	ce 01       	movw	r24, r28
    1132:	01 96       	adiw	r24, 0x01	; 1
    1134:	b7 01       	movw	r22, r14
    1136:	0e 94 94 0b 	call	0x1728	; 0x1728 <__unpack_f>
    113a:	8e 01       	movw	r16, r28
    113c:	0f 5e       	subi	r16, 0xEF	; 239
    113e:	1f 4f       	sbci	r17, 0xFF	; 255
    1140:	ce 01       	movw	r24, r28
    1142:	05 96       	adiw	r24, 0x05	; 5
    1144:	b8 01       	movw	r22, r16
    1146:	0e 94 94 0b 	call	0x1728	; 0x1728 <__unpack_f>
    114a:	89 85       	ldd	r24, Y+9	; 0x09
    114c:	82 30       	cpi	r24, 0x02	; 2
    114e:	40 f0       	brcs	.+16     	; 0x1160 <__gtsf2+0x56>
    1150:	89 89       	ldd	r24, Y+17	; 0x11
    1152:	82 30       	cpi	r24, 0x02	; 2
    1154:	28 f0       	brcs	.+10     	; 0x1160 <__gtsf2+0x56>
    1156:	c7 01       	movw	r24, r14
    1158:	b8 01       	movw	r22, r16
    115a:	0e 94 0c 0c 	call	0x1818	; 0x1818 <__fpcmp_parts_f>
    115e:	01 c0       	rjmp	.+2      	; 0x1162 <__gtsf2+0x58>
    1160:	8f ef       	ldi	r24, 0xFF	; 255
    1162:	68 96       	adiw	r28, 0x18	; 24
    1164:	e6 e0       	ldi	r30, 0x06	; 6
    1166:	0c 94 8d 0c 	jmp	0x191a	; 0x191a <__epilogue_restores__+0x18>

0000116a <__gesf2>:
    116a:	a8 e1       	ldi	r26, 0x18	; 24
    116c:	b0 e0       	ldi	r27, 0x00	; 0
    116e:	eb eb       	ldi	r30, 0xBB	; 187
    1170:	f8 e0       	ldi	r31, 0x08	; 8
    1172:	0c 94 71 0c 	jmp	0x18e2	; 0x18e2 <__prologue_saves__+0x18>
    1176:	69 83       	std	Y+1, r22	; 0x01
    1178:	7a 83       	std	Y+2, r23	; 0x02
    117a:	8b 83       	std	Y+3, r24	; 0x03
    117c:	9c 83       	std	Y+4, r25	; 0x04
    117e:	2d 83       	std	Y+5, r18	; 0x05
    1180:	3e 83       	std	Y+6, r19	; 0x06
    1182:	4f 83       	std	Y+7, r20	; 0x07
    1184:	58 87       	std	Y+8, r21	; 0x08
    1186:	89 e0       	ldi	r24, 0x09	; 9
    1188:	e8 2e       	mov	r14, r24
    118a:	f1 2c       	mov	r15, r1
    118c:	ec 0e       	add	r14, r28
    118e:	fd 1e       	adc	r15, r29
    1190:	ce 01       	movw	r24, r28
    1192:	01 96       	adiw	r24, 0x01	; 1
    1194:	b7 01       	movw	r22, r14
    1196:	0e 94 94 0b 	call	0x1728	; 0x1728 <__unpack_f>
    119a:	8e 01       	movw	r16, r28
    119c:	0f 5e       	subi	r16, 0xEF	; 239
    119e:	1f 4f       	sbci	r17, 0xFF	; 255
    11a0:	ce 01       	movw	r24, r28
    11a2:	05 96       	adiw	r24, 0x05	; 5
    11a4:	b8 01       	movw	r22, r16
    11a6:	0e 94 94 0b 	call	0x1728	; 0x1728 <__unpack_f>
    11aa:	89 85       	ldd	r24, Y+9	; 0x09
    11ac:	82 30       	cpi	r24, 0x02	; 2
    11ae:	40 f0       	brcs	.+16     	; 0x11c0 <__gesf2+0x56>
    11b0:	89 89       	ldd	r24, Y+17	; 0x11
    11b2:	82 30       	cpi	r24, 0x02	; 2
    11b4:	28 f0       	brcs	.+10     	; 0x11c0 <__gesf2+0x56>
    11b6:	c7 01       	movw	r24, r14
    11b8:	b8 01       	movw	r22, r16
    11ba:	0e 94 0c 0c 	call	0x1818	; 0x1818 <__fpcmp_parts_f>
    11be:	01 c0       	rjmp	.+2      	; 0x11c2 <__gesf2+0x58>
    11c0:	8f ef       	ldi	r24, 0xFF	; 255
    11c2:	68 96       	adiw	r28, 0x18	; 24
    11c4:	e6 e0       	ldi	r30, 0x06	; 6
    11c6:	0c 94 8d 0c 	jmp	0x191a	; 0x191a <__epilogue_restores__+0x18>

000011ca <__ltsf2>:
    11ca:	a8 e1       	ldi	r26, 0x18	; 24
    11cc:	b0 e0       	ldi	r27, 0x00	; 0
    11ce:	eb ee       	ldi	r30, 0xEB	; 235
    11d0:	f8 e0       	ldi	r31, 0x08	; 8
    11d2:	0c 94 71 0c 	jmp	0x18e2	; 0x18e2 <__prologue_saves__+0x18>
    11d6:	69 83       	std	Y+1, r22	; 0x01
    11d8:	7a 83       	std	Y+2, r23	; 0x02
    11da:	8b 83       	std	Y+3, r24	; 0x03
    11dc:	9c 83       	std	Y+4, r25	; 0x04
    11de:	2d 83       	std	Y+5, r18	; 0x05
    11e0:	3e 83       	std	Y+6, r19	; 0x06
    11e2:	4f 83       	std	Y+7, r20	; 0x07
    11e4:	58 87       	std	Y+8, r21	; 0x08
    11e6:	89 e0       	ldi	r24, 0x09	; 9
    11e8:	e8 2e       	mov	r14, r24
    11ea:	f1 2c       	mov	r15, r1
    11ec:	ec 0e       	add	r14, r28
    11ee:	fd 1e       	adc	r15, r29
    11f0:	ce 01       	movw	r24, r28
    11f2:	01 96       	adiw	r24, 0x01	; 1
    11f4:	b7 01       	movw	r22, r14
    11f6:	0e 94 94 0b 	call	0x1728	; 0x1728 <__unpack_f>
    11fa:	8e 01       	movw	r16, r28
    11fc:	0f 5e       	subi	r16, 0xEF	; 239
    11fe:	1f 4f       	sbci	r17, 0xFF	; 255
    1200:	ce 01       	movw	r24, r28
    1202:	05 96       	adiw	r24, 0x05	; 5
    1204:	b8 01       	movw	r22, r16
    1206:	0e 94 94 0b 	call	0x1728	; 0x1728 <__unpack_f>
    120a:	89 85       	ldd	r24, Y+9	; 0x09
    120c:	82 30       	cpi	r24, 0x02	; 2
    120e:	40 f0       	brcs	.+16     	; 0x1220 <__ltsf2+0x56>
    1210:	89 89       	ldd	r24, Y+17	; 0x11
    1212:	82 30       	cpi	r24, 0x02	; 2
    1214:	28 f0       	brcs	.+10     	; 0x1220 <__ltsf2+0x56>
    1216:	c7 01       	movw	r24, r14
    1218:	b8 01       	movw	r22, r16
    121a:	0e 94 0c 0c 	call	0x1818	; 0x1818 <__fpcmp_parts_f>
    121e:	01 c0       	rjmp	.+2      	; 0x1222 <__ltsf2+0x58>
    1220:	81 e0       	ldi	r24, 0x01	; 1
    1222:	68 96       	adiw	r28, 0x18	; 24
    1224:	e6 e0       	ldi	r30, 0x06	; 6
    1226:	0c 94 8d 0c 	jmp	0x191a	; 0x191a <__epilogue_restores__+0x18>

0000122a <__lesf2>:
    122a:	a8 e1       	ldi	r26, 0x18	; 24
    122c:	b0 e0       	ldi	r27, 0x00	; 0
    122e:	eb e1       	ldi	r30, 0x1B	; 27
    1230:	f9 e0       	ldi	r31, 0x09	; 9
    1232:	0c 94 71 0c 	jmp	0x18e2	; 0x18e2 <__prologue_saves__+0x18>
    1236:	69 83       	std	Y+1, r22	; 0x01
    1238:	7a 83       	std	Y+2, r23	; 0x02
    123a:	8b 83       	std	Y+3, r24	; 0x03
    123c:	9c 83       	std	Y+4, r25	; 0x04
    123e:	2d 83       	std	Y+5, r18	; 0x05
    1240:	3e 83       	std	Y+6, r19	; 0x06
    1242:	4f 83       	std	Y+7, r20	; 0x07
    1244:	58 87       	std	Y+8, r21	; 0x08
    1246:	89 e0       	ldi	r24, 0x09	; 9
    1248:	e8 2e       	mov	r14, r24
    124a:	f1 2c       	mov	r15, r1
    124c:	ec 0e       	add	r14, r28
    124e:	fd 1e       	adc	r15, r29
    1250:	ce 01       	movw	r24, r28
    1252:	01 96       	adiw	r24, 0x01	; 1
    1254:	b7 01       	movw	r22, r14
    1256:	0e 94 94 0b 	call	0x1728	; 0x1728 <__unpack_f>
    125a:	8e 01       	movw	r16, r28
    125c:	0f 5e       	subi	r16, 0xEF	; 239
    125e:	1f 4f       	sbci	r17, 0xFF	; 255
    1260:	ce 01       	movw	r24, r28
    1262:	05 96       	adiw	r24, 0x05	; 5
    1264:	b8 01       	movw	r22, r16
    1266:	0e 94 94 0b 	call	0x1728	; 0x1728 <__unpack_f>
    126a:	89 85       	ldd	r24, Y+9	; 0x09
    126c:	82 30       	cpi	r24, 0x02	; 2
    126e:	40 f0       	brcs	.+16     	; 0x1280 <__lesf2+0x56>
    1270:	89 89       	ldd	r24, Y+17	; 0x11
    1272:	82 30       	cpi	r24, 0x02	; 2
    1274:	28 f0       	brcs	.+10     	; 0x1280 <__lesf2+0x56>
    1276:	c7 01       	movw	r24, r14
    1278:	b8 01       	movw	r22, r16
    127a:	0e 94 0c 0c 	call	0x1818	; 0x1818 <__fpcmp_parts_f>
    127e:	01 c0       	rjmp	.+2      	; 0x1282 <__lesf2+0x58>
    1280:	81 e0       	ldi	r24, 0x01	; 1
    1282:	68 96       	adiw	r28, 0x18	; 24
    1284:	e6 e0       	ldi	r30, 0x06	; 6
    1286:	0c 94 8d 0c 	jmp	0x191a	; 0x191a <__epilogue_restores__+0x18>

0000128a <__floatsisf>:
    128a:	a8 e0       	ldi	r26, 0x08	; 8
    128c:	b0 e0       	ldi	r27, 0x00	; 0
    128e:	eb e4       	ldi	r30, 0x4B	; 75
    1290:	f9 e0       	ldi	r31, 0x09	; 9
    1292:	0c 94 6e 0c 	jmp	0x18dc	; 0x18dc <__prologue_saves__+0x12>
    1296:	9b 01       	movw	r18, r22
    1298:	ac 01       	movw	r20, r24
    129a:	83 e0       	ldi	r24, 0x03	; 3
    129c:	89 83       	std	Y+1, r24	; 0x01
    129e:	da 01       	movw	r26, r20
    12a0:	c9 01       	movw	r24, r18
    12a2:	88 27       	eor	r24, r24
    12a4:	b7 fd       	sbrc	r27, 7
    12a6:	83 95       	inc	r24
    12a8:	99 27       	eor	r25, r25
    12aa:	aa 27       	eor	r26, r26
    12ac:	bb 27       	eor	r27, r27
    12ae:	b8 2e       	mov	r11, r24
    12b0:	21 15       	cp	r18, r1
    12b2:	31 05       	cpc	r19, r1
    12b4:	41 05       	cpc	r20, r1
    12b6:	51 05       	cpc	r21, r1
    12b8:	19 f4       	brne	.+6      	; 0x12c0 <__floatsisf+0x36>
    12ba:	82 e0       	ldi	r24, 0x02	; 2
    12bc:	89 83       	std	Y+1, r24	; 0x01
    12be:	3a c0       	rjmp	.+116    	; 0x1334 <__floatsisf+0xaa>
    12c0:	88 23       	and	r24, r24
    12c2:	a9 f0       	breq	.+42     	; 0x12ee <__floatsisf+0x64>
    12c4:	20 30       	cpi	r18, 0x00	; 0
    12c6:	80 e0       	ldi	r24, 0x00	; 0
    12c8:	38 07       	cpc	r19, r24
    12ca:	80 e0       	ldi	r24, 0x00	; 0
    12cc:	48 07       	cpc	r20, r24
    12ce:	80 e8       	ldi	r24, 0x80	; 128
    12d0:	58 07       	cpc	r21, r24
    12d2:	29 f4       	brne	.+10     	; 0x12de <__floatsisf+0x54>
    12d4:	60 e0       	ldi	r22, 0x00	; 0
    12d6:	70 e0       	ldi	r23, 0x00	; 0
    12d8:	80 e0       	ldi	r24, 0x00	; 0
    12da:	9f ec       	ldi	r25, 0xCF	; 207
    12dc:	30 c0       	rjmp	.+96     	; 0x133e <__floatsisf+0xb4>
    12de:	ee 24       	eor	r14, r14
    12e0:	ff 24       	eor	r15, r15
    12e2:	87 01       	movw	r16, r14
    12e4:	e2 1a       	sub	r14, r18
    12e6:	f3 0a       	sbc	r15, r19
    12e8:	04 0b       	sbc	r16, r20
    12ea:	15 0b       	sbc	r17, r21
    12ec:	02 c0       	rjmp	.+4      	; 0x12f2 <__floatsisf+0x68>
    12ee:	79 01       	movw	r14, r18
    12f0:	8a 01       	movw	r16, r20
    12f2:	8e e1       	ldi	r24, 0x1E	; 30
    12f4:	c8 2e       	mov	r12, r24
    12f6:	d1 2c       	mov	r13, r1
    12f8:	dc 82       	std	Y+4, r13	; 0x04
    12fa:	cb 82       	std	Y+3, r12	; 0x03
    12fc:	ed 82       	std	Y+5, r14	; 0x05
    12fe:	fe 82       	std	Y+6, r15	; 0x06
    1300:	0f 83       	std	Y+7, r16	; 0x07
    1302:	18 87       	std	Y+8, r17	; 0x08
    1304:	c8 01       	movw	r24, r16
    1306:	b7 01       	movw	r22, r14
    1308:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <__clzsi2>
    130c:	01 97       	sbiw	r24, 0x01	; 1
    130e:	18 16       	cp	r1, r24
    1310:	19 06       	cpc	r1, r25
    1312:	84 f4       	brge	.+32     	; 0x1334 <__floatsisf+0xaa>
    1314:	08 2e       	mov	r0, r24
    1316:	04 c0       	rjmp	.+8      	; 0x1320 <__floatsisf+0x96>
    1318:	ee 0c       	add	r14, r14
    131a:	ff 1c       	adc	r15, r15
    131c:	00 1f       	adc	r16, r16
    131e:	11 1f       	adc	r17, r17
    1320:	0a 94       	dec	r0
    1322:	d2 f7       	brpl	.-12     	; 0x1318 <__floatsisf+0x8e>
    1324:	ed 82       	std	Y+5, r14	; 0x05
    1326:	fe 82       	std	Y+6, r15	; 0x06
    1328:	0f 83       	std	Y+7, r16	; 0x07
    132a:	18 87       	std	Y+8, r17	; 0x08
    132c:	c8 1a       	sub	r12, r24
    132e:	d9 0a       	sbc	r13, r25
    1330:	dc 82       	std	Y+4, r13	; 0x04
    1332:	cb 82       	std	Y+3, r12	; 0x03
    1334:	ba 82       	std	Y+2, r11	; 0x02
    1336:	ce 01       	movw	r24, r28
    1338:	01 96       	adiw	r24, 0x01	; 1
    133a:	0e 94 bf 0a 	call	0x157e	; 0x157e <__pack_f>
    133e:	28 96       	adiw	r28, 0x08	; 8
    1340:	e9 e0       	ldi	r30, 0x09	; 9
    1342:	0c 94 8a 0c 	jmp	0x1914	; 0x1914 <__epilogue_restores__+0x12>

00001346 <__fixsfsi>:
    1346:	ac e0       	ldi	r26, 0x0C	; 12
    1348:	b0 e0       	ldi	r27, 0x00	; 0
    134a:	e9 ea       	ldi	r30, 0xA9	; 169
    134c:	f9 e0       	ldi	r31, 0x09	; 9
    134e:	0c 94 75 0c 	jmp	0x18ea	; 0x18ea <__prologue_saves__+0x20>
    1352:	69 83       	std	Y+1, r22	; 0x01
    1354:	7a 83       	std	Y+2, r23	; 0x02
    1356:	8b 83       	std	Y+3, r24	; 0x03
    1358:	9c 83       	std	Y+4, r25	; 0x04
    135a:	ce 01       	movw	r24, r28
    135c:	01 96       	adiw	r24, 0x01	; 1
    135e:	be 01       	movw	r22, r28
    1360:	6b 5f       	subi	r22, 0xFB	; 251
    1362:	7f 4f       	sbci	r23, 0xFF	; 255
    1364:	0e 94 94 0b 	call	0x1728	; 0x1728 <__unpack_f>
    1368:	8d 81       	ldd	r24, Y+5	; 0x05
    136a:	82 30       	cpi	r24, 0x02	; 2
    136c:	61 f1       	breq	.+88     	; 0x13c6 <__fixsfsi+0x80>
    136e:	82 30       	cpi	r24, 0x02	; 2
    1370:	50 f1       	brcs	.+84     	; 0x13c6 <__fixsfsi+0x80>
    1372:	84 30       	cpi	r24, 0x04	; 4
    1374:	21 f4       	brne	.+8      	; 0x137e <__fixsfsi+0x38>
    1376:	8e 81       	ldd	r24, Y+6	; 0x06
    1378:	88 23       	and	r24, r24
    137a:	51 f1       	breq	.+84     	; 0x13d0 <__fixsfsi+0x8a>
    137c:	2e c0       	rjmp	.+92     	; 0x13da <__fixsfsi+0x94>
    137e:	2f 81       	ldd	r18, Y+7	; 0x07
    1380:	38 85       	ldd	r19, Y+8	; 0x08
    1382:	37 fd       	sbrc	r19, 7
    1384:	20 c0       	rjmp	.+64     	; 0x13c6 <__fixsfsi+0x80>
    1386:	6e 81       	ldd	r22, Y+6	; 0x06
    1388:	2f 31       	cpi	r18, 0x1F	; 31
    138a:	31 05       	cpc	r19, r1
    138c:	1c f0       	brlt	.+6      	; 0x1394 <__fixsfsi+0x4e>
    138e:	66 23       	and	r22, r22
    1390:	f9 f0       	breq	.+62     	; 0x13d0 <__fixsfsi+0x8a>
    1392:	23 c0       	rjmp	.+70     	; 0x13da <__fixsfsi+0x94>
    1394:	8e e1       	ldi	r24, 0x1E	; 30
    1396:	90 e0       	ldi	r25, 0x00	; 0
    1398:	82 1b       	sub	r24, r18
    139a:	93 0b       	sbc	r25, r19
    139c:	29 85       	ldd	r18, Y+9	; 0x09
    139e:	3a 85       	ldd	r19, Y+10	; 0x0a
    13a0:	4b 85       	ldd	r20, Y+11	; 0x0b
    13a2:	5c 85       	ldd	r21, Y+12	; 0x0c
    13a4:	04 c0       	rjmp	.+8      	; 0x13ae <__fixsfsi+0x68>
    13a6:	56 95       	lsr	r21
    13a8:	47 95       	ror	r20
    13aa:	37 95       	ror	r19
    13ac:	27 95       	ror	r18
    13ae:	8a 95       	dec	r24
    13b0:	d2 f7       	brpl	.-12     	; 0x13a6 <__fixsfsi+0x60>
    13b2:	66 23       	and	r22, r22
    13b4:	b1 f0       	breq	.+44     	; 0x13e2 <__fixsfsi+0x9c>
    13b6:	50 95       	com	r21
    13b8:	40 95       	com	r20
    13ba:	30 95       	com	r19
    13bc:	21 95       	neg	r18
    13be:	3f 4f       	sbci	r19, 0xFF	; 255
    13c0:	4f 4f       	sbci	r20, 0xFF	; 255
    13c2:	5f 4f       	sbci	r21, 0xFF	; 255
    13c4:	0e c0       	rjmp	.+28     	; 0x13e2 <__fixsfsi+0x9c>
    13c6:	20 e0       	ldi	r18, 0x00	; 0
    13c8:	30 e0       	ldi	r19, 0x00	; 0
    13ca:	40 e0       	ldi	r20, 0x00	; 0
    13cc:	50 e0       	ldi	r21, 0x00	; 0
    13ce:	09 c0       	rjmp	.+18     	; 0x13e2 <__fixsfsi+0x9c>
    13d0:	2f ef       	ldi	r18, 0xFF	; 255
    13d2:	3f ef       	ldi	r19, 0xFF	; 255
    13d4:	4f ef       	ldi	r20, 0xFF	; 255
    13d6:	5f e7       	ldi	r21, 0x7F	; 127
    13d8:	04 c0       	rjmp	.+8      	; 0x13e2 <__fixsfsi+0x9c>
    13da:	20 e0       	ldi	r18, 0x00	; 0
    13dc:	30 e0       	ldi	r19, 0x00	; 0
    13de:	40 e0       	ldi	r20, 0x00	; 0
    13e0:	50 e8       	ldi	r21, 0x80	; 128
    13e2:	b9 01       	movw	r22, r18
    13e4:	ca 01       	movw	r24, r20
    13e6:	2c 96       	adiw	r28, 0x0c	; 12
    13e8:	e2 e0       	ldi	r30, 0x02	; 2
    13ea:	0c 94 91 0c 	jmp	0x1922	; 0x1922 <__epilogue_restores__+0x20>

000013ee <__floatunsisf>:
    13ee:	a8 e0       	ldi	r26, 0x08	; 8
    13f0:	b0 e0       	ldi	r27, 0x00	; 0
    13f2:	ed ef       	ldi	r30, 0xFD	; 253
    13f4:	f9 e0       	ldi	r31, 0x09	; 9
    13f6:	0c 94 6d 0c 	jmp	0x18da	; 0x18da <__prologue_saves__+0x10>
    13fa:	7b 01       	movw	r14, r22
    13fc:	8c 01       	movw	r16, r24
    13fe:	61 15       	cp	r22, r1
    1400:	71 05       	cpc	r23, r1
    1402:	81 05       	cpc	r24, r1
    1404:	91 05       	cpc	r25, r1
    1406:	19 f4       	brne	.+6      	; 0x140e <__floatunsisf+0x20>
    1408:	82 e0       	ldi	r24, 0x02	; 2
    140a:	89 83       	std	Y+1, r24	; 0x01
    140c:	60 c0       	rjmp	.+192    	; 0x14ce <__floatunsisf+0xe0>
    140e:	83 e0       	ldi	r24, 0x03	; 3
    1410:	89 83       	std	Y+1, r24	; 0x01
    1412:	8e e1       	ldi	r24, 0x1E	; 30
    1414:	c8 2e       	mov	r12, r24
    1416:	d1 2c       	mov	r13, r1
    1418:	dc 82       	std	Y+4, r13	; 0x04
    141a:	cb 82       	std	Y+3, r12	; 0x03
    141c:	ed 82       	std	Y+5, r14	; 0x05
    141e:	fe 82       	std	Y+6, r15	; 0x06
    1420:	0f 83       	std	Y+7, r16	; 0x07
    1422:	18 87       	std	Y+8, r17	; 0x08
    1424:	c8 01       	movw	r24, r16
    1426:	b7 01       	movw	r22, r14
    1428:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <__clzsi2>
    142c:	fc 01       	movw	r30, r24
    142e:	31 97       	sbiw	r30, 0x01	; 1
    1430:	f7 ff       	sbrs	r31, 7
    1432:	3b c0       	rjmp	.+118    	; 0x14aa <__floatunsisf+0xbc>
    1434:	22 27       	eor	r18, r18
    1436:	33 27       	eor	r19, r19
    1438:	2e 1b       	sub	r18, r30
    143a:	3f 0b       	sbc	r19, r31
    143c:	57 01       	movw	r10, r14
    143e:	68 01       	movw	r12, r16
    1440:	02 2e       	mov	r0, r18
    1442:	04 c0       	rjmp	.+8      	; 0x144c <__floatunsisf+0x5e>
    1444:	d6 94       	lsr	r13
    1446:	c7 94       	ror	r12
    1448:	b7 94       	ror	r11
    144a:	a7 94       	ror	r10
    144c:	0a 94       	dec	r0
    144e:	d2 f7       	brpl	.-12     	; 0x1444 <__floatunsisf+0x56>
    1450:	40 e0       	ldi	r20, 0x00	; 0
    1452:	50 e0       	ldi	r21, 0x00	; 0
    1454:	60 e0       	ldi	r22, 0x00	; 0
    1456:	70 e0       	ldi	r23, 0x00	; 0
    1458:	81 e0       	ldi	r24, 0x01	; 1
    145a:	90 e0       	ldi	r25, 0x00	; 0
    145c:	a0 e0       	ldi	r26, 0x00	; 0
    145e:	b0 e0       	ldi	r27, 0x00	; 0
    1460:	04 c0       	rjmp	.+8      	; 0x146a <__floatunsisf+0x7c>
    1462:	88 0f       	add	r24, r24
    1464:	99 1f       	adc	r25, r25
    1466:	aa 1f       	adc	r26, r26
    1468:	bb 1f       	adc	r27, r27
    146a:	2a 95       	dec	r18
    146c:	d2 f7       	brpl	.-12     	; 0x1462 <__floatunsisf+0x74>
    146e:	01 97       	sbiw	r24, 0x01	; 1
    1470:	a1 09       	sbc	r26, r1
    1472:	b1 09       	sbc	r27, r1
    1474:	8e 21       	and	r24, r14
    1476:	9f 21       	and	r25, r15
    1478:	a0 23       	and	r26, r16
    147a:	b1 23       	and	r27, r17
    147c:	00 97       	sbiw	r24, 0x00	; 0
    147e:	a1 05       	cpc	r26, r1
    1480:	b1 05       	cpc	r27, r1
    1482:	21 f0       	breq	.+8      	; 0x148c <__floatunsisf+0x9e>
    1484:	41 e0       	ldi	r20, 0x01	; 1
    1486:	50 e0       	ldi	r21, 0x00	; 0
    1488:	60 e0       	ldi	r22, 0x00	; 0
    148a:	70 e0       	ldi	r23, 0x00	; 0
    148c:	4a 29       	or	r20, r10
    148e:	5b 29       	or	r21, r11
    1490:	6c 29       	or	r22, r12
    1492:	7d 29       	or	r23, r13
    1494:	4d 83       	std	Y+5, r20	; 0x05
    1496:	5e 83       	std	Y+6, r21	; 0x06
    1498:	6f 83       	std	Y+7, r22	; 0x07
    149a:	78 87       	std	Y+8, r23	; 0x08
    149c:	8e e1       	ldi	r24, 0x1E	; 30
    149e:	90 e0       	ldi	r25, 0x00	; 0
    14a0:	8e 1b       	sub	r24, r30
    14a2:	9f 0b       	sbc	r25, r31
    14a4:	9c 83       	std	Y+4, r25	; 0x04
    14a6:	8b 83       	std	Y+3, r24	; 0x03
    14a8:	12 c0       	rjmp	.+36     	; 0x14ce <__floatunsisf+0xe0>
    14aa:	30 97       	sbiw	r30, 0x00	; 0
    14ac:	81 f0       	breq	.+32     	; 0x14ce <__floatunsisf+0xe0>
    14ae:	0e 2e       	mov	r0, r30
    14b0:	04 c0       	rjmp	.+8      	; 0x14ba <__floatunsisf+0xcc>
    14b2:	ee 0c       	add	r14, r14
    14b4:	ff 1c       	adc	r15, r15
    14b6:	00 1f       	adc	r16, r16
    14b8:	11 1f       	adc	r17, r17
    14ba:	0a 94       	dec	r0
    14bc:	d2 f7       	brpl	.-12     	; 0x14b2 <__floatunsisf+0xc4>
    14be:	ed 82       	std	Y+5, r14	; 0x05
    14c0:	fe 82       	std	Y+6, r15	; 0x06
    14c2:	0f 83       	std	Y+7, r16	; 0x07
    14c4:	18 87       	std	Y+8, r17	; 0x08
    14c6:	ce 1a       	sub	r12, r30
    14c8:	df 0a       	sbc	r13, r31
    14ca:	dc 82       	std	Y+4, r13	; 0x04
    14cc:	cb 82       	std	Y+3, r12	; 0x03
    14ce:	1a 82       	std	Y+2, r1	; 0x02
    14d0:	ce 01       	movw	r24, r28
    14d2:	01 96       	adiw	r24, 0x01	; 1
    14d4:	0e 94 bf 0a 	call	0x157e	; 0x157e <__pack_f>
    14d8:	28 96       	adiw	r28, 0x08	; 8
    14da:	ea e0       	ldi	r30, 0x0A	; 10
    14dc:	0c 94 89 0c 	jmp	0x1912	; 0x1912 <__epilogue_restores__+0x10>

000014e0 <__clzsi2>:
    14e0:	ef 92       	push	r14
    14e2:	ff 92       	push	r15
    14e4:	0f 93       	push	r16
    14e6:	1f 93       	push	r17
    14e8:	7b 01       	movw	r14, r22
    14ea:	8c 01       	movw	r16, r24
    14ec:	80 e0       	ldi	r24, 0x00	; 0
    14ee:	e8 16       	cp	r14, r24
    14f0:	80 e0       	ldi	r24, 0x00	; 0
    14f2:	f8 06       	cpc	r15, r24
    14f4:	81 e0       	ldi	r24, 0x01	; 1
    14f6:	08 07       	cpc	r16, r24
    14f8:	80 e0       	ldi	r24, 0x00	; 0
    14fa:	18 07       	cpc	r17, r24
    14fc:	88 f4       	brcc	.+34     	; 0x1520 <__clzsi2+0x40>
    14fe:	8f ef       	ldi	r24, 0xFF	; 255
    1500:	e8 16       	cp	r14, r24
    1502:	f1 04       	cpc	r15, r1
    1504:	01 05       	cpc	r16, r1
    1506:	11 05       	cpc	r17, r1
    1508:	31 f0       	breq	.+12     	; 0x1516 <__clzsi2+0x36>
    150a:	28 f0       	brcs	.+10     	; 0x1516 <__clzsi2+0x36>
    150c:	88 e0       	ldi	r24, 0x08	; 8
    150e:	90 e0       	ldi	r25, 0x00	; 0
    1510:	a0 e0       	ldi	r26, 0x00	; 0
    1512:	b0 e0       	ldi	r27, 0x00	; 0
    1514:	17 c0       	rjmp	.+46     	; 0x1544 <__clzsi2+0x64>
    1516:	80 e0       	ldi	r24, 0x00	; 0
    1518:	90 e0       	ldi	r25, 0x00	; 0
    151a:	a0 e0       	ldi	r26, 0x00	; 0
    151c:	b0 e0       	ldi	r27, 0x00	; 0
    151e:	12 c0       	rjmp	.+36     	; 0x1544 <__clzsi2+0x64>
    1520:	80 e0       	ldi	r24, 0x00	; 0
    1522:	e8 16       	cp	r14, r24
    1524:	80 e0       	ldi	r24, 0x00	; 0
    1526:	f8 06       	cpc	r15, r24
    1528:	80 e0       	ldi	r24, 0x00	; 0
    152a:	08 07       	cpc	r16, r24
    152c:	81 e0       	ldi	r24, 0x01	; 1
    152e:	18 07       	cpc	r17, r24
    1530:	28 f0       	brcs	.+10     	; 0x153c <__clzsi2+0x5c>
    1532:	88 e1       	ldi	r24, 0x18	; 24
    1534:	90 e0       	ldi	r25, 0x00	; 0
    1536:	a0 e0       	ldi	r26, 0x00	; 0
    1538:	b0 e0       	ldi	r27, 0x00	; 0
    153a:	04 c0       	rjmp	.+8      	; 0x1544 <__clzsi2+0x64>
    153c:	80 e1       	ldi	r24, 0x10	; 16
    153e:	90 e0       	ldi	r25, 0x00	; 0
    1540:	a0 e0       	ldi	r26, 0x00	; 0
    1542:	b0 e0       	ldi	r27, 0x00	; 0
    1544:	20 e2       	ldi	r18, 0x20	; 32
    1546:	30 e0       	ldi	r19, 0x00	; 0
    1548:	40 e0       	ldi	r20, 0x00	; 0
    154a:	50 e0       	ldi	r21, 0x00	; 0
    154c:	28 1b       	sub	r18, r24
    154e:	39 0b       	sbc	r19, r25
    1550:	4a 0b       	sbc	r20, r26
    1552:	5b 0b       	sbc	r21, r27
    1554:	04 c0       	rjmp	.+8      	; 0x155e <__clzsi2+0x7e>
    1556:	16 95       	lsr	r17
    1558:	07 95       	ror	r16
    155a:	f7 94       	ror	r15
    155c:	e7 94       	ror	r14
    155e:	8a 95       	dec	r24
    1560:	d2 f7       	brpl	.-12     	; 0x1556 <__clzsi2+0x76>
    1562:	f7 01       	movw	r30, r14
    1564:	e8 5f       	subi	r30, 0xF8	; 248
    1566:	fd 4f       	sbci	r31, 0xFD	; 253
    1568:	80 81       	ld	r24, Z
    156a:	28 1b       	sub	r18, r24
    156c:	31 09       	sbc	r19, r1
    156e:	41 09       	sbc	r20, r1
    1570:	51 09       	sbc	r21, r1
    1572:	c9 01       	movw	r24, r18
    1574:	1f 91       	pop	r17
    1576:	0f 91       	pop	r16
    1578:	ff 90       	pop	r15
    157a:	ef 90       	pop	r14
    157c:	08 95       	ret

0000157e <__pack_f>:
    157e:	df 92       	push	r13
    1580:	ef 92       	push	r14
    1582:	ff 92       	push	r15
    1584:	0f 93       	push	r16
    1586:	1f 93       	push	r17
    1588:	fc 01       	movw	r30, r24
    158a:	e4 80       	ldd	r14, Z+4	; 0x04
    158c:	f5 80       	ldd	r15, Z+5	; 0x05
    158e:	06 81       	ldd	r16, Z+6	; 0x06
    1590:	17 81       	ldd	r17, Z+7	; 0x07
    1592:	d1 80       	ldd	r13, Z+1	; 0x01
    1594:	80 81       	ld	r24, Z
    1596:	82 30       	cpi	r24, 0x02	; 2
    1598:	48 f4       	brcc	.+18     	; 0x15ac <__pack_f+0x2e>
    159a:	80 e0       	ldi	r24, 0x00	; 0
    159c:	90 e0       	ldi	r25, 0x00	; 0
    159e:	a0 e1       	ldi	r26, 0x10	; 16
    15a0:	b0 e0       	ldi	r27, 0x00	; 0
    15a2:	e8 2a       	or	r14, r24
    15a4:	f9 2a       	or	r15, r25
    15a6:	0a 2b       	or	r16, r26
    15a8:	1b 2b       	or	r17, r27
    15aa:	a5 c0       	rjmp	.+330    	; 0x16f6 <__pack_f+0x178>
    15ac:	84 30       	cpi	r24, 0x04	; 4
    15ae:	09 f4       	brne	.+2      	; 0x15b2 <__pack_f+0x34>
    15b0:	9f c0       	rjmp	.+318    	; 0x16f0 <__pack_f+0x172>
    15b2:	82 30       	cpi	r24, 0x02	; 2
    15b4:	21 f4       	brne	.+8      	; 0x15be <__pack_f+0x40>
    15b6:	ee 24       	eor	r14, r14
    15b8:	ff 24       	eor	r15, r15
    15ba:	87 01       	movw	r16, r14
    15bc:	05 c0       	rjmp	.+10     	; 0x15c8 <__pack_f+0x4a>
    15be:	e1 14       	cp	r14, r1
    15c0:	f1 04       	cpc	r15, r1
    15c2:	01 05       	cpc	r16, r1
    15c4:	11 05       	cpc	r17, r1
    15c6:	19 f4       	brne	.+6      	; 0x15ce <__pack_f+0x50>
    15c8:	e0 e0       	ldi	r30, 0x00	; 0
    15ca:	f0 e0       	ldi	r31, 0x00	; 0
    15cc:	96 c0       	rjmp	.+300    	; 0x16fa <__pack_f+0x17c>
    15ce:	62 81       	ldd	r22, Z+2	; 0x02
    15d0:	73 81       	ldd	r23, Z+3	; 0x03
    15d2:	9f ef       	ldi	r25, 0xFF	; 255
    15d4:	62 38       	cpi	r22, 0x82	; 130
    15d6:	79 07       	cpc	r23, r25
    15d8:	0c f0       	brlt	.+2      	; 0x15dc <__pack_f+0x5e>
    15da:	5b c0       	rjmp	.+182    	; 0x1692 <__pack_f+0x114>
    15dc:	22 e8       	ldi	r18, 0x82	; 130
    15de:	3f ef       	ldi	r19, 0xFF	; 255
    15e0:	26 1b       	sub	r18, r22
    15e2:	37 0b       	sbc	r19, r23
    15e4:	2a 31       	cpi	r18, 0x1A	; 26
    15e6:	31 05       	cpc	r19, r1
    15e8:	2c f0       	brlt	.+10     	; 0x15f4 <__pack_f+0x76>
    15ea:	20 e0       	ldi	r18, 0x00	; 0
    15ec:	30 e0       	ldi	r19, 0x00	; 0
    15ee:	40 e0       	ldi	r20, 0x00	; 0
    15f0:	50 e0       	ldi	r21, 0x00	; 0
    15f2:	2a c0       	rjmp	.+84     	; 0x1648 <__pack_f+0xca>
    15f4:	b8 01       	movw	r22, r16
    15f6:	a7 01       	movw	r20, r14
    15f8:	02 2e       	mov	r0, r18
    15fa:	04 c0       	rjmp	.+8      	; 0x1604 <__pack_f+0x86>
    15fc:	76 95       	lsr	r23
    15fe:	67 95       	ror	r22
    1600:	57 95       	ror	r21
    1602:	47 95       	ror	r20
    1604:	0a 94       	dec	r0
    1606:	d2 f7       	brpl	.-12     	; 0x15fc <__pack_f+0x7e>
    1608:	81 e0       	ldi	r24, 0x01	; 1
    160a:	90 e0       	ldi	r25, 0x00	; 0
    160c:	a0 e0       	ldi	r26, 0x00	; 0
    160e:	b0 e0       	ldi	r27, 0x00	; 0
    1610:	04 c0       	rjmp	.+8      	; 0x161a <__pack_f+0x9c>
    1612:	88 0f       	add	r24, r24
    1614:	99 1f       	adc	r25, r25
    1616:	aa 1f       	adc	r26, r26
    1618:	bb 1f       	adc	r27, r27
    161a:	2a 95       	dec	r18
    161c:	d2 f7       	brpl	.-12     	; 0x1612 <__pack_f+0x94>
    161e:	01 97       	sbiw	r24, 0x01	; 1
    1620:	a1 09       	sbc	r26, r1
    1622:	b1 09       	sbc	r27, r1
    1624:	8e 21       	and	r24, r14
    1626:	9f 21       	and	r25, r15
    1628:	a0 23       	and	r26, r16
    162a:	b1 23       	and	r27, r17
    162c:	00 97       	sbiw	r24, 0x00	; 0
    162e:	a1 05       	cpc	r26, r1
    1630:	b1 05       	cpc	r27, r1
    1632:	21 f0       	breq	.+8      	; 0x163c <__pack_f+0xbe>
    1634:	81 e0       	ldi	r24, 0x01	; 1
    1636:	90 e0       	ldi	r25, 0x00	; 0
    1638:	a0 e0       	ldi	r26, 0x00	; 0
    163a:	b0 e0       	ldi	r27, 0x00	; 0
    163c:	9a 01       	movw	r18, r20
    163e:	ab 01       	movw	r20, r22
    1640:	28 2b       	or	r18, r24
    1642:	39 2b       	or	r19, r25
    1644:	4a 2b       	or	r20, r26
    1646:	5b 2b       	or	r21, r27
    1648:	da 01       	movw	r26, r20
    164a:	c9 01       	movw	r24, r18
    164c:	8f 77       	andi	r24, 0x7F	; 127
    164e:	90 70       	andi	r25, 0x00	; 0
    1650:	a0 70       	andi	r26, 0x00	; 0
    1652:	b0 70       	andi	r27, 0x00	; 0
    1654:	80 34       	cpi	r24, 0x40	; 64
    1656:	91 05       	cpc	r25, r1
    1658:	a1 05       	cpc	r26, r1
    165a:	b1 05       	cpc	r27, r1
    165c:	39 f4       	brne	.+14     	; 0x166c <__pack_f+0xee>
    165e:	27 ff       	sbrs	r18, 7
    1660:	09 c0       	rjmp	.+18     	; 0x1674 <__pack_f+0xf6>
    1662:	20 5c       	subi	r18, 0xC0	; 192
    1664:	3f 4f       	sbci	r19, 0xFF	; 255
    1666:	4f 4f       	sbci	r20, 0xFF	; 255
    1668:	5f 4f       	sbci	r21, 0xFF	; 255
    166a:	04 c0       	rjmp	.+8      	; 0x1674 <__pack_f+0xf6>
    166c:	21 5c       	subi	r18, 0xC1	; 193
    166e:	3f 4f       	sbci	r19, 0xFF	; 255
    1670:	4f 4f       	sbci	r20, 0xFF	; 255
    1672:	5f 4f       	sbci	r21, 0xFF	; 255
    1674:	e0 e0       	ldi	r30, 0x00	; 0
    1676:	f0 e0       	ldi	r31, 0x00	; 0
    1678:	20 30       	cpi	r18, 0x00	; 0
    167a:	a0 e0       	ldi	r26, 0x00	; 0
    167c:	3a 07       	cpc	r19, r26
    167e:	a0 e0       	ldi	r26, 0x00	; 0
    1680:	4a 07       	cpc	r20, r26
    1682:	a0 e4       	ldi	r26, 0x40	; 64
    1684:	5a 07       	cpc	r21, r26
    1686:	10 f0       	brcs	.+4      	; 0x168c <__pack_f+0x10e>
    1688:	e1 e0       	ldi	r30, 0x01	; 1
    168a:	f0 e0       	ldi	r31, 0x00	; 0
    168c:	79 01       	movw	r14, r18
    168e:	8a 01       	movw	r16, r20
    1690:	27 c0       	rjmp	.+78     	; 0x16e0 <__pack_f+0x162>
    1692:	60 38       	cpi	r22, 0x80	; 128
    1694:	71 05       	cpc	r23, r1
    1696:	64 f5       	brge	.+88     	; 0x16f0 <__pack_f+0x172>
    1698:	fb 01       	movw	r30, r22
    169a:	e1 58       	subi	r30, 0x81	; 129
    169c:	ff 4f       	sbci	r31, 0xFF	; 255
    169e:	d8 01       	movw	r26, r16
    16a0:	c7 01       	movw	r24, r14
    16a2:	8f 77       	andi	r24, 0x7F	; 127
    16a4:	90 70       	andi	r25, 0x00	; 0
    16a6:	a0 70       	andi	r26, 0x00	; 0
    16a8:	b0 70       	andi	r27, 0x00	; 0
    16aa:	80 34       	cpi	r24, 0x40	; 64
    16ac:	91 05       	cpc	r25, r1
    16ae:	a1 05       	cpc	r26, r1
    16b0:	b1 05       	cpc	r27, r1
    16b2:	39 f4       	brne	.+14     	; 0x16c2 <__pack_f+0x144>
    16b4:	e7 fe       	sbrs	r14, 7
    16b6:	0d c0       	rjmp	.+26     	; 0x16d2 <__pack_f+0x154>
    16b8:	80 e4       	ldi	r24, 0x40	; 64
    16ba:	90 e0       	ldi	r25, 0x00	; 0
    16bc:	a0 e0       	ldi	r26, 0x00	; 0
    16be:	b0 e0       	ldi	r27, 0x00	; 0
    16c0:	04 c0       	rjmp	.+8      	; 0x16ca <__pack_f+0x14c>
    16c2:	8f e3       	ldi	r24, 0x3F	; 63
    16c4:	90 e0       	ldi	r25, 0x00	; 0
    16c6:	a0 e0       	ldi	r26, 0x00	; 0
    16c8:	b0 e0       	ldi	r27, 0x00	; 0
    16ca:	e8 0e       	add	r14, r24
    16cc:	f9 1e       	adc	r15, r25
    16ce:	0a 1f       	adc	r16, r26
    16d0:	1b 1f       	adc	r17, r27
    16d2:	17 ff       	sbrs	r17, 7
    16d4:	05 c0       	rjmp	.+10     	; 0x16e0 <__pack_f+0x162>
    16d6:	16 95       	lsr	r17
    16d8:	07 95       	ror	r16
    16da:	f7 94       	ror	r15
    16dc:	e7 94       	ror	r14
    16de:	31 96       	adiw	r30, 0x01	; 1
    16e0:	87 e0       	ldi	r24, 0x07	; 7
    16e2:	16 95       	lsr	r17
    16e4:	07 95       	ror	r16
    16e6:	f7 94       	ror	r15
    16e8:	e7 94       	ror	r14
    16ea:	8a 95       	dec	r24
    16ec:	d1 f7       	brne	.-12     	; 0x16e2 <__pack_f+0x164>
    16ee:	05 c0       	rjmp	.+10     	; 0x16fa <__pack_f+0x17c>
    16f0:	ee 24       	eor	r14, r14
    16f2:	ff 24       	eor	r15, r15
    16f4:	87 01       	movw	r16, r14
    16f6:	ef ef       	ldi	r30, 0xFF	; 255
    16f8:	f0 e0       	ldi	r31, 0x00	; 0
    16fa:	6e 2f       	mov	r22, r30
    16fc:	67 95       	ror	r22
    16fe:	66 27       	eor	r22, r22
    1700:	67 95       	ror	r22
    1702:	90 2f       	mov	r25, r16
    1704:	9f 77       	andi	r25, 0x7F	; 127
    1706:	d7 94       	ror	r13
    1708:	dd 24       	eor	r13, r13
    170a:	d7 94       	ror	r13
    170c:	8e 2f       	mov	r24, r30
    170e:	86 95       	lsr	r24
    1710:	49 2f       	mov	r20, r25
    1712:	46 2b       	or	r20, r22
    1714:	58 2f       	mov	r21, r24
    1716:	5d 29       	or	r21, r13
    1718:	b7 01       	movw	r22, r14
    171a:	ca 01       	movw	r24, r20
    171c:	1f 91       	pop	r17
    171e:	0f 91       	pop	r16
    1720:	ff 90       	pop	r15
    1722:	ef 90       	pop	r14
    1724:	df 90       	pop	r13
    1726:	08 95       	ret

00001728 <__unpack_f>:
    1728:	fc 01       	movw	r30, r24
    172a:	db 01       	movw	r26, r22
    172c:	40 81       	ld	r20, Z
    172e:	51 81       	ldd	r21, Z+1	; 0x01
    1730:	22 81       	ldd	r18, Z+2	; 0x02
    1732:	62 2f       	mov	r22, r18
    1734:	6f 77       	andi	r22, 0x7F	; 127
    1736:	70 e0       	ldi	r23, 0x00	; 0
    1738:	22 1f       	adc	r18, r18
    173a:	22 27       	eor	r18, r18
    173c:	22 1f       	adc	r18, r18
    173e:	93 81       	ldd	r25, Z+3	; 0x03
    1740:	89 2f       	mov	r24, r25
    1742:	88 0f       	add	r24, r24
    1744:	82 2b       	or	r24, r18
    1746:	28 2f       	mov	r18, r24
    1748:	30 e0       	ldi	r19, 0x00	; 0
    174a:	99 1f       	adc	r25, r25
    174c:	99 27       	eor	r25, r25
    174e:	99 1f       	adc	r25, r25
    1750:	11 96       	adiw	r26, 0x01	; 1
    1752:	9c 93       	st	X, r25
    1754:	11 97       	sbiw	r26, 0x01	; 1
    1756:	21 15       	cp	r18, r1
    1758:	31 05       	cpc	r19, r1
    175a:	a9 f5       	brne	.+106    	; 0x17c6 <__unpack_f+0x9e>
    175c:	41 15       	cp	r20, r1
    175e:	51 05       	cpc	r21, r1
    1760:	61 05       	cpc	r22, r1
    1762:	71 05       	cpc	r23, r1
    1764:	11 f4       	brne	.+4      	; 0x176a <__unpack_f+0x42>
    1766:	82 e0       	ldi	r24, 0x02	; 2
    1768:	37 c0       	rjmp	.+110    	; 0x17d8 <__unpack_f+0xb0>
    176a:	82 e8       	ldi	r24, 0x82	; 130
    176c:	9f ef       	ldi	r25, 0xFF	; 255
    176e:	13 96       	adiw	r26, 0x03	; 3
    1770:	9c 93       	st	X, r25
    1772:	8e 93       	st	-X, r24
    1774:	12 97       	sbiw	r26, 0x02	; 2
    1776:	9a 01       	movw	r18, r20
    1778:	ab 01       	movw	r20, r22
    177a:	67 e0       	ldi	r22, 0x07	; 7
    177c:	22 0f       	add	r18, r18
    177e:	33 1f       	adc	r19, r19
    1780:	44 1f       	adc	r20, r20
    1782:	55 1f       	adc	r21, r21
    1784:	6a 95       	dec	r22
    1786:	d1 f7       	brne	.-12     	; 0x177c <__unpack_f+0x54>
    1788:	83 e0       	ldi	r24, 0x03	; 3
    178a:	8c 93       	st	X, r24
    178c:	0d c0       	rjmp	.+26     	; 0x17a8 <__unpack_f+0x80>
    178e:	22 0f       	add	r18, r18
    1790:	33 1f       	adc	r19, r19
    1792:	44 1f       	adc	r20, r20
    1794:	55 1f       	adc	r21, r21
    1796:	12 96       	adiw	r26, 0x02	; 2
    1798:	8d 91       	ld	r24, X+
    179a:	9c 91       	ld	r25, X
    179c:	13 97       	sbiw	r26, 0x03	; 3
    179e:	01 97       	sbiw	r24, 0x01	; 1
    17a0:	13 96       	adiw	r26, 0x03	; 3
    17a2:	9c 93       	st	X, r25
    17a4:	8e 93       	st	-X, r24
    17a6:	12 97       	sbiw	r26, 0x02	; 2
    17a8:	20 30       	cpi	r18, 0x00	; 0
    17aa:	80 e0       	ldi	r24, 0x00	; 0
    17ac:	38 07       	cpc	r19, r24
    17ae:	80 e0       	ldi	r24, 0x00	; 0
    17b0:	48 07       	cpc	r20, r24
    17b2:	80 e4       	ldi	r24, 0x40	; 64
    17b4:	58 07       	cpc	r21, r24
    17b6:	58 f3       	brcs	.-42     	; 0x178e <__unpack_f+0x66>
    17b8:	14 96       	adiw	r26, 0x04	; 4
    17ba:	2d 93       	st	X+, r18
    17bc:	3d 93       	st	X+, r19
    17be:	4d 93       	st	X+, r20
    17c0:	5c 93       	st	X, r21
    17c2:	17 97       	sbiw	r26, 0x07	; 7
    17c4:	08 95       	ret
    17c6:	2f 3f       	cpi	r18, 0xFF	; 255
    17c8:	31 05       	cpc	r19, r1
    17ca:	79 f4       	brne	.+30     	; 0x17ea <__unpack_f+0xc2>
    17cc:	41 15       	cp	r20, r1
    17ce:	51 05       	cpc	r21, r1
    17d0:	61 05       	cpc	r22, r1
    17d2:	71 05       	cpc	r23, r1
    17d4:	19 f4       	brne	.+6      	; 0x17dc <__unpack_f+0xb4>
    17d6:	84 e0       	ldi	r24, 0x04	; 4
    17d8:	8c 93       	st	X, r24
    17da:	08 95       	ret
    17dc:	64 ff       	sbrs	r22, 4
    17de:	03 c0       	rjmp	.+6      	; 0x17e6 <__unpack_f+0xbe>
    17e0:	81 e0       	ldi	r24, 0x01	; 1
    17e2:	8c 93       	st	X, r24
    17e4:	12 c0       	rjmp	.+36     	; 0x180a <__unpack_f+0xe2>
    17e6:	1c 92       	st	X, r1
    17e8:	10 c0       	rjmp	.+32     	; 0x180a <__unpack_f+0xe2>
    17ea:	2f 57       	subi	r18, 0x7F	; 127
    17ec:	30 40       	sbci	r19, 0x00	; 0
    17ee:	13 96       	adiw	r26, 0x03	; 3
    17f0:	3c 93       	st	X, r19
    17f2:	2e 93       	st	-X, r18
    17f4:	12 97       	sbiw	r26, 0x02	; 2
    17f6:	83 e0       	ldi	r24, 0x03	; 3
    17f8:	8c 93       	st	X, r24
    17fa:	87 e0       	ldi	r24, 0x07	; 7
    17fc:	44 0f       	add	r20, r20
    17fe:	55 1f       	adc	r21, r21
    1800:	66 1f       	adc	r22, r22
    1802:	77 1f       	adc	r23, r23
    1804:	8a 95       	dec	r24
    1806:	d1 f7       	brne	.-12     	; 0x17fc <__unpack_f+0xd4>
    1808:	70 64       	ori	r23, 0x40	; 64
    180a:	14 96       	adiw	r26, 0x04	; 4
    180c:	4d 93       	st	X+, r20
    180e:	5d 93       	st	X+, r21
    1810:	6d 93       	st	X+, r22
    1812:	7c 93       	st	X, r23
    1814:	17 97       	sbiw	r26, 0x07	; 7
    1816:	08 95       	ret

00001818 <__fpcmp_parts_f>:
    1818:	1f 93       	push	r17
    181a:	dc 01       	movw	r26, r24
    181c:	fb 01       	movw	r30, r22
    181e:	9c 91       	ld	r25, X
    1820:	92 30       	cpi	r25, 0x02	; 2
    1822:	08 f4       	brcc	.+2      	; 0x1826 <__fpcmp_parts_f+0xe>
    1824:	47 c0       	rjmp	.+142    	; 0x18b4 <__fpcmp_parts_f+0x9c>
    1826:	80 81       	ld	r24, Z
    1828:	82 30       	cpi	r24, 0x02	; 2
    182a:	08 f4       	brcc	.+2      	; 0x182e <__fpcmp_parts_f+0x16>
    182c:	43 c0       	rjmp	.+134    	; 0x18b4 <__fpcmp_parts_f+0x9c>
    182e:	94 30       	cpi	r25, 0x04	; 4
    1830:	51 f4       	brne	.+20     	; 0x1846 <__fpcmp_parts_f+0x2e>
    1832:	11 96       	adiw	r26, 0x01	; 1
    1834:	1c 91       	ld	r17, X
    1836:	84 30       	cpi	r24, 0x04	; 4
    1838:	99 f5       	brne	.+102    	; 0x18a0 <__fpcmp_parts_f+0x88>
    183a:	81 81       	ldd	r24, Z+1	; 0x01
    183c:	68 2f       	mov	r22, r24
    183e:	70 e0       	ldi	r23, 0x00	; 0
    1840:	61 1b       	sub	r22, r17
    1842:	71 09       	sbc	r23, r1
    1844:	3f c0       	rjmp	.+126    	; 0x18c4 <__fpcmp_parts_f+0xac>
    1846:	84 30       	cpi	r24, 0x04	; 4
    1848:	21 f0       	breq	.+8      	; 0x1852 <__fpcmp_parts_f+0x3a>
    184a:	92 30       	cpi	r25, 0x02	; 2
    184c:	31 f4       	brne	.+12     	; 0x185a <__fpcmp_parts_f+0x42>
    184e:	82 30       	cpi	r24, 0x02	; 2
    1850:	b9 f1       	breq	.+110    	; 0x18c0 <__fpcmp_parts_f+0xa8>
    1852:	81 81       	ldd	r24, Z+1	; 0x01
    1854:	88 23       	and	r24, r24
    1856:	89 f1       	breq	.+98     	; 0x18ba <__fpcmp_parts_f+0xa2>
    1858:	2d c0       	rjmp	.+90     	; 0x18b4 <__fpcmp_parts_f+0x9c>
    185a:	11 96       	adiw	r26, 0x01	; 1
    185c:	1c 91       	ld	r17, X
    185e:	11 97       	sbiw	r26, 0x01	; 1
    1860:	82 30       	cpi	r24, 0x02	; 2
    1862:	f1 f0       	breq	.+60     	; 0x18a0 <__fpcmp_parts_f+0x88>
    1864:	81 81       	ldd	r24, Z+1	; 0x01
    1866:	18 17       	cp	r17, r24
    1868:	d9 f4       	brne	.+54     	; 0x18a0 <__fpcmp_parts_f+0x88>
    186a:	12 96       	adiw	r26, 0x02	; 2
    186c:	2d 91       	ld	r18, X+
    186e:	3c 91       	ld	r19, X
    1870:	13 97       	sbiw	r26, 0x03	; 3
    1872:	82 81       	ldd	r24, Z+2	; 0x02
    1874:	93 81       	ldd	r25, Z+3	; 0x03
    1876:	82 17       	cp	r24, r18
    1878:	93 07       	cpc	r25, r19
    187a:	94 f0       	brlt	.+36     	; 0x18a0 <__fpcmp_parts_f+0x88>
    187c:	28 17       	cp	r18, r24
    187e:	39 07       	cpc	r19, r25
    1880:	bc f0       	brlt	.+46     	; 0x18b0 <__fpcmp_parts_f+0x98>
    1882:	14 96       	adiw	r26, 0x04	; 4
    1884:	8d 91       	ld	r24, X+
    1886:	9d 91       	ld	r25, X+
    1888:	0d 90       	ld	r0, X+
    188a:	bc 91       	ld	r27, X
    188c:	a0 2d       	mov	r26, r0
    188e:	24 81       	ldd	r18, Z+4	; 0x04
    1890:	35 81       	ldd	r19, Z+5	; 0x05
    1892:	46 81       	ldd	r20, Z+6	; 0x06
    1894:	57 81       	ldd	r21, Z+7	; 0x07
    1896:	28 17       	cp	r18, r24
    1898:	39 07       	cpc	r19, r25
    189a:	4a 07       	cpc	r20, r26
    189c:	5b 07       	cpc	r21, r27
    189e:	18 f4       	brcc	.+6      	; 0x18a6 <__fpcmp_parts_f+0x8e>
    18a0:	11 23       	and	r17, r17
    18a2:	41 f0       	breq	.+16     	; 0x18b4 <__fpcmp_parts_f+0x9c>
    18a4:	0a c0       	rjmp	.+20     	; 0x18ba <__fpcmp_parts_f+0xa2>
    18a6:	82 17       	cp	r24, r18
    18a8:	93 07       	cpc	r25, r19
    18aa:	a4 07       	cpc	r26, r20
    18ac:	b5 07       	cpc	r27, r21
    18ae:	40 f4       	brcc	.+16     	; 0x18c0 <__fpcmp_parts_f+0xa8>
    18b0:	11 23       	and	r17, r17
    18b2:	19 f0       	breq	.+6      	; 0x18ba <__fpcmp_parts_f+0xa2>
    18b4:	61 e0       	ldi	r22, 0x01	; 1
    18b6:	70 e0       	ldi	r23, 0x00	; 0
    18b8:	05 c0       	rjmp	.+10     	; 0x18c4 <__fpcmp_parts_f+0xac>
    18ba:	6f ef       	ldi	r22, 0xFF	; 255
    18bc:	7f ef       	ldi	r23, 0xFF	; 255
    18be:	02 c0       	rjmp	.+4      	; 0x18c4 <__fpcmp_parts_f+0xac>
    18c0:	60 e0       	ldi	r22, 0x00	; 0
    18c2:	70 e0       	ldi	r23, 0x00	; 0
    18c4:	cb 01       	movw	r24, r22
    18c6:	1f 91       	pop	r17
    18c8:	08 95       	ret

000018ca <__prologue_saves__>:
    18ca:	2f 92       	push	r2
    18cc:	3f 92       	push	r3
    18ce:	4f 92       	push	r4
    18d0:	5f 92       	push	r5
    18d2:	6f 92       	push	r6
    18d4:	7f 92       	push	r7
    18d6:	8f 92       	push	r8
    18d8:	9f 92       	push	r9
    18da:	af 92       	push	r10
    18dc:	bf 92       	push	r11
    18de:	cf 92       	push	r12
    18e0:	df 92       	push	r13
    18e2:	ef 92       	push	r14
    18e4:	ff 92       	push	r15
    18e6:	0f 93       	push	r16
    18e8:	1f 93       	push	r17
    18ea:	cf 93       	push	r28
    18ec:	df 93       	push	r29
    18ee:	cd b7       	in	r28, 0x3d	; 61
    18f0:	de b7       	in	r29, 0x3e	; 62
    18f2:	ca 1b       	sub	r28, r26
    18f4:	db 0b       	sbc	r29, r27
    18f6:	0f b6       	in	r0, 0x3f	; 63
    18f8:	f8 94       	cli
    18fa:	de bf       	out	0x3e, r29	; 62
    18fc:	0f be       	out	0x3f, r0	; 63
    18fe:	cd bf       	out	0x3d, r28	; 61
    1900:	19 94       	eijmp

00001902 <__epilogue_restores__>:
    1902:	2a 88       	ldd	r2, Y+18	; 0x12
    1904:	39 88       	ldd	r3, Y+17	; 0x11
    1906:	48 88       	ldd	r4, Y+16	; 0x10
    1908:	5f 84       	ldd	r5, Y+15	; 0x0f
    190a:	6e 84       	ldd	r6, Y+14	; 0x0e
    190c:	7d 84       	ldd	r7, Y+13	; 0x0d
    190e:	8c 84       	ldd	r8, Y+12	; 0x0c
    1910:	9b 84       	ldd	r9, Y+11	; 0x0b
    1912:	aa 84       	ldd	r10, Y+10	; 0x0a
    1914:	b9 84       	ldd	r11, Y+9	; 0x09
    1916:	c8 84       	ldd	r12, Y+8	; 0x08
    1918:	df 80       	ldd	r13, Y+7	; 0x07
    191a:	ee 80       	ldd	r14, Y+6	; 0x06
    191c:	fd 80       	ldd	r15, Y+5	; 0x05
    191e:	0c 81       	ldd	r16, Y+4	; 0x04
    1920:	1b 81       	ldd	r17, Y+3	; 0x03
    1922:	aa 81       	ldd	r26, Y+2	; 0x02
    1924:	b9 81       	ldd	r27, Y+1	; 0x01
    1926:	ce 0f       	add	r28, r30
    1928:	d1 1d       	adc	r29, r1
    192a:	0f b6       	in	r0, 0x3f	; 63
    192c:	f8 94       	cli
    192e:	de bf       	out	0x3e, r29	; 62
    1930:	0f be       	out	0x3f, r0	; 63
    1932:	cd bf       	out	0x3d, r28	; 61
    1934:	ed 01       	movw	r28, r26
    1936:	08 95       	ret

00001938 <_exit>:
    1938:	f8 94       	cli

0000193a <__stop_program>:
    193a:	ff cf       	rjmp	.-2      	; 0x193a <__stop_program>
